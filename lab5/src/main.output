Terminals unused in grammar

    TRUE
    FALSE
    PRINTF
    SCANF
    LP
    RP
    WHILE
    ELSE
    IF
    FOR
    BOOL
    LOWER_THEN_ELSE


Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: statement
    3           | statements statement

    4 statement: SEMICOLON
    5          | declaration SEMICOLON
    6          | expr SEMICOLON
    7          | RETURN expr SEMICOLON
    8          | LC statements RC

    9 declaration: T IDENTIFIER ASSIGN expr
   10            | T IDENTIFIER

   11 expr: IDENTIFIER
   12     | INTEGER
   13     | CHAR
   14     | STRING
   15     | expr ASSIGN expr
   16     | expr RELOP expr
   17     | expr ADD expr
   18     | expr SUB expr
   19     | expr MUL expr
   20     | expr DIV expr
   21     | SUB expr

   22 T: T_INT
   23  | T_CHAR
   24  | T_BOOL
   25  | T_STRING


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    T_CHAR (258) 23
    T_INT (259) 22
    T_STRING (260) 25
    T_BOOL (261) 24
    TRUE (262)
    FALSE (263)
    ASSIGN (264) 9 15
    RELOP (265) 16
    ADD (266) 17
    SUB (267) 18 21
    MUL (268) 19
    DIV (269) 20
    PRINTF (270)
    SCANF (271)
    SEMICOLON (272) 4 5 6 7
    LP (273)
    RP (274)
    LC (275) 8
    RC (276) 8
    WHILE (277)
    ELSE (278)
    IF (279)
    RETURN (280) 7
    FOR (281)
    IDENTIFIER (282) 9 10 11
    INTEGER (283) 12
    CHAR (284) 13
    BOOL (285)
    STRING (286) 14
    LOWER_THEN_ELSE (287)


Nonterminals, with rules where they appear

    $accept (33)
        on left: 0
    program (34)
        on left: 1
        on right: 0
    statements (35)
        on left: 2 3
        on right: 1 3 8
    statement (36)
        on left: 4 5 6 7 8
        on right: 2 3
    declaration (37)
        on left: 9 10
        on right: 5
    expr (38)
        on left: 11 12 13 14 15 16 17 18 19 20 21
        on right: 6 7 9 15 16 17 18 19 20 21
    T (39)
        on left: 22 23 24 25
        on right: 9 10


State 0

    0 $accept: . program $end

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    SUB         shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LC          shift, and go to state 7
    RETURN      shift, and go to state 8
    IDENTIFIER  shift, and go to state 9
    INTEGER     shift, and go to state 10
    CHAR        shift, and go to state 11
    STRING      shift, and go to state 12

    program      go to state 13
    statements   go to state 14
    statement    go to state 15
    declaration  go to state 16
    expr         go to state 17
    T            go to state 18


State 1

   23 T: T_CHAR .

    $default  reduce using rule 23 (T)


State 2

   22 T: T_INT .

    $default  reduce using rule 22 (T)


State 3

   25 T: T_STRING .

    $default  reduce using rule 25 (T)


State 4

   24 T: T_BOOL .

    $default  reduce using rule 24 (T)


State 5

   21 expr: SUB . expr

    SUB         shift, and go to state 5
    IDENTIFIER  shift, and go to state 9
    INTEGER     shift, and go to state 10
    CHAR        shift, and go to state 11
    STRING      shift, and go to state 12

    expr  go to state 19


State 6

    4 statement: SEMICOLON .

    $default  reduce using rule 4 (statement)


State 7

    8 statement: LC . statements RC

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    SUB         shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LC          shift, and go to state 7
    RETURN      shift, and go to state 8
    IDENTIFIER  shift, and go to state 9
    INTEGER     shift, and go to state 10
    CHAR        shift, and go to state 11
    STRING      shift, and go to state 12

    statements   go to state 20
    statement    go to state 15
    declaration  go to state 16
    expr         go to state 17
    T            go to state 18


State 8

    7 statement: RETURN . expr SEMICOLON

    SUB         shift, and go to state 5
    IDENTIFIER  shift, and go to state 9
    INTEGER     shift, and go to state 10
    CHAR        shift, and go to state 11
    STRING      shift, and go to state 12

    expr  go to state 21


State 9

   11 expr: IDENTIFIER .

    $default  reduce using rule 11 (expr)


State 10

   12 expr: INTEGER .

    $default  reduce using rule 12 (expr)


State 11

   13 expr: CHAR .

    $default  reduce using rule 13 (expr)


State 12

   14 expr: STRING .

    $default  reduce using rule 14 (expr)


State 13

    0 $accept: program . $end

    $end  shift, and go to state 22


State 14

    1 program: statements .
    3 statements: statements . statement

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    SUB         shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LC          shift, and go to state 7
    RETURN      shift, and go to state 8
    IDENTIFIER  shift, and go to state 9
    INTEGER     shift, and go to state 10
    CHAR        shift, and go to state 11
    STRING      shift, and go to state 12

    $default  reduce using rule 1 (program)

    statement    go to state 23
    declaration  go to state 16
    expr         go to state 17
    T            go to state 18


State 15

    2 statements: statement .

    $default  reduce using rule 2 (statements)


State 16

    5 statement: declaration . SEMICOLON

    SEMICOLON  shift, and go to state 24


State 17

    6 statement: expr . SEMICOLON
   15 expr: expr . ASSIGN expr
   16     | expr . RELOP expr
   17     | expr . ADD expr
   18     | expr . SUB expr
   19     | expr . MUL expr
   20     | expr . DIV expr

    ASSIGN     shift, and go to state 25
    RELOP      shift, and go to state 26
    ADD        shift, and go to state 27
    SUB        shift, and go to state 28
    MUL        shift, and go to state 29
    DIV        shift, and go to state 30
    SEMICOLON  shift, and go to state 31


State 18

    9 declaration: T . IDENTIFIER ASSIGN expr
   10            | T . IDENTIFIER

    IDENTIFIER  shift, and go to state 32


State 19

   15 expr: expr . ASSIGN expr
   16     | expr . RELOP expr
   17     | expr . ADD expr
   18     | expr . SUB expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   21     | SUB expr .

    ASSIGN  shift, and go to state 25
    RELOP   shift, and go to state 26

    $default  reduce using rule 21 (expr)


State 20

    3 statements: statements . statement
    8 statement: LC statements . RC

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    SUB         shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LC          shift, and go to state 7
    RC          shift, and go to state 33
    RETURN      shift, and go to state 8
    IDENTIFIER  shift, and go to state 9
    INTEGER     shift, and go to state 10
    CHAR        shift, and go to state 11
    STRING      shift, and go to state 12

    statement    go to state 23
    declaration  go to state 16
    expr         go to state 17
    T            go to state 18


State 21

    7 statement: RETURN expr . SEMICOLON
   15 expr: expr . ASSIGN expr
   16     | expr . RELOP expr
   17     | expr . ADD expr
   18     | expr . SUB expr
   19     | expr . MUL expr
   20     | expr . DIV expr

    ASSIGN     shift, and go to state 25
    RELOP      shift, and go to state 26
    ADD        shift, and go to state 27
    SUB        shift, and go to state 28
    MUL        shift, and go to state 29
    DIV        shift, and go to state 30
    SEMICOLON  shift, and go to state 34


State 22

    0 $accept: program $end .

    $default  accept


State 23

    3 statements: statements statement .

    $default  reduce using rule 3 (statements)


State 24

    5 statement: declaration SEMICOLON .

    $default  reduce using rule 5 (statement)


State 25

   15 expr: expr ASSIGN . expr

    SUB         shift, and go to state 5
    IDENTIFIER  shift, and go to state 9
    INTEGER     shift, and go to state 10
    CHAR        shift, and go to state 11
    STRING      shift, and go to state 12

    expr  go to state 35


State 26

   16 expr: expr RELOP . expr

    SUB         shift, and go to state 5
    IDENTIFIER  shift, and go to state 9
    INTEGER     shift, and go to state 10
    CHAR        shift, and go to state 11
    STRING      shift, and go to state 12

    expr  go to state 36


State 27

   17 expr: expr ADD . expr

    SUB         shift, and go to state 5
    IDENTIFIER  shift, and go to state 9
    INTEGER     shift, and go to state 10
    CHAR        shift, and go to state 11
    STRING      shift, and go to state 12

    expr  go to state 37


State 28

   18 expr: expr SUB . expr

    SUB         shift, and go to state 5
    IDENTIFIER  shift, and go to state 9
    INTEGER     shift, and go to state 10
    CHAR        shift, and go to state 11
    STRING      shift, and go to state 12

    expr  go to state 38


State 29

   19 expr: expr MUL . expr

    SUB         shift, and go to state 5
    IDENTIFIER  shift, and go to state 9
    INTEGER     shift, and go to state 10
    CHAR        shift, and go to state 11
    STRING      shift, and go to state 12

    expr  go to state 39


State 30

   20 expr: expr DIV . expr

    SUB         shift, and go to state 5
    IDENTIFIER  shift, and go to state 9
    INTEGER     shift, and go to state 10
    CHAR        shift, and go to state 11
    STRING      shift, and go to state 12

    expr  go to state 40


State 31

    6 statement: expr SEMICOLON .

    $default  reduce using rule 6 (statement)


State 32

    9 declaration: T IDENTIFIER . ASSIGN expr
   10            | T IDENTIFIER .

    ASSIGN  shift, and go to state 41

    $default  reduce using rule 10 (declaration)


State 33

    8 statement: LC statements RC .

    $default  reduce using rule 8 (statement)


State 34

    7 statement: RETURN expr SEMICOLON .

    $default  reduce using rule 7 (statement)


State 35

   15 expr: expr . ASSIGN expr
   15     | expr ASSIGN expr .
   16     | expr . RELOP expr
   17     | expr . ADD expr
   18     | expr . SUB expr
   19     | expr . MUL expr
   20     | expr . DIV expr

    ASSIGN  shift, and go to state 25

    $default  reduce using rule 15 (expr)


State 36

   15 expr: expr . ASSIGN expr
   16     | expr . RELOP expr
   16     | expr RELOP expr .
   17     | expr . ADD expr
   18     | expr . SUB expr
   19     | expr . MUL expr
   20     | expr . DIV expr

    ASSIGN  shift, and go to state 25

    $default  reduce using rule 16 (expr)


State 37

   15 expr: expr . ASSIGN expr
   16     | expr . RELOP expr
   17     | expr . ADD expr
   17     | expr ADD expr .
   18     | expr . SUB expr
   19     | expr . MUL expr
   20     | expr . DIV expr

    ASSIGN  shift, and go to state 25
    RELOP   shift, and go to state 26

    $default  reduce using rule 17 (expr)


State 38

   15 expr: expr . ASSIGN expr
   16     | expr . RELOP expr
   17     | expr . ADD expr
   18     | expr . SUB expr
   18     | expr SUB expr .
   19     | expr . MUL expr
   20     | expr . DIV expr

    ASSIGN  shift, and go to state 25
    RELOP   shift, and go to state 26

    $default  reduce using rule 18 (expr)


State 39

   15 expr: expr . ASSIGN expr
   16     | expr . RELOP expr
   17     | expr . ADD expr
   18     | expr . SUB expr
   19     | expr . MUL expr
   19     | expr MUL expr .
   20     | expr . DIV expr

    ASSIGN  shift, and go to state 25
    RELOP   shift, and go to state 26
    ADD     shift, and go to state 27
    SUB     shift, and go to state 28

    $default  reduce using rule 19 (expr)


State 40

   15 expr: expr . ASSIGN expr
   16     | expr . RELOP expr
   17     | expr . ADD expr
   18     | expr . SUB expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   20     | expr DIV expr .

    ASSIGN  shift, and go to state 25
    RELOP   shift, and go to state 26
    ADD     shift, and go to state 27
    SUB     shift, and go to state 28

    $default  reduce using rule 20 (expr)


State 41

    9 declaration: T IDENTIFIER ASSIGN . expr

    SUB         shift, and go to state 5
    IDENTIFIER  shift, and go to state 9
    INTEGER     shift, and go to state 10
    CHAR        shift, and go to state 11
    STRING      shift, and go to state 12

    expr  go to state 42


State 42

    9 declaration: T IDENTIFIER ASSIGN expr .
   15 expr: expr . ASSIGN expr
   16     | expr . RELOP expr
   17     | expr . ADD expr
   18     | expr . SUB expr
   19     | expr . MUL expr
   20     | expr . DIV expr

    ASSIGN  shift, and go to state 25
    RELOP   shift, and go to state 26
    ADD     shift, and go to state 27
    SUB     shift, and go to state 28
    MUL     shift, and go to state 29
    DIV     shift, and go to state 30

    $default  reduce using rule 9 (declaration)
