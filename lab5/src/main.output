Terminals unused in grammar

    INC
    DEC
    BOOL


State 39 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: statement
    3           | statements statement

    4 statement: SEMICOLON
    5          | declaration SEMICOLON
    6          | expr SEMICOLON
    7          | RETURN expr SEMICOLON
    8          | if_else
    9          | while
   10          | for
   11          | scanf SEMICOLON
   12          | printf SEMICOLON
   13          | LC statements RC
   14          | func_statement

   15 func_statement: T IDENTIFIER LP RP statement

   16 if_else: IF bool_expr statement
   17        | IF LP bool_expr RP statement ELSE statement

   18 while: WHILE bool_expr statement

   19 for: FOR LP statement statement statement RP statement

   20 printf: PRINTF LP expr COMMA io_list RP

   21 scanf: SCANF LP expr RP
   22      | SCANF LP expr COMMA io_list RP

   23 io_list: IDENTIFIER
   24        | STRING
   25        | INTEGER
   26        | QUOTE CHAR

   27 declaration: T IDENTIFIER ASSIGN expr
   28            | T id_list

   29 id_list: IDENTIFIER
   30        | IDENTIFIER COMMA id_list

   31 bool_expr: TRUE
   32          | FALSE
   33          | expr
   34          | bool_expr AND bool_expr
   35          | bool_expr OR bool_expr
   36          | NOT bool_expr
   37          | bool_expr RELOP bool_expr

   38 expr: IDENTIFIER
   39     | INTEGER
   40     | CHAR
   41     | STRING
   42     | expr ASSIGN expr
   43     | expr ADD_ASSIGN expr
   44     | expr SUB_ASSIGN expr
   45     | expr MUL_ASSIGN expr
   46     | expr DIV_ASSIGN expr
   47     | expr ADD expr
   48     | expr SUB expr
   49     | expr MUL expr
   50     | expr DIV expr
   51     | SUB expr

   52 T: T_INT
   53  | T_CHAR
   54  | T_BOOL
   55  | T_STRING
   56  | T_VOID


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    T_CHAR (258) 53
    T_INT (259) 52
    T_STRING (260) 55
    T_BOOL (261) 54
    T_VOID (262) 56
    TRUE (263) 31
    FALSE (264) 32
    ASSIGN (265) 27 42
    ADD_ASSIGN (266) 43
    SUB_ASSIGN (267) 44
    MUL_ASSIGN (268) 45
    DIV_ASSIGN (269) 46
    RELOP (270) 37
    ADD (271) 47
    SUB (272) 48 51
    MUL (273) 49
    DIV (274) 50
    INC (275)
    DEC (276)
    AND (277) 34
    OR (278) 35
    NOT (279) 36
    PRINTF (280) 20
    SCANF (281) 21 22
    QUOTE (282) 26
    SEMICOLON (283) 4 5 6 7 11 12
    COMMA (284) 20 22 30
    LP (285) 15 17 19 20 21 22
    RP (286) 15 17 19 20 21 22
    LC (287) 13
    RC (288) 13
    WHILE (289) 18
    ELSE (290) 17
    IF (291) 16 17
    RETURN (292) 7
    FOR (293) 19
    IDENTIFIER (294) 15 23 27 29 30 38
    INTEGER (295) 25 39
    CHAR (296) 26 40
    BOOL (297)
    STRING (298) 24 41
    LOWER_THEN_ELSE (299)


Nonterminals, with rules where they appear

    $accept (45)
        on left: 0
    program (46)
        on left: 1
        on right: 0
    statements (47)
        on left: 2 3
        on right: 1 3 13
    statement (48)
        on left: 4 5 6 7 8 9 10 11 12 13 14
        on right: 2 3 15 16 17 18 19
    func_statement (49)
        on left: 15
        on right: 14
    if_else (50)
        on left: 16 17
        on right: 8
    while (51)
        on left: 18
        on right: 9
    for (52)
        on left: 19
        on right: 10
    printf (53)
        on left: 20
        on right: 12
    scanf (54)
        on left: 21 22
        on right: 11
    io_list (55)
        on left: 23 24 25 26
        on right: 20 22
    declaration (56)
        on left: 27 28
        on right: 5
    id_list (57)
        on left: 29 30
        on right: 28 30
    bool_expr (58)
        on left: 31 32 33 34 35 36 37
        on right: 16 17 18 34 35 36 37
    expr (59)
        on left: 38 39 40 41 42 43 44 45 46 47 48 49 50 51
        on right: 6 7 20 21 22 27 33 42 43 44 45 46 47 48 49 50 51
    T (60)
        on left: 52 53 54 55 56
        on right: 15 27 28


State 0

    0 $accept: . program $end

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    SUB         shift, and go to state 6
    PRINTF      shift, and go to state 7
    SCANF       shift, and go to state 8
    SEMICOLON   shift, and go to state 9
    LC          shift, and go to state 10
    WHILE       shift, and go to state 11
    IF          shift, and go to state 12
    RETURN      shift, and go to state 13
    FOR         shift, and go to state 14
    IDENTIFIER  shift, and go to state 15
    INTEGER     shift, and go to state 16
    CHAR        shift, and go to state 17
    STRING      shift, and go to state 18

    program         go to state 19
    statements      go to state 20
    statement       go to state 21
    func_statement  go to state 22
    if_else         go to state 23
    while           go to state 24
    for             go to state 25
    printf          go to state 26
    scanf           go to state 27
    declaration     go to state 28
    expr            go to state 29
    T               go to state 30


State 1

   53 T: T_CHAR .

    $default  reduce using rule 53 (T)


State 2

   52 T: T_INT .

    $default  reduce using rule 52 (T)


State 3

   55 T: T_STRING .

    $default  reduce using rule 55 (T)


State 4

   54 T: T_BOOL .

    $default  reduce using rule 54 (T)


State 5

   56 T: T_VOID .

    $default  reduce using rule 56 (T)


State 6

   51 expr: SUB . expr

    SUB         shift, and go to state 6
    IDENTIFIER  shift, and go to state 15
    INTEGER     shift, and go to state 16
    CHAR        shift, and go to state 17
    STRING      shift, and go to state 18

    expr  go to state 31


State 7

   20 printf: PRINTF . LP expr COMMA io_list RP

    LP  shift, and go to state 32


State 8

   21 scanf: SCANF . LP expr RP
   22      | SCANF . LP expr COMMA io_list RP

    LP  shift, and go to state 33


State 9

    4 statement: SEMICOLON .

    $default  reduce using rule 4 (statement)


State 10

   13 statement: LC . statements RC

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    SUB         shift, and go to state 6
    PRINTF      shift, and go to state 7
    SCANF       shift, and go to state 8
    SEMICOLON   shift, and go to state 9
    LC          shift, and go to state 10
    WHILE       shift, and go to state 11
    IF          shift, and go to state 12
    RETURN      shift, and go to state 13
    FOR         shift, and go to state 14
    IDENTIFIER  shift, and go to state 15
    INTEGER     shift, and go to state 16
    CHAR        shift, and go to state 17
    STRING      shift, and go to state 18

    statements      go to state 34
    statement       go to state 21
    func_statement  go to state 22
    if_else         go to state 23
    while           go to state 24
    for             go to state 25
    printf          go to state 26
    scanf           go to state 27
    declaration     go to state 28
    expr            go to state 29
    T               go to state 30


State 11

   18 while: WHILE . bool_expr statement

    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    SUB         shift, and go to state 6
    NOT         shift, and go to state 37
    IDENTIFIER  shift, and go to state 15
    INTEGER     shift, and go to state 16
    CHAR        shift, and go to state 17
    STRING      shift, and go to state 18

    bool_expr  go to state 38
    expr       go to state 39


State 12

   16 if_else: IF . bool_expr statement
   17        | IF . LP bool_expr RP statement ELSE statement

    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    SUB         shift, and go to state 6
    NOT         shift, and go to state 37
    LP          shift, and go to state 40
    IDENTIFIER  shift, and go to state 15
    INTEGER     shift, and go to state 16
    CHAR        shift, and go to state 17
    STRING      shift, and go to state 18

    bool_expr  go to state 41
    expr       go to state 39


State 13

    7 statement: RETURN . expr SEMICOLON

    SUB         shift, and go to state 6
    IDENTIFIER  shift, and go to state 15
    INTEGER     shift, and go to state 16
    CHAR        shift, and go to state 17
    STRING      shift, and go to state 18

    expr  go to state 42


State 14

   19 for: FOR . LP statement statement statement RP statement

    LP  shift, and go to state 43


State 15

   38 expr: IDENTIFIER .

    $default  reduce using rule 38 (expr)


State 16

   39 expr: INTEGER .

    $default  reduce using rule 39 (expr)


State 17

   40 expr: CHAR .

    $default  reduce using rule 40 (expr)


State 18

   41 expr: STRING .

    $default  reduce using rule 41 (expr)


State 19

    0 $accept: program . $end

    $end  shift, and go to state 44


State 20

    1 program: statements .
    3 statements: statements . statement

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    SUB         shift, and go to state 6
    PRINTF      shift, and go to state 7
    SCANF       shift, and go to state 8
    SEMICOLON   shift, and go to state 9
    LC          shift, and go to state 10
    WHILE       shift, and go to state 11
    IF          shift, and go to state 12
    RETURN      shift, and go to state 13
    FOR         shift, and go to state 14
    IDENTIFIER  shift, and go to state 15
    INTEGER     shift, and go to state 16
    CHAR        shift, and go to state 17
    STRING      shift, and go to state 18

    $default  reduce using rule 1 (program)

    statement       go to state 45
    func_statement  go to state 22
    if_else         go to state 23
    while           go to state 24
    for             go to state 25
    printf          go to state 26
    scanf           go to state 27
    declaration     go to state 28
    expr            go to state 29
    T               go to state 30


State 21

    2 statements: statement .

    $default  reduce using rule 2 (statements)


State 22

   14 statement: func_statement .

    $default  reduce using rule 14 (statement)


State 23

    8 statement: if_else .

    $default  reduce using rule 8 (statement)


State 24

    9 statement: while .

    $default  reduce using rule 9 (statement)


State 25

   10 statement: for .

    $default  reduce using rule 10 (statement)


State 26

   12 statement: printf . SEMICOLON

    SEMICOLON  shift, and go to state 46


State 27

   11 statement: scanf . SEMICOLON

    SEMICOLON  shift, and go to state 47


State 28

    5 statement: declaration . SEMICOLON

    SEMICOLON  shift, and go to state 48


State 29

    6 statement: expr . SEMICOLON
   42 expr: expr . ASSIGN expr
   43     | expr . ADD_ASSIGN expr
   44     | expr . SUB_ASSIGN expr
   45     | expr . MUL_ASSIGN expr
   46     | expr . DIV_ASSIGN expr
   47     | expr . ADD expr
   48     | expr . SUB expr
   49     | expr . MUL expr
   50     | expr . DIV expr

    ASSIGN      shift, and go to state 49
    ADD_ASSIGN  shift, and go to state 50
    SUB_ASSIGN  shift, and go to state 51
    MUL_ASSIGN  shift, and go to state 52
    DIV_ASSIGN  shift, and go to state 53
    ADD         shift, and go to state 54
    SUB         shift, and go to state 55
    MUL         shift, and go to state 56
    DIV         shift, and go to state 57
    SEMICOLON   shift, and go to state 58


State 30

   15 func_statement: T . IDENTIFIER LP RP statement
   27 declaration: T . IDENTIFIER ASSIGN expr
   28            | T . id_list

    IDENTIFIER  shift, and go to state 59

    id_list  go to state 60


State 31

   42 expr: expr . ASSIGN expr
   43     | expr . ADD_ASSIGN expr
   44     | expr . SUB_ASSIGN expr
   45     | expr . MUL_ASSIGN expr
   46     | expr . DIV_ASSIGN expr
   47     | expr . ADD expr
   48     | expr . SUB expr
   49     | expr . MUL expr
   50     | expr . DIV expr
   51     | SUB expr .

    ASSIGN      shift, and go to state 49
    ADD_ASSIGN  shift, and go to state 50
    SUB_ASSIGN  shift, and go to state 51
    MUL_ASSIGN  shift, and go to state 52
    DIV_ASSIGN  shift, and go to state 53

    $default  reduce using rule 51 (expr)


State 32

   20 printf: PRINTF LP . expr COMMA io_list RP

    SUB         shift, and go to state 6
    IDENTIFIER  shift, and go to state 15
    INTEGER     shift, and go to state 16
    CHAR        shift, and go to state 17
    STRING      shift, and go to state 18

    expr  go to state 61


State 33

   21 scanf: SCANF LP . expr RP
   22      | SCANF LP . expr COMMA io_list RP

    SUB         shift, and go to state 6
    IDENTIFIER  shift, and go to state 15
    INTEGER     shift, and go to state 16
    CHAR        shift, and go to state 17
    STRING      shift, and go to state 18

    expr  go to state 62


State 34

    3 statements: statements . statement
   13 statement: LC statements . RC

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    SUB         shift, and go to state 6
    PRINTF      shift, and go to state 7
    SCANF       shift, and go to state 8
    SEMICOLON   shift, and go to state 9
    LC          shift, and go to state 10
    RC          shift, and go to state 63
    WHILE       shift, and go to state 11
    IF          shift, and go to state 12
    RETURN      shift, and go to state 13
    FOR         shift, and go to state 14
    IDENTIFIER  shift, and go to state 15
    INTEGER     shift, and go to state 16
    CHAR        shift, and go to state 17
    STRING      shift, and go to state 18

    statement       go to state 45
    func_statement  go to state 22
    if_else         go to state 23
    while           go to state 24
    for             go to state 25
    printf          go to state 26
    scanf           go to state 27
    declaration     go to state 28
    expr            go to state 29
    T               go to state 30


State 35

   31 bool_expr: TRUE .

    $default  reduce using rule 31 (bool_expr)


State 36

   32 bool_expr: FALSE .

    $default  reduce using rule 32 (bool_expr)


State 37

   36 bool_expr: NOT . bool_expr

    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    SUB         shift, and go to state 6
    NOT         shift, and go to state 37
    IDENTIFIER  shift, and go to state 15
    INTEGER     shift, and go to state 16
    CHAR        shift, and go to state 17
    STRING      shift, and go to state 18

    bool_expr  go to state 64
    expr       go to state 39


State 38

   18 while: WHILE bool_expr . statement
   34 bool_expr: bool_expr . AND bool_expr
   35          | bool_expr . OR bool_expr
   37          | bool_expr . RELOP bool_expr

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    RELOP       shift, and go to state 65
    SUB         shift, and go to state 6
    AND         shift, and go to state 66
    OR          shift, and go to state 67
    PRINTF      shift, and go to state 7
    SCANF       shift, and go to state 8
    SEMICOLON   shift, and go to state 9
    LC          shift, and go to state 10
    WHILE       shift, and go to state 11
    IF          shift, and go to state 12
    RETURN      shift, and go to state 13
    FOR         shift, and go to state 14
    IDENTIFIER  shift, and go to state 15
    INTEGER     shift, and go to state 16
    CHAR        shift, and go to state 17
    STRING      shift, and go to state 18

    statement       go to state 68
    func_statement  go to state 22
    if_else         go to state 23
    while           go to state 24
    for             go to state 25
    printf          go to state 26
    scanf           go to state 27
    declaration     go to state 28
    expr            go to state 29
    T               go to state 30


State 39

   33 bool_expr: expr .
   42 expr: expr . ASSIGN expr
   43     | expr . ADD_ASSIGN expr
   44     | expr . SUB_ASSIGN expr
   45     | expr . MUL_ASSIGN expr
   46     | expr . DIV_ASSIGN expr
   47     | expr . ADD expr
   48     | expr . SUB expr
   49     | expr . MUL expr
   50     | expr . DIV expr

    ASSIGN      shift, and go to state 49
    ADD_ASSIGN  shift, and go to state 50
    SUB_ASSIGN  shift, and go to state 51
    MUL_ASSIGN  shift, and go to state 52
    DIV_ASSIGN  shift, and go to state 53
    ADD         shift, and go to state 54
    SUB         shift, and go to state 55
    MUL         shift, and go to state 56
    DIV         shift, and go to state 57

    SUB       [reduce using rule 33 (bool_expr)]
    $default  reduce using rule 33 (bool_expr)


State 40

   17 if_else: IF LP . bool_expr RP statement ELSE statement

    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    SUB         shift, and go to state 6
    NOT         shift, and go to state 37
    IDENTIFIER  shift, and go to state 15
    INTEGER     shift, and go to state 16
    CHAR        shift, and go to state 17
    STRING      shift, and go to state 18

    bool_expr  go to state 69
    expr       go to state 39


State 41

   16 if_else: IF bool_expr . statement
   34 bool_expr: bool_expr . AND bool_expr
   35          | bool_expr . OR bool_expr
   37          | bool_expr . RELOP bool_expr

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    RELOP       shift, and go to state 65
    SUB         shift, and go to state 6
    AND         shift, and go to state 66
    OR          shift, and go to state 67
    PRINTF      shift, and go to state 7
    SCANF       shift, and go to state 8
    SEMICOLON   shift, and go to state 9
    LC          shift, and go to state 10
    WHILE       shift, and go to state 11
    IF          shift, and go to state 12
    RETURN      shift, and go to state 13
    FOR         shift, and go to state 14
    IDENTIFIER  shift, and go to state 15
    INTEGER     shift, and go to state 16
    CHAR        shift, and go to state 17
    STRING      shift, and go to state 18

    statement       go to state 70
    func_statement  go to state 22
    if_else         go to state 23
    while           go to state 24
    for             go to state 25
    printf          go to state 26
    scanf           go to state 27
    declaration     go to state 28
    expr            go to state 29
    T               go to state 30


State 42

    7 statement: RETURN expr . SEMICOLON
   42 expr: expr . ASSIGN expr
   43     | expr . ADD_ASSIGN expr
   44     | expr . SUB_ASSIGN expr
   45     | expr . MUL_ASSIGN expr
   46     | expr . DIV_ASSIGN expr
   47     | expr . ADD expr
   48     | expr . SUB expr
   49     | expr . MUL expr
   50     | expr . DIV expr

    ASSIGN      shift, and go to state 49
    ADD_ASSIGN  shift, and go to state 50
    SUB_ASSIGN  shift, and go to state 51
    MUL_ASSIGN  shift, and go to state 52
    DIV_ASSIGN  shift, and go to state 53
    ADD         shift, and go to state 54
    SUB         shift, and go to state 55
    MUL         shift, and go to state 56
    DIV         shift, and go to state 57
    SEMICOLON   shift, and go to state 71


State 43

   19 for: FOR LP . statement statement statement RP statement

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    SUB         shift, and go to state 6
    PRINTF      shift, and go to state 7
    SCANF       shift, and go to state 8
    SEMICOLON   shift, and go to state 9
    LC          shift, and go to state 10
    WHILE       shift, and go to state 11
    IF          shift, and go to state 12
    RETURN      shift, and go to state 13
    FOR         shift, and go to state 14
    IDENTIFIER  shift, and go to state 15
    INTEGER     shift, and go to state 16
    CHAR        shift, and go to state 17
    STRING      shift, and go to state 18

    statement       go to state 72
    func_statement  go to state 22
    if_else         go to state 23
    while           go to state 24
    for             go to state 25
    printf          go to state 26
    scanf           go to state 27
    declaration     go to state 28
    expr            go to state 29
    T               go to state 30


State 44

    0 $accept: program $end .

    $default  accept


State 45

    3 statements: statements statement .

    $default  reduce using rule 3 (statements)


State 46

   12 statement: printf SEMICOLON .

    $default  reduce using rule 12 (statement)


State 47

   11 statement: scanf SEMICOLON .

    $default  reduce using rule 11 (statement)


State 48

    5 statement: declaration SEMICOLON .

    $default  reduce using rule 5 (statement)


State 49

   42 expr: expr ASSIGN . expr

    SUB         shift, and go to state 6
    IDENTIFIER  shift, and go to state 15
    INTEGER     shift, and go to state 16
    CHAR        shift, and go to state 17
    STRING      shift, and go to state 18

    expr  go to state 73


State 50

   43 expr: expr ADD_ASSIGN . expr

    SUB         shift, and go to state 6
    IDENTIFIER  shift, and go to state 15
    INTEGER     shift, and go to state 16
    CHAR        shift, and go to state 17
    STRING      shift, and go to state 18

    expr  go to state 74


State 51

   44 expr: expr SUB_ASSIGN . expr

    SUB         shift, and go to state 6
    IDENTIFIER  shift, and go to state 15
    INTEGER     shift, and go to state 16
    CHAR        shift, and go to state 17
    STRING      shift, and go to state 18

    expr  go to state 75


State 52

   45 expr: expr MUL_ASSIGN . expr

    SUB         shift, and go to state 6
    IDENTIFIER  shift, and go to state 15
    INTEGER     shift, and go to state 16
    CHAR        shift, and go to state 17
    STRING      shift, and go to state 18

    expr  go to state 76


State 53

   46 expr: expr DIV_ASSIGN . expr

    SUB         shift, and go to state 6
    IDENTIFIER  shift, and go to state 15
    INTEGER     shift, and go to state 16
    CHAR        shift, and go to state 17
    STRING      shift, and go to state 18

    expr  go to state 77


State 54

   47 expr: expr ADD . expr

    SUB         shift, and go to state 6
    IDENTIFIER  shift, and go to state 15
    INTEGER     shift, and go to state 16
    CHAR        shift, and go to state 17
    STRING      shift, and go to state 18

    expr  go to state 78


State 55

   48 expr: expr SUB . expr

    SUB         shift, and go to state 6
    IDENTIFIER  shift, and go to state 15
    INTEGER     shift, and go to state 16
    CHAR        shift, and go to state 17
    STRING      shift, and go to state 18

    expr  go to state 79


State 56

   49 expr: expr MUL . expr

    SUB         shift, and go to state 6
    IDENTIFIER  shift, and go to state 15
    INTEGER     shift, and go to state 16
    CHAR        shift, and go to state 17
    STRING      shift, and go to state 18

    expr  go to state 80


State 57

   50 expr: expr DIV . expr

    SUB         shift, and go to state 6
    IDENTIFIER  shift, and go to state 15
    INTEGER     shift, and go to state 16
    CHAR        shift, and go to state 17
    STRING      shift, and go to state 18

    expr  go to state 81


State 58

    6 statement: expr SEMICOLON .

    $default  reduce using rule 6 (statement)


State 59

   15 func_statement: T IDENTIFIER . LP RP statement
   27 declaration: T IDENTIFIER . ASSIGN expr
   29 id_list: IDENTIFIER .
   30        | IDENTIFIER . COMMA id_list

    ASSIGN  shift, and go to state 82
    COMMA   shift, and go to state 83
    LP      shift, and go to state 84

    $default  reduce using rule 29 (id_list)


State 60

   28 declaration: T id_list .

    $default  reduce using rule 28 (declaration)


State 61

   20 printf: PRINTF LP expr . COMMA io_list RP
   42 expr: expr . ASSIGN expr
   43     | expr . ADD_ASSIGN expr
   44     | expr . SUB_ASSIGN expr
   45     | expr . MUL_ASSIGN expr
   46     | expr . DIV_ASSIGN expr
   47     | expr . ADD expr
   48     | expr . SUB expr
   49     | expr . MUL expr
   50     | expr . DIV expr

    ASSIGN      shift, and go to state 49
    ADD_ASSIGN  shift, and go to state 50
    SUB_ASSIGN  shift, and go to state 51
    MUL_ASSIGN  shift, and go to state 52
    DIV_ASSIGN  shift, and go to state 53
    ADD         shift, and go to state 54
    SUB         shift, and go to state 55
    MUL         shift, and go to state 56
    DIV         shift, and go to state 57
    COMMA       shift, and go to state 85


State 62

   21 scanf: SCANF LP expr . RP
   22      | SCANF LP expr . COMMA io_list RP
   42 expr: expr . ASSIGN expr
   43     | expr . ADD_ASSIGN expr
   44     | expr . SUB_ASSIGN expr
   45     | expr . MUL_ASSIGN expr
   46     | expr . DIV_ASSIGN expr
   47     | expr . ADD expr
   48     | expr . SUB expr
   49     | expr . MUL expr
   50     | expr . DIV expr

    ASSIGN      shift, and go to state 49
    ADD_ASSIGN  shift, and go to state 50
    SUB_ASSIGN  shift, and go to state 51
    MUL_ASSIGN  shift, and go to state 52
    DIV_ASSIGN  shift, and go to state 53
    ADD         shift, and go to state 54
    SUB         shift, and go to state 55
    MUL         shift, and go to state 56
    DIV         shift, and go to state 57
    COMMA       shift, and go to state 86
    RP          shift, and go to state 87


State 63

   13 statement: LC statements RC .

    $default  reduce using rule 13 (statement)


State 64

   34 bool_expr: bool_expr . AND bool_expr
   35          | bool_expr . OR bool_expr
   36          | NOT bool_expr .
   37          | bool_expr . RELOP bool_expr

    RELOP  shift, and go to state 65
    AND    shift, and go to state 66
    OR     shift, and go to state 67

    $default  reduce using rule 36 (bool_expr)


State 65

   37 bool_expr: bool_expr RELOP . bool_expr

    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    SUB         shift, and go to state 6
    NOT         shift, and go to state 37
    IDENTIFIER  shift, and go to state 15
    INTEGER     shift, and go to state 16
    CHAR        shift, and go to state 17
    STRING      shift, and go to state 18

    bool_expr  go to state 88
    expr       go to state 39


State 66

   34 bool_expr: bool_expr AND . bool_expr

    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    SUB         shift, and go to state 6
    NOT         shift, and go to state 37
    IDENTIFIER  shift, and go to state 15
    INTEGER     shift, and go to state 16
    CHAR        shift, and go to state 17
    STRING      shift, and go to state 18

    bool_expr  go to state 89
    expr       go to state 39


State 67

   35 bool_expr: bool_expr OR . bool_expr

    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    SUB         shift, and go to state 6
    NOT         shift, and go to state 37
    IDENTIFIER  shift, and go to state 15
    INTEGER     shift, and go to state 16
    CHAR        shift, and go to state 17
    STRING      shift, and go to state 18

    bool_expr  go to state 90
    expr       go to state 39


State 68

   18 while: WHILE bool_expr statement .

    $default  reduce using rule 18 (while)


State 69

   17 if_else: IF LP bool_expr . RP statement ELSE statement
   34 bool_expr: bool_expr . AND bool_expr
   35          | bool_expr . OR bool_expr
   37          | bool_expr . RELOP bool_expr

    RELOP  shift, and go to state 65
    AND    shift, and go to state 66
    OR     shift, and go to state 67
    RP     shift, and go to state 91


State 70

   16 if_else: IF bool_expr statement .

    $default  reduce using rule 16 (if_else)


State 71

    7 statement: RETURN expr SEMICOLON .

    $default  reduce using rule 7 (statement)


State 72

   19 for: FOR LP statement . statement statement RP statement

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    SUB         shift, and go to state 6
    PRINTF      shift, and go to state 7
    SCANF       shift, and go to state 8
    SEMICOLON   shift, and go to state 9
    LC          shift, and go to state 10
    WHILE       shift, and go to state 11
    IF          shift, and go to state 12
    RETURN      shift, and go to state 13
    FOR         shift, and go to state 14
    IDENTIFIER  shift, and go to state 15
    INTEGER     shift, and go to state 16
    CHAR        shift, and go to state 17
    STRING      shift, and go to state 18

    statement       go to state 92
    func_statement  go to state 22
    if_else         go to state 23
    while           go to state 24
    for             go to state 25
    printf          go to state 26
    scanf           go to state 27
    declaration     go to state 28
    expr            go to state 29
    T               go to state 30


State 73

   42 expr: expr . ASSIGN expr
   42     | expr ASSIGN expr .
   43     | expr . ADD_ASSIGN expr
   44     | expr . SUB_ASSIGN expr
   45     | expr . MUL_ASSIGN expr
   46     | expr . DIV_ASSIGN expr
   47     | expr . ADD expr
   48     | expr . SUB expr
   49     | expr . MUL expr
   50     | expr . DIV expr

    ASSIGN      shift, and go to state 49
    ADD_ASSIGN  shift, and go to state 50
    SUB_ASSIGN  shift, and go to state 51
    MUL_ASSIGN  shift, and go to state 52
    DIV_ASSIGN  shift, and go to state 53

    $default  reduce using rule 42 (expr)


State 74

   42 expr: expr . ASSIGN expr
   43     | expr . ADD_ASSIGN expr
   43     | expr ADD_ASSIGN expr .
   44     | expr . SUB_ASSIGN expr
   45     | expr . MUL_ASSIGN expr
   46     | expr . DIV_ASSIGN expr
   47     | expr . ADD expr
   48     | expr . SUB expr
   49     | expr . MUL expr
   50     | expr . DIV expr

    ASSIGN      shift, and go to state 49
    ADD_ASSIGN  shift, and go to state 50
    SUB_ASSIGN  shift, and go to state 51
    MUL_ASSIGN  shift, and go to state 52
    DIV_ASSIGN  shift, and go to state 53

    $default  reduce using rule 43 (expr)


State 75

   42 expr: expr . ASSIGN expr
   43     | expr . ADD_ASSIGN expr
   44     | expr . SUB_ASSIGN expr
   44     | expr SUB_ASSIGN expr .
   45     | expr . MUL_ASSIGN expr
   46     | expr . DIV_ASSIGN expr
   47     | expr . ADD expr
   48     | expr . SUB expr
   49     | expr . MUL expr
   50     | expr . DIV expr

    ASSIGN      shift, and go to state 49
    ADD_ASSIGN  shift, and go to state 50
    SUB_ASSIGN  shift, and go to state 51
    MUL_ASSIGN  shift, and go to state 52
    DIV_ASSIGN  shift, and go to state 53

    $default  reduce using rule 44 (expr)


State 76

   42 expr: expr . ASSIGN expr
   43     | expr . ADD_ASSIGN expr
   44     | expr . SUB_ASSIGN expr
   45     | expr . MUL_ASSIGN expr
   45     | expr MUL_ASSIGN expr .
   46     | expr . DIV_ASSIGN expr
   47     | expr . ADD expr
   48     | expr . SUB expr
   49     | expr . MUL expr
   50     | expr . DIV expr

    ASSIGN      shift, and go to state 49
    ADD_ASSIGN  shift, and go to state 50
    SUB_ASSIGN  shift, and go to state 51
    MUL_ASSIGN  shift, and go to state 52
    DIV_ASSIGN  shift, and go to state 53

    $default  reduce using rule 45 (expr)


State 77

   42 expr: expr . ASSIGN expr
   43     | expr . ADD_ASSIGN expr
   44     | expr . SUB_ASSIGN expr
   45     | expr . MUL_ASSIGN expr
   46     | expr . DIV_ASSIGN expr
   46     | expr DIV_ASSIGN expr .
   47     | expr . ADD expr
   48     | expr . SUB expr
   49     | expr . MUL expr
   50     | expr . DIV expr

    ASSIGN      shift, and go to state 49
    ADD_ASSIGN  shift, and go to state 50
    SUB_ASSIGN  shift, and go to state 51
    MUL_ASSIGN  shift, and go to state 52
    DIV_ASSIGN  shift, and go to state 53

    $default  reduce using rule 46 (expr)


State 78

   42 expr: expr . ASSIGN expr
   43     | expr . ADD_ASSIGN expr
   44     | expr . SUB_ASSIGN expr
   45     | expr . MUL_ASSIGN expr
   46     | expr . DIV_ASSIGN expr
   47     | expr . ADD expr
   47     | expr ADD expr .
   48     | expr . SUB expr
   49     | expr . MUL expr
   50     | expr . DIV expr

    ASSIGN      shift, and go to state 49
    ADD_ASSIGN  shift, and go to state 50
    SUB_ASSIGN  shift, and go to state 51
    MUL_ASSIGN  shift, and go to state 52
    DIV_ASSIGN  shift, and go to state 53

    $default  reduce using rule 47 (expr)


State 79

   42 expr: expr . ASSIGN expr
   43     | expr . ADD_ASSIGN expr
   44     | expr . SUB_ASSIGN expr
   45     | expr . MUL_ASSIGN expr
   46     | expr . DIV_ASSIGN expr
   47     | expr . ADD expr
   48     | expr . SUB expr
   48     | expr SUB expr .
   49     | expr . MUL expr
   50     | expr . DIV expr

    ASSIGN      shift, and go to state 49
    ADD_ASSIGN  shift, and go to state 50
    SUB_ASSIGN  shift, and go to state 51
    MUL_ASSIGN  shift, and go to state 52
    DIV_ASSIGN  shift, and go to state 53

    $default  reduce using rule 48 (expr)


State 80

   42 expr: expr . ASSIGN expr
   43     | expr . ADD_ASSIGN expr
   44     | expr . SUB_ASSIGN expr
   45     | expr . MUL_ASSIGN expr
   46     | expr . DIV_ASSIGN expr
   47     | expr . ADD expr
   48     | expr . SUB expr
   49     | expr . MUL expr
   49     | expr MUL expr .
   50     | expr . DIV expr

    ASSIGN      shift, and go to state 49
    ADD_ASSIGN  shift, and go to state 50
    SUB_ASSIGN  shift, and go to state 51
    MUL_ASSIGN  shift, and go to state 52
    DIV_ASSIGN  shift, and go to state 53
    ADD         shift, and go to state 54
    SUB         shift, and go to state 55

    $default  reduce using rule 49 (expr)


State 81

   42 expr: expr . ASSIGN expr
   43     | expr . ADD_ASSIGN expr
   44     | expr . SUB_ASSIGN expr
   45     | expr . MUL_ASSIGN expr
   46     | expr . DIV_ASSIGN expr
   47     | expr . ADD expr
   48     | expr . SUB expr
   49     | expr . MUL expr
   50     | expr . DIV expr
   50     | expr DIV expr .

    ASSIGN      shift, and go to state 49
    ADD_ASSIGN  shift, and go to state 50
    SUB_ASSIGN  shift, and go to state 51
    MUL_ASSIGN  shift, and go to state 52
    DIV_ASSIGN  shift, and go to state 53
    ADD         shift, and go to state 54
    SUB         shift, and go to state 55

    $default  reduce using rule 50 (expr)


State 82

   27 declaration: T IDENTIFIER ASSIGN . expr

    SUB         shift, and go to state 6
    IDENTIFIER  shift, and go to state 15
    INTEGER     shift, and go to state 16
    CHAR        shift, and go to state 17
    STRING      shift, and go to state 18

    expr  go to state 93


State 83

   30 id_list: IDENTIFIER COMMA . id_list

    IDENTIFIER  shift, and go to state 94

    id_list  go to state 95


State 84

   15 func_statement: T IDENTIFIER LP . RP statement

    RP  shift, and go to state 96


State 85

   20 printf: PRINTF LP expr COMMA . io_list RP

    QUOTE       shift, and go to state 97
    IDENTIFIER  shift, and go to state 98
    INTEGER     shift, and go to state 99
    STRING      shift, and go to state 100

    io_list  go to state 101


State 86

   22 scanf: SCANF LP expr COMMA . io_list RP

    QUOTE       shift, and go to state 97
    IDENTIFIER  shift, and go to state 98
    INTEGER     shift, and go to state 99
    STRING      shift, and go to state 100

    io_list  go to state 102


State 87

   21 scanf: SCANF LP expr RP .

    $default  reduce using rule 21 (scanf)


State 88

   34 bool_expr: bool_expr . AND bool_expr
   35          | bool_expr . OR bool_expr
   37          | bool_expr . RELOP bool_expr
   37          | bool_expr RELOP bool_expr .

    $default  reduce using rule 37 (bool_expr)


State 89

   34 bool_expr: bool_expr . AND bool_expr
   34          | bool_expr AND bool_expr .
   35          | bool_expr . OR bool_expr
   37          | bool_expr . RELOP bool_expr

    RELOP  shift, and go to state 65
    AND    shift, and go to state 66
    OR     shift, and go to state 67

    $default  reduce using rule 34 (bool_expr)


State 90

   34 bool_expr: bool_expr . AND bool_expr
   35          | bool_expr . OR bool_expr
   35          | bool_expr OR bool_expr .
   37          | bool_expr . RELOP bool_expr

    RELOP  shift, and go to state 65
    AND    shift, and go to state 66
    OR     shift, and go to state 67

    $default  reduce using rule 35 (bool_expr)


State 91

   17 if_else: IF LP bool_expr RP . statement ELSE statement

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    SUB         shift, and go to state 6
    PRINTF      shift, and go to state 7
    SCANF       shift, and go to state 8
    SEMICOLON   shift, and go to state 9
    LC          shift, and go to state 10
    WHILE       shift, and go to state 11
    IF          shift, and go to state 12
    RETURN      shift, and go to state 13
    FOR         shift, and go to state 14
    IDENTIFIER  shift, and go to state 15
    INTEGER     shift, and go to state 16
    CHAR        shift, and go to state 17
    STRING      shift, and go to state 18

    statement       go to state 103
    func_statement  go to state 22
    if_else         go to state 23
    while           go to state 24
    for             go to state 25
    printf          go to state 26
    scanf           go to state 27
    declaration     go to state 28
    expr            go to state 29
    T               go to state 30


State 92

   19 for: FOR LP statement statement . statement RP statement

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    SUB         shift, and go to state 6
    PRINTF      shift, and go to state 7
    SCANF       shift, and go to state 8
    SEMICOLON   shift, and go to state 9
    LC          shift, and go to state 10
    WHILE       shift, and go to state 11
    IF          shift, and go to state 12
    RETURN      shift, and go to state 13
    FOR         shift, and go to state 14
    IDENTIFIER  shift, and go to state 15
    INTEGER     shift, and go to state 16
    CHAR        shift, and go to state 17
    STRING      shift, and go to state 18

    statement       go to state 104
    func_statement  go to state 22
    if_else         go to state 23
    while           go to state 24
    for             go to state 25
    printf          go to state 26
    scanf           go to state 27
    declaration     go to state 28
    expr            go to state 29
    T               go to state 30


State 93

   27 declaration: T IDENTIFIER ASSIGN expr .
   42 expr: expr . ASSIGN expr
   43     | expr . ADD_ASSIGN expr
   44     | expr . SUB_ASSIGN expr
   45     | expr . MUL_ASSIGN expr
   46     | expr . DIV_ASSIGN expr
   47     | expr . ADD expr
   48     | expr . SUB expr
   49     | expr . MUL expr
   50     | expr . DIV expr

    ASSIGN      shift, and go to state 49
    ADD_ASSIGN  shift, and go to state 50
    SUB_ASSIGN  shift, and go to state 51
    MUL_ASSIGN  shift, and go to state 52
    DIV_ASSIGN  shift, and go to state 53
    ADD         shift, and go to state 54
    SUB         shift, and go to state 55
    MUL         shift, and go to state 56
    DIV         shift, and go to state 57

    $default  reduce using rule 27 (declaration)


State 94

   29 id_list: IDENTIFIER .
   30        | IDENTIFIER . COMMA id_list

    COMMA  shift, and go to state 83

    $default  reduce using rule 29 (id_list)


State 95

   30 id_list: IDENTIFIER COMMA id_list .

    $default  reduce using rule 30 (id_list)


State 96

   15 func_statement: T IDENTIFIER LP RP . statement

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    SUB         shift, and go to state 6
    PRINTF      shift, and go to state 7
    SCANF       shift, and go to state 8
    SEMICOLON   shift, and go to state 9
    LC          shift, and go to state 10
    WHILE       shift, and go to state 11
    IF          shift, and go to state 12
    RETURN      shift, and go to state 13
    FOR         shift, and go to state 14
    IDENTIFIER  shift, and go to state 15
    INTEGER     shift, and go to state 16
    CHAR        shift, and go to state 17
    STRING      shift, and go to state 18

    statement       go to state 105
    func_statement  go to state 22
    if_else         go to state 23
    while           go to state 24
    for             go to state 25
    printf          go to state 26
    scanf           go to state 27
    declaration     go to state 28
    expr            go to state 29
    T               go to state 30


State 97

   26 io_list: QUOTE . CHAR

    CHAR  shift, and go to state 106


State 98

   23 io_list: IDENTIFIER .

    $default  reduce using rule 23 (io_list)


State 99

   25 io_list: INTEGER .

    $default  reduce using rule 25 (io_list)


State 100

   24 io_list: STRING .

    $default  reduce using rule 24 (io_list)


State 101

   20 printf: PRINTF LP expr COMMA io_list . RP

    RP  shift, and go to state 107


State 102

   22 scanf: SCANF LP expr COMMA io_list . RP

    RP  shift, and go to state 108


State 103

   17 if_else: IF LP bool_expr RP statement . ELSE statement

    ELSE  shift, and go to state 109


State 104

   19 for: FOR LP statement statement statement . RP statement

    RP  shift, and go to state 110


State 105

   15 func_statement: T IDENTIFIER LP RP statement .

    $default  reduce using rule 15 (func_statement)


State 106

   26 io_list: QUOTE CHAR .

    $default  reduce using rule 26 (io_list)


State 107

   20 printf: PRINTF LP expr COMMA io_list RP .

    $default  reduce using rule 20 (printf)


State 108

   22 scanf: SCANF LP expr COMMA io_list RP .

    $default  reduce using rule 22 (scanf)


State 109

   17 if_else: IF LP bool_expr RP statement ELSE . statement

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    SUB         shift, and go to state 6
    PRINTF      shift, and go to state 7
    SCANF       shift, and go to state 8
    SEMICOLON   shift, and go to state 9
    LC          shift, and go to state 10
    WHILE       shift, and go to state 11
    IF          shift, and go to state 12
    RETURN      shift, and go to state 13
    FOR         shift, and go to state 14
    IDENTIFIER  shift, and go to state 15
    INTEGER     shift, and go to state 16
    CHAR        shift, and go to state 17
    STRING      shift, and go to state 18

    statement       go to state 111
    func_statement  go to state 22
    if_else         go to state 23
    while           go to state 24
    for             go to state 25
    printf          go to state 26
    scanf           go to state 27
    declaration     go to state 28
    expr            go to state 29
    T               go to state 30


State 110

   19 for: FOR LP statement statement statement RP . statement

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    SUB         shift, and go to state 6
    PRINTF      shift, and go to state 7
    SCANF       shift, and go to state 8
    SEMICOLON   shift, and go to state 9
    LC          shift, and go to state 10
    WHILE       shift, and go to state 11
    IF          shift, and go to state 12
    RETURN      shift, and go to state 13
    FOR         shift, and go to state 14
    IDENTIFIER  shift, and go to state 15
    INTEGER     shift, and go to state 16
    CHAR        shift, and go to state 17
    STRING      shift, and go to state 18

    statement       go to state 112
    func_statement  go to state 22
    if_else         go to state 23
    while           go to state 24
    for             go to state 25
    printf          go to state 26
    scanf           go to state 27
    declaration     go to state 28
    expr            go to state 29
    T               go to state 30


State 111

   17 if_else: IF LP bool_expr RP statement ELSE statement .

    $default  reduce using rule 17 (if_else)


State 112

   19 for: FOR LP statement statement statement RP statement .

    $default  reduce using rule 19 (for)
