Terminals unused in grammar

    BOOL


Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: statement
    3           | statements statement

    4 statement: SEMICOLON
    5          | declaration SEMICOLON
    6          | expr SEMICOLON
    7          | RETURN expr SEMICOLON
    8          | if_else
    9          | while
   10          | for
   11          | scanf SEMICOLON
   12          | printf SEMICOLON
   13          | LC statements RC
   14          | func_statement

   15 func_statement: T IDENTIFIER LP RP statement

   16 if_else: IF LP expr RP statement
   17        | IF LP expr RP statement ELSE statement

   18 while: WHILE LP expr RP statement

   19 for: FOR LP statement statement expr RP statement

   20 printf: PRINTF LP expr RP
   21       | PRINTF LP STRING COMMA io_list RP

   22 scanf: SCANF LP expr RP
   23      | SCANF LP STRING COMMA io_list RP

   24 io_list: IDENTIFIER
   25        | STRING
   26        | INTEGER
   27        | CHAR
   28        | QUOTE IDENTIFIER

   29 declaration: T IDENTIFIER ASSIGN expr
   30            | T id_list
   31            | CONST T IDENTIFIER ASSIGN expr

   32 id_list: IDENTIFIER
   33        | id_list COMMA IDENTIFIER

   34 expr: IDENTIFIER
   35     | INTEGER
   36     | CHAR
   37     | STRING
   38     | IDENTIFIER INC
   39     | IDENTIFIER DEC
   40     | expr ASSIGN expr
   41     | expr ADD_ASSIGN expr
   42     | expr SUB_ASSIGN expr
   43     | expr MUL_ASSIGN expr
   44     | expr DIV_ASSIGN expr
   45     | expr ADD expr
   46     | expr SUB expr
   47     | expr MUL expr
   48     | expr DIV expr
   49     | expr MODE expr
   50     | SUB expr
   51     | TRUE
   52     | FALSE
   53     | expr AND expr
   54     | expr OR expr
   55     | NOT expr
   56     | expr EQ expr
   57     | expr NEQ expr
   58     | expr GQT expr
   59     | expr LQT expr
   60     | expr GT expr
   61     | expr LT expr

   62 T: T_INT
   63  | T_CHAR
   64  | T_BOOL
   65  | T_STRING
   66  | T_VOID


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    T_CHAR (258) 63
    T_INT (259) 62
    T_STRING (260) 65
    T_BOOL (261) 64
    T_VOID (262) 66
    TRUE (263) 51
    FALSE (264) 52
    ASSIGN (265) 29 31 40
    ADD_ASSIGN (266) 41
    SUB_ASSIGN (267) 42
    MUL_ASSIGN (268) 43
    DIV_ASSIGN (269) 44
    EQ (270) 56
    NEQ (271) 57
    GQT (272) 58
    LQT (273) 59
    GT (274) 60
    LT (275) 61
    ADD (276) 45
    SUB (277) 46 50
    MUL (278) 47
    DIV (279) 48
    MODE (280) 49
    INC (281) 38
    DEC (282) 39
    AND (283) 53
    OR (284) 54
    NOT (285) 55
    PRINTF (286) 20 21
    SCANF (287) 22 23
    QUOTE (288) 28
    CONST (289) 31
    SEMICOLON (290) 4 5 6 7 11 12
    COMMA (291) 21 23 33
    LP (292) 15 16 17 18 19 20 21 22 23
    RP (293) 15 16 17 18 19 20 21 22 23
    LC (294) 13
    RC (295) 13
    WHILE (296) 18
    ELSE (297) 17
    IF (298) 16 17
    RETURN (299) 7
    FOR (300) 19
    IDENTIFIER (301) 15 24 28 29 31 32 33 34 38 39
    INTEGER (302) 26 35
    CHAR (303) 27 36
    BOOL (304)
    STRING (305) 21 23 25 37
    UMINUS (306)
    LOWER_THEN_ELSE (307)


Nonterminals, with rules where they appear

    $accept (53)
        on left: 0
    program (54)
        on left: 1
        on right: 0
    statements (55)
        on left: 2 3
        on right: 1 3 13
    statement (56)
        on left: 4 5 6 7 8 9 10 11 12 13 14
        on right: 2 3 15 16 17 18 19
    func_statement (57)
        on left: 15
        on right: 14
    if_else (58)
        on left: 16 17
        on right: 8
    while (59)
        on left: 18
        on right: 9
    for (60)
        on left: 19
        on right: 10
    printf (61)
        on left: 20 21
        on right: 12
    scanf (62)
        on left: 22 23
        on right: 11
    io_list (63)
        on left: 24 25 26 27 28
        on right: 21 23
    declaration (64)
        on left: 29 30 31
        on right: 5
    id_list (65)
        on left: 32 33
        on right: 30 33
    expr (66)
        on left: 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61
        on right: 6 7 16 17 18 19 20 22 29 31 40 41 42 43 44 45 46 47 48 49 50 53 54 55 56 57 58 59 60 61
    T (67)
        on left: 62 63 64 65 66
        on right: 15 29 30 31


State 0

    0 $accept: . program $end

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    SUB         shift, and go to state 8
    NOT         shift, and go to state 9
    PRINTF      shift, and go to state 10
    SCANF       shift, and go to state 11
    CONST       shift, and go to state 12
    SEMICOLON   shift, and go to state 13
    LC          shift, and go to state 14
    WHILE       shift, and go to state 15
    IF          shift, and go to state 16
    RETURN      shift, and go to state 17
    FOR         shift, and go to state 18
    IDENTIFIER  shift, and go to state 19
    INTEGER     shift, and go to state 20
    CHAR        shift, and go to state 21
    STRING      shift, and go to state 22

    program         go to state 23
    statements      go to state 24
    statement       go to state 25
    func_statement  go to state 26
    if_else         go to state 27
    while           go to state 28
    for             go to state 29
    printf          go to state 30
    scanf           go to state 31
    declaration     go to state 32
    expr            go to state 33
    T               go to state 34


State 1

   63 T: T_CHAR .

    $default  reduce using rule 63 (T)


State 2

   62 T: T_INT .

    $default  reduce using rule 62 (T)


State 3

   65 T: T_STRING .

    $default  reduce using rule 65 (T)


State 4

   64 T: T_BOOL .

    $default  reduce using rule 64 (T)


State 5

   66 T: T_VOID .

    $default  reduce using rule 66 (T)


State 6

   51 expr: TRUE .

    $default  reduce using rule 51 (expr)


State 7

   52 expr: FALSE .

    $default  reduce using rule 52 (expr)


State 8

   50 expr: SUB . expr

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    SUB         shift, and go to state 8
    NOT         shift, and go to state 9
    IDENTIFIER  shift, and go to state 19
    INTEGER     shift, and go to state 20
    CHAR        shift, and go to state 21
    STRING      shift, and go to state 22

    expr  go to state 35


State 9

   55 expr: NOT . expr

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    SUB         shift, and go to state 8
    NOT         shift, and go to state 9
    IDENTIFIER  shift, and go to state 19
    INTEGER     shift, and go to state 20
    CHAR        shift, and go to state 21
    STRING      shift, and go to state 22

    expr  go to state 36


State 10

   20 printf: PRINTF . LP expr RP
   21       | PRINTF . LP STRING COMMA io_list RP

    LP  shift, and go to state 37


State 11

   22 scanf: SCANF . LP expr RP
   23      | SCANF . LP STRING COMMA io_list RP

    LP  shift, and go to state 38


State 12

   31 declaration: CONST . T IDENTIFIER ASSIGN expr

    T_CHAR    shift, and go to state 1
    T_INT     shift, and go to state 2
    T_STRING  shift, and go to state 3
    T_BOOL    shift, and go to state 4
    T_VOID    shift, and go to state 5

    T  go to state 39


State 13

    4 statement: SEMICOLON .

    $default  reduce using rule 4 (statement)


State 14

   13 statement: LC . statements RC

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    SUB         shift, and go to state 8
    NOT         shift, and go to state 9
    PRINTF      shift, and go to state 10
    SCANF       shift, and go to state 11
    CONST       shift, and go to state 12
    SEMICOLON   shift, and go to state 13
    LC          shift, and go to state 14
    WHILE       shift, and go to state 15
    IF          shift, and go to state 16
    RETURN      shift, and go to state 17
    FOR         shift, and go to state 18
    IDENTIFIER  shift, and go to state 19
    INTEGER     shift, and go to state 20
    CHAR        shift, and go to state 21
    STRING      shift, and go to state 22

    statements      go to state 40
    statement       go to state 25
    func_statement  go to state 26
    if_else         go to state 27
    while           go to state 28
    for             go to state 29
    printf          go to state 30
    scanf           go to state 31
    declaration     go to state 32
    expr            go to state 33
    T               go to state 34


State 15

   18 while: WHILE . LP expr RP statement

    LP  shift, and go to state 41


State 16

   16 if_else: IF . LP expr RP statement
   17        | IF . LP expr RP statement ELSE statement

    LP  shift, and go to state 42


State 17

    7 statement: RETURN . expr SEMICOLON

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    SUB         shift, and go to state 8
    NOT         shift, and go to state 9
    IDENTIFIER  shift, and go to state 19
    INTEGER     shift, and go to state 20
    CHAR        shift, and go to state 21
    STRING      shift, and go to state 22

    expr  go to state 43


State 18

   19 for: FOR . LP statement statement expr RP statement

    LP  shift, and go to state 44


State 19

   34 expr: IDENTIFIER .
   38     | IDENTIFIER . INC
   39     | IDENTIFIER . DEC

    INC  shift, and go to state 45
    DEC  shift, and go to state 46

    $default  reduce using rule 34 (expr)


State 20

   35 expr: INTEGER .

    $default  reduce using rule 35 (expr)


State 21

   36 expr: CHAR .

    $default  reduce using rule 36 (expr)


State 22

   37 expr: STRING .

    $default  reduce using rule 37 (expr)


State 23

    0 $accept: program . $end

    $end  shift, and go to state 47


State 24

    1 program: statements .
    3 statements: statements . statement

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    SUB         shift, and go to state 8
    NOT         shift, and go to state 9
    PRINTF      shift, and go to state 10
    SCANF       shift, and go to state 11
    CONST       shift, and go to state 12
    SEMICOLON   shift, and go to state 13
    LC          shift, and go to state 14
    WHILE       shift, and go to state 15
    IF          shift, and go to state 16
    RETURN      shift, and go to state 17
    FOR         shift, and go to state 18
    IDENTIFIER  shift, and go to state 19
    INTEGER     shift, and go to state 20
    CHAR        shift, and go to state 21
    STRING      shift, and go to state 22

    $default  reduce using rule 1 (program)

    statement       go to state 48
    func_statement  go to state 26
    if_else         go to state 27
    while           go to state 28
    for             go to state 29
    printf          go to state 30
    scanf           go to state 31
    declaration     go to state 32
    expr            go to state 33
    T               go to state 34


State 25

    2 statements: statement .

    $default  reduce using rule 2 (statements)


State 26

   14 statement: func_statement .

    $default  reduce using rule 14 (statement)


State 27

    8 statement: if_else .

    $default  reduce using rule 8 (statement)


State 28

    9 statement: while .

    $default  reduce using rule 9 (statement)


State 29

   10 statement: for .

    $default  reduce using rule 10 (statement)


State 30

   12 statement: printf . SEMICOLON

    SEMICOLON  shift, and go to state 49


State 31

   11 statement: scanf . SEMICOLON

    SEMICOLON  shift, and go to state 50


State 32

    5 statement: declaration . SEMICOLON

    SEMICOLON  shift, and go to state 51


State 33

    6 statement: expr . SEMICOLON
   40 expr: expr . ASSIGN expr
   41     | expr . ADD_ASSIGN expr
   42     | expr . SUB_ASSIGN expr
   43     | expr . MUL_ASSIGN expr
   44     | expr . DIV_ASSIGN expr
   45     | expr . ADD expr
   46     | expr . SUB expr
   47     | expr . MUL expr
   48     | expr . DIV expr
   49     | expr . MODE expr
   53     | expr . AND expr
   54     | expr . OR expr
   56     | expr . EQ expr
   57     | expr . NEQ expr
   58     | expr . GQT expr
   59     | expr . LQT expr
   60     | expr . GT expr
   61     | expr . LT expr

    ASSIGN      shift, and go to state 52
    ADD_ASSIGN  shift, and go to state 53
    SUB_ASSIGN  shift, and go to state 54
    MUL_ASSIGN  shift, and go to state 55
    DIV_ASSIGN  shift, and go to state 56
    EQ          shift, and go to state 57
    NEQ         shift, and go to state 58
    GQT         shift, and go to state 59
    LQT         shift, and go to state 60
    GT          shift, and go to state 61
    LT          shift, and go to state 62
    ADD         shift, and go to state 63
    SUB         shift, and go to state 64
    MUL         shift, and go to state 65
    DIV         shift, and go to state 66
    MODE        shift, and go to state 67
    AND         shift, and go to state 68
    OR          shift, and go to state 69
    SEMICOLON   shift, and go to state 70


State 34

   15 func_statement: T . IDENTIFIER LP RP statement
   29 declaration: T . IDENTIFIER ASSIGN expr
   30            | T . id_list

    IDENTIFIER  shift, and go to state 71

    id_list  go to state 72


State 35

   40 expr: expr . ASSIGN expr
   41     | expr . ADD_ASSIGN expr
   42     | expr . SUB_ASSIGN expr
   43     | expr . MUL_ASSIGN expr
   44     | expr . DIV_ASSIGN expr
   45     | expr . ADD expr
   46     | expr . SUB expr
   47     | expr . MUL expr
   48     | expr . DIV expr
   49     | expr . MODE expr
   50     | SUB expr .
   53     | expr . AND expr
   54     | expr . OR expr
   56     | expr . EQ expr
   57     | expr . NEQ expr
   58     | expr . GQT expr
   59     | expr . LQT expr
   60     | expr . GT expr
   61     | expr . LT expr

    $default  reduce using rule 50 (expr)


State 36

   40 expr: expr . ASSIGN expr
   41     | expr . ADD_ASSIGN expr
   42     | expr . SUB_ASSIGN expr
   43     | expr . MUL_ASSIGN expr
   44     | expr . DIV_ASSIGN expr
   45     | expr . ADD expr
   46     | expr . SUB expr
   47     | expr . MUL expr
   48     | expr . DIV expr
   49     | expr . MODE expr
   53     | expr . AND expr
   54     | expr . OR expr
   55     | NOT expr .
   56     | expr . EQ expr
   57     | expr . NEQ expr
   58     | expr . GQT expr
   59     | expr . LQT expr
   60     | expr . GT expr
   61     | expr . LT expr

    $default  reduce using rule 55 (expr)


State 37

   20 printf: PRINTF LP . expr RP
   21       | PRINTF LP . STRING COMMA io_list RP

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    SUB         shift, and go to state 8
    NOT         shift, and go to state 9
    IDENTIFIER  shift, and go to state 19
    INTEGER     shift, and go to state 20
    CHAR        shift, and go to state 21
    STRING      shift, and go to state 73

    expr  go to state 74


State 38

   22 scanf: SCANF LP . expr RP
   23      | SCANF LP . STRING COMMA io_list RP

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    SUB         shift, and go to state 8
    NOT         shift, and go to state 9
    IDENTIFIER  shift, and go to state 19
    INTEGER     shift, and go to state 20
    CHAR        shift, and go to state 21
    STRING      shift, and go to state 75

    expr  go to state 76


State 39

   31 declaration: CONST T . IDENTIFIER ASSIGN expr

    IDENTIFIER  shift, and go to state 77


State 40

    3 statements: statements . statement
   13 statement: LC statements . RC

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    SUB         shift, and go to state 8
    NOT         shift, and go to state 9
    PRINTF      shift, and go to state 10
    SCANF       shift, and go to state 11
    CONST       shift, and go to state 12
    SEMICOLON   shift, and go to state 13
    LC          shift, and go to state 14
    RC          shift, and go to state 78
    WHILE       shift, and go to state 15
    IF          shift, and go to state 16
    RETURN      shift, and go to state 17
    FOR         shift, and go to state 18
    IDENTIFIER  shift, and go to state 19
    INTEGER     shift, and go to state 20
    CHAR        shift, and go to state 21
    STRING      shift, and go to state 22

    statement       go to state 48
    func_statement  go to state 26
    if_else         go to state 27
    while           go to state 28
    for             go to state 29
    printf          go to state 30
    scanf           go to state 31
    declaration     go to state 32
    expr            go to state 33
    T               go to state 34


State 41

   18 while: WHILE LP . expr RP statement

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    SUB         shift, and go to state 8
    NOT         shift, and go to state 9
    IDENTIFIER  shift, and go to state 19
    INTEGER     shift, and go to state 20
    CHAR        shift, and go to state 21
    STRING      shift, and go to state 22

    expr  go to state 79


State 42

   16 if_else: IF LP . expr RP statement
   17        | IF LP . expr RP statement ELSE statement

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    SUB         shift, and go to state 8
    NOT         shift, and go to state 9
    IDENTIFIER  shift, and go to state 19
    INTEGER     shift, and go to state 20
    CHAR        shift, and go to state 21
    STRING      shift, and go to state 22

    expr  go to state 80


State 43

    7 statement: RETURN expr . SEMICOLON
   40 expr: expr . ASSIGN expr
   41     | expr . ADD_ASSIGN expr
   42     | expr . SUB_ASSIGN expr
   43     | expr . MUL_ASSIGN expr
   44     | expr . DIV_ASSIGN expr
   45     | expr . ADD expr
   46     | expr . SUB expr
   47     | expr . MUL expr
   48     | expr . DIV expr
   49     | expr . MODE expr
   53     | expr . AND expr
   54     | expr . OR expr
   56     | expr . EQ expr
   57     | expr . NEQ expr
   58     | expr . GQT expr
   59     | expr . LQT expr
   60     | expr . GT expr
   61     | expr . LT expr

    ASSIGN      shift, and go to state 52
    ADD_ASSIGN  shift, and go to state 53
    SUB_ASSIGN  shift, and go to state 54
    MUL_ASSIGN  shift, and go to state 55
    DIV_ASSIGN  shift, and go to state 56
    EQ          shift, and go to state 57
    NEQ         shift, and go to state 58
    GQT         shift, and go to state 59
    LQT         shift, and go to state 60
    GT          shift, and go to state 61
    LT          shift, and go to state 62
    ADD         shift, and go to state 63
    SUB         shift, and go to state 64
    MUL         shift, and go to state 65
    DIV         shift, and go to state 66
    MODE        shift, and go to state 67
    AND         shift, and go to state 68
    OR          shift, and go to state 69
    SEMICOLON   shift, and go to state 81


State 44

   19 for: FOR LP . statement statement expr RP statement

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    SUB         shift, and go to state 8
    NOT         shift, and go to state 9
    PRINTF      shift, and go to state 10
    SCANF       shift, and go to state 11
    CONST       shift, and go to state 12
    SEMICOLON   shift, and go to state 13
    LC          shift, and go to state 14
    WHILE       shift, and go to state 15
    IF          shift, and go to state 16
    RETURN      shift, and go to state 17
    FOR         shift, and go to state 18
    IDENTIFIER  shift, and go to state 19
    INTEGER     shift, and go to state 20
    CHAR        shift, and go to state 21
    STRING      shift, and go to state 22

    statement       go to state 82
    func_statement  go to state 26
    if_else         go to state 27
    while           go to state 28
    for             go to state 29
    printf          go to state 30
    scanf           go to state 31
    declaration     go to state 32
    expr            go to state 33
    T               go to state 34


State 45

   38 expr: IDENTIFIER INC .

    $default  reduce using rule 38 (expr)


State 46

   39 expr: IDENTIFIER DEC .

    $default  reduce using rule 39 (expr)


State 47

    0 $accept: program $end .

    $default  accept


State 48

    3 statements: statements statement .

    $default  reduce using rule 3 (statements)


State 49

   12 statement: printf SEMICOLON .

    $default  reduce using rule 12 (statement)


State 50

   11 statement: scanf SEMICOLON .

    $default  reduce using rule 11 (statement)


State 51

    5 statement: declaration SEMICOLON .

    $default  reduce using rule 5 (statement)


State 52

   40 expr: expr ASSIGN . expr

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    SUB         shift, and go to state 8
    NOT         shift, and go to state 9
    IDENTIFIER  shift, and go to state 19
    INTEGER     shift, and go to state 20
    CHAR        shift, and go to state 21
    STRING      shift, and go to state 22

    expr  go to state 83


State 53

   41 expr: expr ADD_ASSIGN . expr

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    SUB         shift, and go to state 8
    NOT         shift, and go to state 9
    IDENTIFIER  shift, and go to state 19
    INTEGER     shift, and go to state 20
    CHAR        shift, and go to state 21
    STRING      shift, and go to state 22

    expr  go to state 84


State 54

   42 expr: expr SUB_ASSIGN . expr

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    SUB         shift, and go to state 8
    NOT         shift, and go to state 9
    IDENTIFIER  shift, and go to state 19
    INTEGER     shift, and go to state 20
    CHAR        shift, and go to state 21
    STRING      shift, and go to state 22

    expr  go to state 85


State 55

   43 expr: expr MUL_ASSIGN . expr

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    SUB         shift, and go to state 8
    NOT         shift, and go to state 9
    IDENTIFIER  shift, and go to state 19
    INTEGER     shift, and go to state 20
    CHAR        shift, and go to state 21
    STRING      shift, and go to state 22

    expr  go to state 86


State 56

   44 expr: expr DIV_ASSIGN . expr

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    SUB         shift, and go to state 8
    NOT         shift, and go to state 9
    IDENTIFIER  shift, and go to state 19
    INTEGER     shift, and go to state 20
    CHAR        shift, and go to state 21
    STRING      shift, and go to state 22

    expr  go to state 87


State 57

   56 expr: expr EQ . expr

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    SUB         shift, and go to state 8
    NOT         shift, and go to state 9
    IDENTIFIER  shift, and go to state 19
    INTEGER     shift, and go to state 20
    CHAR        shift, and go to state 21
    STRING      shift, and go to state 22

    expr  go to state 88


State 58

   57 expr: expr NEQ . expr

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    SUB         shift, and go to state 8
    NOT         shift, and go to state 9
    IDENTIFIER  shift, and go to state 19
    INTEGER     shift, and go to state 20
    CHAR        shift, and go to state 21
    STRING      shift, and go to state 22

    expr  go to state 89


State 59

   58 expr: expr GQT . expr

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    SUB         shift, and go to state 8
    NOT         shift, and go to state 9
    IDENTIFIER  shift, and go to state 19
    INTEGER     shift, and go to state 20
    CHAR        shift, and go to state 21
    STRING      shift, and go to state 22

    expr  go to state 90


State 60

   59 expr: expr LQT . expr

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    SUB         shift, and go to state 8
    NOT         shift, and go to state 9
    IDENTIFIER  shift, and go to state 19
    INTEGER     shift, and go to state 20
    CHAR        shift, and go to state 21
    STRING      shift, and go to state 22

    expr  go to state 91


State 61

   60 expr: expr GT . expr

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    SUB         shift, and go to state 8
    NOT         shift, and go to state 9
    IDENTIFIER  shift, and go to state 19
    INTEGER     shift, and go to state 20
    CHAR        shift, and go to state 21
    STRING      shift, and go to state 22

    expr  go to state 92


State 62

   61 expr: expr LT . expr

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    SUB         shift, and go to state 8
    NOT         shift, and go to state 9
    IDENTIFIER  shift, and go to state 19
    INTEGER     shift, and go to state 20
    CHAR        shift, and go to state 21
    STRING      shift, and go to state 22

    expr  go to state 93


State 63

   45 expr: expr ADD . expr

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    SUB         shift, and go to state 8
    NOT         shift, and go to state 9
    IDENTIFIER  shift, and go to state 19
    INTEGER     shift, and go to state 20
    CHAR        shift, and go to state 21
    STRING      shift, and go to state 22

    expr  go to state 94


State 64

   46 expr: expr SUB . expr

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    SUB         shift, and go to state 8
    NOT         shift, and go to state 9
    IDENTIFIER  shift, and go to state 19
    INTEGER     shift, and go to state 20
    CHAR        shift, and go to state 21
    STRING      shift, and go to state 22

    expr  go to state 95


State 65

   47 expr: expr MUL . expr

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    SUB         shift, and go to state 8
    NOT         shift, and go to state 9
    IDENTIFIER  shift, and go to state 19
    INTEGER     shift, and go to state 20
    CHAR        shift, and go to state 21
    STRING      shift, and go to state 22

    expr  go to state 96


State 66

   48 expr: expr DIV . expr

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    SUB         shift, and go to state 8
    NOT         shift, and go to state 9
    IDENTIFIER  shift, and go to state 19
    INTEGER     shift, and go to state 20
    CHAR        shift, and go to state 21
    STRING      shift, and go to state 22

    expr  go to state 97


State 67

   49 expr: expr MODE . expr

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    SUB         shift, and go to state 8
    NOT         shift, and go to state 9
    IDENTIFIER  shift, and go to state 19
    INTEGER     shift, and go to state 20
    CHAR        shift, and go to state 21
    STRING      shift, and go to state 22

    expr  go to state 98


State 68

   53 expr: expr AND . expr

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    SUB         shift, and go to state 8
    NOT         shift, and go to state 9
    IDENTIFIER  shift, and go to state 19
    INTEGER     shift, and go to state 20
    CHAR        shift, and go to state 21
    STRING      shift, and go to state 22

    expr  go to state 99


State 69

   54 expr: expr OR . expr

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    SUB         shift, and go to state 8
    NOT         shift, and go to state 9
    IDENTIFIER  shift, and go to state 19
    INTEGER     shift, and go to state 20
    CHAR        shift, and go to state 21
    STRING      shift, and go to state 22

    expr  go to state 100


State 70

    6 statement: expr SEMICOLON .

    $default  reduce using rule 6 (statement)


State 71

   15 func_statement: T IDENTIFIER . LP RP statement
   29 declaration: T IDENTIFIER . ASSIGN expr
   32 id_list: IDENTIFIER .

    ASSIGN  shift, and go to state 101
    LP      shift, and go to state 102

    $default  reduce using rule 32 (id_list)


State 72

   30 declaration: T id_list .
   33 id_list: id_list . COMMA IDENTIFIER

    COMMA  shift, and go to state 103

    $default  reduce using rule 30 (declaration)


State 73

   21 printf: PRINTF LP STRING . COMMA io_list RP
   37 expr: STRING .

    COMMA  shift, and go to state 104

    $default  reduce using rule 37 (expr)


State 74

   20 printf: PRINTF LP expr . RP
   40 expr: expr . ASSIGN expr
   41     | expr . ADD_ASSIGN expr
   42     | expr . SUB_ASSIGN expr
   43     | expr . MUL_ASSIGN expr
   44     | expr . DIV_ASSIGN expr
   45     | expr . ADD expr
   46     | expr . SUB expr
   47     | expr . MUL expr
   48     | expr . DIV expr
   49     | expr . MODE expr
   53     | expr . AND expr
   54     | expr . OR expr
   56     | expr . EQ expr
   57     | expr . NEQ expr
   58     | expr . GQT expr
   59     | expr . LQT expr
   60     | expr . GT expr
   61     | expr . LT expr

    ASSIGN      shift, and go to state 52
    ADD_ASSIGN  shift, and go to state 53
    SUB_ASSIGN  shift, and go to state 54
    MUL_ASSIGN  shift, and go to state 55
    DIV_ASSIGN  shift, and go to state 56
    EQ          shift, and go to state 57
    NEQ         shift, and go to state 58
    GQT         shift, and go to state 59
    LQT         shift, and go to state 60
    GT          shift, and go to state 61
    LT          shift, and go to state 62
    ADD         shift, and go to state 63
    SUB         shift, and go to state 64
    MUL         shift, and go to state 65
    DIV         shift, and go to state 66
    MODE        shift, and go to state 67
    AND         shift, and go to state 68
    OR          shift, and go to state 69
    RP          shift, and go to state 105


State 75

   23 scanf: SCANF LP STRING . COMMA io_list RP
   37 expr: STRING .

    COMMA  shift, and go to state 106

    $default  reduce using rule 37 (expr)


State 76

   22 scanf: SCANF LP expr . RP
   40 expr: expr . ASSIGN expr
   41     | expr . ADD_ASSIGN expr
   42     | expr . SUB_ASSIGN expr
   43     | expr . MUL_ASSIGN expr
   44     | expr . DIV_ASSIGN expr
   45     | expr . ADD expr
   46     | expr . SUB expr
   47     | expr . MUL expr
   48     | expr . DIV expr
   49     | expr . MODE expr
   53     | expr . AND expr
   54     | expr . OR expr
   56     | expr . EQ expr
   57     | expr . NEQ expr
   58     | expr . GQT expr
   59     | expr . LQT expr
   60     | expr . GT expr
   61     | expr . LT expr

    ASSIGN      shift, and go to state 52
    ADD_ASSIGN  shift, and go to state 53
    SUB_ASSIGN  shift, and go to state 54
    MUL_ASSIGN  shift, and go to state 55
    DIV_ASSIGN  shift, and go to state 56
    EQ          shift, and go to state 57
    NEQ         shift, and go to state 58
    GQT         shift, and go to state 59
    LQT         shift, and go to state 60
    GT          shift, and go to state 61
    LT          shift, and go to state 62
    ADD         shift, and go to state 63
    SUB         shift, and go to state 64
    MUL         shift, and go to state 65
    DIV         shift, and go to state 66
    MODE        shift, and go to state 67
    AND         shift, and go to state 68
    OR          shift, and go to state 69
    RP          shift, and go to state 107


State 77

   31 declaration: CONST T IDENTIFIER . ASSIGN expr

    ASSIGN  shift, and go to state 108


State 78

   13 statement: LC statements RC .

    $default  reduce using rule 13 (statement)


State 79

   18 while: WHILE LP expr . RP statement
   40 expr: expr . ASSIGN expr
   41     | expr . ADD_ASSIGN expr
   42     | expr . SUB_ASSIGN expr
   43     | expr . MUL_ASSIGN expr
   44     | expr . DIV_ASSIGN expr
   45     | expr . ADD expr
   46     | expr . SUB expr
   47     | expr . MUL expr
   48     | expr . DIV expr
   49     | expr . MODE expr
   53     | expr . AND expr
   54     | expr . OR expr
   56     | expr . EQ expr
   57     | expr . NEQ expr
   58     | expr . GQT expr
   59     | expr . LQT expr
   60     | expr . GT expr
   61     | expr . LT expr

    ASSIGN      shift, and go to state 52
    ADD_ASSIGN  shift, and go to state 53
    SUB_ASSIGN  shift, and go to state 54
    MUL_ASSIGN  shift, and go to state 55
    DIV_ASSIGN  shift, and go to state 56
    EQ          shift, and go to state 57
    NEQ         shift, and go to state 58
    GQT         shift, and go to state 59
    LQT         shift, and go to state 60
    GT          shift, and go to state 61
    LT          shift, and go to state 62
    ADD         shift, and go to state 63
    SUB         shift, and go to state 64
    MUL         shift, and go to state 65
    DIV         shift, and go to state 66
    MODE        shift, and go to state 67
    AND         shift, and go to state 68
    OR          shift, and go to state 69
    RP          shift, and go to state 109


State 80

   16 if_else: IF LP expr . RP statement
   17        | IF LP expr . RP statement ELSE statement
   40 expr: expr . ASSIGN expr
   41     | expr . ADD_ASSIGN expr
   42     | expr . SUB_ASSIGN expr
   43     | expr . MUL_ASSIGN expr
   44     | expr . DIV_ASSIGN expr
   45     | expr . ADD expr
   46     | expr . SUB expr
   47     | expr . MUL expr
   48     | expr . DIV expr
   49     | expr . MODE expr
   53     | expr . AND expr
   54     | expr . OR expr
   56     | expr . EQ expr
   57     | expr . NEQ expr
   58     | expr . GQT expr
   59     | expr . LQT expr
   60     | expr . GT expr
   61     | expr . LT expr

    ASSIGN      shift, and go to state 52
    ADD_ASSIGN  shift, and go to state 53
    SUB_ASSIGN  shift, and go to state 54
    MUL_ASSIGN  shift, and go to state 55
    DIV_ASSIGN  shift, and go to state 56
    EQ          shift, and go to state 57
    NEQ         shift, and go to state 58
    GQT         shift, and go to state 59
    LQT         shift, and go to state 60
    GT          shift, and go to state 61
    LT          shift, and go to state 62
    ADD         shift, and go to state 63
    SUB         shift, and go to state 64
    MUL         shift, and go to state 65
    DIV         shift, and go to state 66
    MODE        shift, and go to state 67
    AND         shift, and go to state 68
    OR          shift, and go to state 69
    RP          shift, and go to state 110


State 81

    7 statement: RETURN expr SEMICOLON .

    $default  reduce using rule 7 (statement)


State 82

   19 for: FOR LP statement . statement expr RP statement

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    SUB         shift, and go to state 8
    NOT         shift, and go to state 9
    PRINTF      shift, and go to state 10
    SCANF       shift, and go to state 11
    CONST       shift, and go to state 12
    SEMICOLON   shift, and go to state 13
    LC          shift, and go to state 14
    WHILE       shift, and go to state 15
    IF          shift, and go to state 16
    RETURN      shift, and go to state 17
    FOR         shift, and go to state 18
    IDENTIFIER  shift, and go to state 19
    INTEGER     shift, and go to state 20
    CHAR        shift, and go to state 21
    STRING      shift, and go to state 22

    statement       go to state 111
    func_statement  go to state 26
    if_else         go to state 27
    while           go to state 28
    for             go to state 29
    printf          go to state 30
    scanf           go to state 31
    declaration     go to state 32
    expr            go to state 33
    T               go to state 34


State 83

   40 expr: expr . ASSIGN expr
   40     | expr ASSIGN expr .
   41     | expr . ADD_ASSIGN expr
   42     | expr . SUB_ASSIGN expr
   43     | expr . MUL_ASSIGN expr
   44     | expr . DIV_ASSIGN expr
   45     | expr . ADD expr
   46     | expr . SUB expr
   47     | expr . MUL expr
   48     | expr . DIV expr
   49     | expr . MODE expr
   53     | expr . AND expr
   54     | expr . OR expr
   56     | expr . EQ expr
   57     | expr . NEQ expr
   58     | expr . GQT expr
   59     | expr . LQT expr
   60     | expr . GT expr
   61     | expr . LT expr

    ASSIGN      shift, and go to state 52
    ADD_ASSIGN  shift, and go to state 53
    SUB_ASSIGN  shift, and go to state 54
    MUL_ASSIGN  shift, and go to state 55
    DIV_ASSIGN  shift, and go to state 56
    EQ          shift, and go to state 57
    NEQ         shift, and go to state 58
    GQT         shift, and go to state 59
    LQT         shift, and go to state 60
    GT          shift, and go to state 61
    LT          shift, and go to state 62
    ADD         shift, and go to state 63
    SUB         shift, and go to state 64
    MUL         shift, and go to state 65
    DIV         shift, and go to state 66
    MODE        shift, and go to state 67
    AND         shift, and go to state 68
    OR          shift, and go to state 69

    $default  reduce using rule 40 (expr)


State 84

   40 expr: expr . ASSIGN expr
   41     | expr . ADD_ASSIGN expr
   41     | expr ADD_ASSIGN expr .
   42     | expr . SUB_ASSIGN expr
   43     | expr . MUL_ASSIGN expr
   44     | expr . DIV_ASSIGN expr
   45     | expr . ADD expr
   46     | expr . SUB expr
   47     | expr . MUL expr
   48     | expr . DIV expr
   49     | expr . MODE expr
   53     | expr . AND expr
   54     | expr . OR expr
   56     | expr . EQ expr
   57     | expr . NEQ expr
   58     | expr . GQT expr
   59     | expr . LQT expr
   60     | expr . GT expr
   61     | expr . LT expr

    ASSIGN      shift, and go to state 52
    ADD_ASSIGN  shift, and go to state 53
    SUB_ASSIGN  shift, and go to state 54
    MUL_ASSIGN  shift, and go to state 55
    DIV_ASSIGN  shift, and go to state 56
    EQ          shift, and go to state 57
    NEQ         shift, and go to state 58
    GQT         shift, and go to state 59
    LQT         shift, and go to state 60
    GT          shift, and go to state 61
    LT          shift, and go to state 62
    ADD         shift, and go to state 63
    SUB         shift, and go to state 64
    MUL         shift, and go to state 65
    DIV         shift, and go to state 66
    MODE        shift, and go to state 67
    AND         shift, and go to state 68
    OR          shift, and go to state 69

    $default  reduce using rule 41 (expr)


State 85

   40 expr: expr . ASSIGN expr
   41     | expr . ADD_ASSIGN expr
   42     | expr . SUB_ASSIGN expr
   42     | expr SUB_ASSIGN expr .
   43     | expr . MUL_ASSIGN expr
   44     | expr . DIV_ASSIGN expr
   45     | expr . ADD expr
   46     | expr . SUB expr
   47     | expr . MUL expr
   48     | expr . DIV expr
   49     | expr . MODE expr
   53     | expr . AND expr
   54     | expr . OR expr
   56     | expr . EQ expr
   57     | expr . NEQ expr
   58     | expr . GQT expr
   59     | expr . LQT expr
   60     | expr . GT expr
   61     | expr . LT expr

    ASSIGN      shift, and go to state 52
    ADD_ASSIGN  shift, and go to state 53
    SUB_ASSIGN  shift, and go to state 54
    MUL_ASSIGN  shift, and go to state 55
    DIV_ASSIGN  shift, and go to state 56
    EQ          shift, and go to state 57
    NEQ         shift, and go to state 58
    GQT         shift, and go to state 59
    LQT         shift, and go to state 60
    GT          shift, and go to state 61
    LT          shift, and go to state 62
    ADD         shift, and go to state 63
    SUB         shift, and go to state 64
    MUL         shift, and go to state 65
    DIV         shift, and go to state 66
    MODE        shift, and go to state 67
    AND         shift, and go to state 68
    OR          shift, and go to state 69

    $default  reduce using rule 42 (expr)


State 86

   40 expr: expr . ASSIGN expr
   41     | expr . ADD_ASSIGN expr
   42     | expr . SUB_ASSIGN expr
   43     | expr . MUL_ASSIGN expr
   43     | expr MUL_ASSIGN expr .
   44     | expr . DIV_ASSIGN expr
   45     | expr . ADD expr
   46     | expr . SUB expr
   47     | expr . MUL expr
   48     | expr . DIV expr
   49     | expr . MODE expr
   53     | expr . AND expr
   54     | expr . OR expr
   56     | expr . EQ expr
   57     | expr . NEQ expr
   58     | expr . GQT expr
   59     | expr . LQT expr
   60     | expr . GT expr
   61     | expr . LT expr

    ASSIGN      shift, and go to state 52
    ADD_ASSIGN  shift, and go to state 53
    SUB_ASSIGN  shift, and go to state 54
    MUL_ASSIGN  shift, and go to state 55
    DIV_ASSIGN  shift, and go to state 56
    EQ          shift, and go to state 57
    NEQ         shift, and go to state 58
    GQT         shift, and go to state 59
    LQT         shift, and go to state 60
    GT          shift, and go to state 61
    LT          shift, and go to state 62
    ADD         shift, and go to state 63
    SUB         shift, and go to state 64
    MUL         shift, and go to state 65
    DIV         shift, and go to state 66
    MODE        shift, and go to state 67
    AND         shift, and go to state 68
    OR          shift, and go to state 69

    $default  reduce using rule 43 (expr)


State 87

   40 expr: expr . ASSIGN expr
   41     | expr . ADD_ASSIGN expr
   42     | expr . SUB_ASSIGN expr
   43     | expr . MUL_ASSIGN expr
   44     | expr . DIV_ASSIGN expr
   44     | expr DIV_ASSIGN expr .
   45     | expr . ADD expr
   46     | expr . SUB expr
   47     | expr . MUL expr
   48     | expr . DIV expr
   49     | expr . MODE expr
   53     | expr . AND expr
   54     | expr . OR expr
   56     | expr . EQ expr
   57     | expr . NEQ expr
   58     | expr . GQT expr
   59     | expr . LQT expr
   60     | expr . GT expr
   61     | expr . LT expr

    ASSIGN      shift, and go to state 52
    ADD_ASSIGN  shift, and go to state 53
    SUB_ASSIGN  shift, and go to state 54
    MUL_ASSIGN  shift, and go to state 55
    DIV_ASSIGN  shift, and go to state 56
    EQ          shift, and go to state 57
    NEQ         shift, and go to state 58
    GQT         shift, and go to state 59
    LQT         shift, and go to state 60
    GT          shift, and go to state 61
    LT          shift, and go to state 62
    ADD         shift, and go to state 63
    SUB         shift, and go to state 64
    MUL         shift, and go to state 65
    DIV         shift, and go to state 66
    MODE        shift, and go to state 67
    AND         shift, and go to state 68
    OR          shift, and go to state 69

    $default  reduce using rule 44 (expr)


State 88

   40 expr: expr . ASSIGN expr
   41     | expr . ADD_ASSIGN expr
   42     | expr . SUB_ASSIGN expr
   43     | expr . MUL_ASSIGN expr
   44     | expr . DIV_ASSIGN expr
   45     | expr . ADD expr
   46     | expr . SUB expr
   47     | expr . MUL expr
   48     | expr . DIV expr
   49     | expr . MODE expr
   53     | expr . AND expr
   54     | expr . OR expr
   56     | expr . EQ expr
   56     | expr EQ expr .
   57     | expr . NEQ expr
   58     | expr . GQT expr
   59     | expr . LQT expr
   60     | expr . GT expr
   61     | expr . LT expr

    GQT   shift, and go to state 59
    LQT   shift, and go to state 60
    GT    shift, and go to state 61
    LT    shift, and go to state 62
    ADD   shift, and go to state 63
    SUB   shift, and go to state 64
    MUL   shift, and go to state 65
    DIV   shift, and go to state 66
    MODE  shift, and go to state 67

    $default  reduce using rule 56 (expr)


State 89

   40 expr: expr . ASSIGN expr
   41     | expr . ADD_ASSIGN expr
   42     | expr . SUB_ASSIGN expr
   43     | expr . MUL_ASSIGN expr
   44     | expr . DIV_ASSIGN expr
   45     | expr . ADD expr
   46     | expr . SUB expr
   47     | expr . MUL expr
   48     | expr . DIV expr
   49     | expr . MODE expr
   53     | expr . AND expr
   54     | expr . OR expr
   56     | expr . EQ expr
   57     | expr . NEQ expr
   57     | expr NEQ expr .
   58     | expr . GQT expr
   59     | expr . LQT expr
   60     | expr . GT expr
   61     | expr . LT expr

    GQT   shift, and go to state 59
    LQT   shift, and go to state 60
    GT    shift, and go to state 61
    LT    shift, and go to state 62
    ADD   shift, and go to state 63
    SUB   shift, and go to state 64
    MUL   shift, and go to state 65
    DIV   shift, and go to state 66
    MODE  shift, and go to state 67

    $default  reduce using rule 57 (expr)


State 90

   40 expr: expr . ASSIGN expr
   41     | expr . ADD_ASSIGN expr
   42     | expr . SUB_ASSIGN expr
   43     | expr . MUL_ASSIGN expr
   44     | expr . DIV_ASSIGN expr
   45     | expr . ADD expr
   46     | expr . SUB expr
   47     | expr . MUL expr
   48     | expr . DIV expr
   49     | expr . MODE expr
   53     | expr . AND expr
   54     | expr . OR expr
   56     | expr . EQ expr
   57     | expr . NEQ expr
   58     | expr . GQT expr
   58     | expr GQT expr .
   59     | expr . LQT expr
   60     | expr . GT expr
   61     | expr . LT expr

    ADD   shift, and go to state 63
    SUB   shift, and go to state 64
    MUL   shift, and go to state 65
    DIV   shift, and go to state 66
    MODE  shift, and go to state 67

    $default  reduce using rule 58 (expr)


State 91

   40 expr: expr . ASSIGN expr
   41     | expr . ADD_ASSIGN expr
   42     | expr . SUB_ASSIGN expr
   43     | expr . MUL_ASSIGN expr
   44     | expr . DIV_ASSIGN expr
   45     | expr . ADD expr
   46     | expr . SUB expr
   47     | expr . MUL expr
   48     | expr . DIV expr
   49     | expr . MODE expr
   53     | expr . AND expr
   54     | expr . OR expr
   56     | expr . EQ expr
   57     | expr . NEQ expr
   58     | expr . GQT expr
   59     | expr . LQT expr
   59     | expr LQT expr .
   60     | expr . GT expr
   61     | expr . LT expr

    ADD   shift, and go to state 63
    SUB   shift, and go to state 64
    MUL   shift, and go to state 65
    DIV   shift, and go to state 66
    MODE  shift, and go to state 67

    $default  reduce using rule 59 (expr)


State 92

   40 expr: expr . ASSIGN expr
   41     | expr . ADD_ASSIGN expr
   42     | expr . SUB_ASSIGN expr
   43     | expr . MUL_ASSIGN expr
   44     | expr . DIV_ASSIGN expr
   45     | expr . ADD expr
   46     | expr . SUB expr
   47     | expr . MUL expr
   48     | expr . DIV expr
   49     | expr . MODE expr
   53     | expr . AND expr
   54     | expr . OR expr
   56     | expr . EQ expr
   57     | expr . NEQ expr
   58     | expr . GQT expr
   59     | expr . LQT expr
   60     | expr . GT expr
   60     | expr GT expr .
   61     | expr . LT expr

    ADD   shift, and go to state 63
    SUB   shift, and go to state 64
    MUL   shift, and go to state 65
    DIV   shift, and go to state 66
    MODE  shift, and go to state 67

    $default  reduce using rule 60 (expr)


State 93

   40 expr: expr . ASSIGN expr
   41     | expr . ADD_ASSIGN expr
   42     | expr . SUB_ASSIGN expr
   43     | expr . MUL_ASSIGN expr
   44     | expr . DIV_ASSIGN expr
   45     | expr . ADD expr
   46     | expr . SUB expr
   47     | expr . MUL expr
   48     | expr . DIV expr
   49     | expr . MODE expr
   53     | expr . AND expr
   54     | expr . OR expr
   56     | expr . EQ expr
   57     | expr . NEQ expr
   58     | expr . GQT expr
   59     | expr . LQT expr
   60     | expr . GT expr
   61     | expr . LT expr
   61     | expr LT expr .

    ADD   shift, and go to state 63
    SUB   shift, and go to state 64
    MUL   shift, and go to state 65
    DIV   shift, and go to state 66
    MODE  shift, and go to state 67

    $default  reduce using rule 61 (expr)


State 94

   40 expr: expr . ASSIGN expr
   41     | expr . ADD_ASSIGN expr
   42     | expr . SUB_ASSIGN expr
   43     | expr . MUL_ASSIGN expr
   44     | expr . DIV_ASSIGN expr
   45     | expr . ADD expr
   45     | expr ADD expr .
   46     | expr . SUB expr
   47     | expr . MUL expr
   48     | expr . DIV expr
   49     | expr . MODE expr
   53     | expr . AND expr
   54     | expr . OR expr
   56     | expr . EQ expr
   57     | expr . NEQ expr
   58     | expr . GQT expr
   59     | expr . LQT expr
   60     | expr . GT expr
   61     | expr . LT expr

    MUL   shift, and go to state 65
    DIV   shift, and go to state 66
    MODE  shift, and go to state 67

    $default  reduce using rule 45 (expr)


State 95

   40 expr: expr . ASSIGN expr
   41     | expr . ADD_ASSIGN expr
   42     | expr . SUB_ASSIGN expr
   43     | expr . MUL_ASSIGN expr
   44     | expr . DIV_ASSIGN expr
   45     | expr . ADD expr
   46     | expr . SUB expr
   46     | expr SUB expr .
   47     | expr . MUL expr
   48     | expr . DIV expr
   49     | expr . MODE expr
   53     | expr . AND expr
   54     | expr . OR expr
   56     | expr . EQ expr
   57     | expr . NEQ expr
   58     | expr . GQT expr
   59     | expr . LQT expr
   60     | expr . GT expr
   61     | expr . LT expr

    MUL   shift, and go to state 65
    DIV   shift, and go to state 66
    MODE  shift, and go to state 67

    $default  reduce using rule 46 (expr)


State 96

   40 expr: expr . ASSIGN expr
   41     | expr . ADD_ASSIGN expr
   42     | expr . SUB_ASSIGN expr
   43     | expr . MUL_ASSIGN expr
   44     | expr . DIV_ASSIGN expr
   45     | expr . ADD expr
   46     | expr . SUB expr
   47     | expr . MUL expr
   47     | expr MUL expr .
   48     | expr . DIV expr
   49     | expr . MODE expr
   53     | expr . AND expr
   54     | expr . OR expr
   56     | expr . EQ expr
   57     | expr . NEQ expr
   58     | expr . GQT expr
   59     | expr . LQT expr
   60     | expr . GT expr
   61     | expr . LT expr

    $default  reduce using rule 47 (expr)


State 97

   40 expr: expr . ASSIGN expr
   41     | expr . ADD_ASSIGN expr
   42     | expr . SUB_ASSIGN expr
   43     | expr . MUL_ASSIGN expr
   44     | expr . DIV_ASSIGN expr
   45     | expr . ADD expr
   46     | expr . SUB expr
   47     | expr . MUL expr
   48     | expr . DIV expr
   48     | expr DIV expr .
   49     | expr . MODE expr
   53     | expr . AND expr
   54     | expr . OR expr
   56     | expr . EQ expr
   57     | expr . NEQ expr
   58     | expr . GQT expr
   59     | expr . LQT expr
   60     | expr . GT expr
   61     | expr . LT expr

    $default  reduce using rule 48 (expr)


State 98

   40 expr: expr . ASSIGN expr
   41     | expr . ADD_ASSIGN expr
   42     | expr . SUB_ASSIGN expr
   43     | expr . MUL_ASSIGN expr
   44     | expr . DIV_ASSIGN expr
   45     | expr . ADD expr
   46     | expr . SUB expr
   47     | expr . MUL expr
   48     | expr . DIV expr
   49     | expr . MODE expr
   49     | expr MODE expr .
   53     | expr . AND expr
   54     | expr . OR expr
   56     | expr . EQ expr
   57     | expr . NEQ expr
   58     | expr . GQT expr
   59     | expr . LQT expr
   60     | expr . GT expr
   61     | expr . LT expr

    $default  reduce using rule 49 (expr)


State 99

   40 expr: expr . ASSIGN expr
   41     | expr . ADD_ASSIGN expr
   42     | expr . SUB_ASSIGN expr
   43     | expr . MUL_ASSIGN expr
   44     | expr . DIV_ASSIGN expr
   45     | expr . ADD expr
   46     | expr . SUB expr
   47     | expr . MUL expr
   48     | expr . DIV expr
   49     | expr . MODE expr
   53     | expr . AND expr
   53     | expr AND expr .
   54     | expr . OR expr
   56     | expr . EQ expr
   57     | expr . NEQ expr
   58     | expr . GQT expr
   59     | expr . LQT expr
   60     | expr . GT expr
   61     | expr . LT expr

    EQ    shift, and go to state 57
    NEQ   shift, and go to state 58
    GQT   shift, and go to state 59
    LQT   shift, and go to state 60
    GT    shift, and go to state 61
    LT    shift, and go to state 62
    ADD   shift, and go to state 63
    SUB   shift, and go to state 64
    MUL   shift, and go to state 65
    DIV   shift, and go to state 66
    MODE  shift, and go to state 67

    $default  reduce using rule 53 (expr)


State 100

   40 expr: expr . ASSIGN expr
   41     | expr . ADD_ASSIGN expr
   42     | expr . SUB_ASSIGN expr
   43     | expr . MUL_ASSIGN expr
   44     | expr . DIV_ASSIGN expr
   45     | expr . ADD expr
   46     | expr . SUB expr
   47     | expr . MUL expr
   48     | expr . DIV expr
   49     | expr . MODE expr
   53     | expr . AND expr
   54     | expr . OR expr
   54     | expr OR expr .
   56     | expr . EQ expr
   57     | expr . NEQ expr
   58     | expr . GQT expr
   59     | expr . LQT expr
   60     | expr . GT expr
   61     | expr . LT expr

    EQ    shift, and go to state 57
    NEQ   shift, and go to state 58
    GQT   shift, and go to state 59
    LQT   shift, and go to state 60
    GT    shift, and go to state 61
    LT    shift, and go to state 62
    ADD   shift, and go to state 63
    SUB   shift, and go to state 64
    MUL   shift, and go to state 65
    DIV   shift, and go to state 66
    MODE  shift, and go to state 67
    AND   shift, and go to state 68

    $default  reduce using rule 54 (expr)


State 101

   29 declaration: T IDENTIFIER ASSIGN . expr

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    SUB         shift, and go to state 8
    NOT         shift, and go to state 9
    IDENTIFIER  shift, and go to state 19
    INTEGER     shift, and go to state 20
    CHAR        shift, and go to state 21
    STRING      shift, and go to state 22

    expr  go to state 112


State 102

   15 func_statement: T IDENTIFIER LP . RP statement

    RP  shift, and go to state 113


State 103

   33 id_list: id_list COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 114


State 104

   21 printf: PRINTF LP STRING COMMA . io_list RP

    QUOTE       shift, and go to state 115
    IDENTIFIER  shift, and go to state 116
    INTEGER     shift, and go to state 117
    CHAR        shift, and go to state 118
    STRING      shift, and go to state 119

    io_list  go to state 120


State 105

   20 printf: PRINTF LP expr RP .

    $default  reduce using rule 20 (printf)


State 106

   23 scanf: SCANF LP STRING COMMA . io_list RP

    QUOTE       shift, and go to state 115
    IDENTIFIER  shift, and go to state 116
    INTEGER     shift, and go to state 117
    CHAR        shift, and go to state 118
    STRING      shift, and go to state 119

    io_list  go to state 121


State 107

   22 scanf: SCANF LP expr RP .

    $default  reduce using rule 22 (scanf)


State 108

   31 declaration: CONST T IDENTIFIER ASSIGN . expr

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    SUB         shift, and go to state 8
    NOT         shift, and go to state 9
    IDENTIFIER  shift, and go to state 19
    INTEGER     shift, and go to state 20
    CHAR        shift, and go to state 21
    STRING      shift, and go to state 22

    expr  go to state 122


State 109

   18 while: WHILE LP expr RP . statement

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    SUB         shift, and go to state 8
    NOT         shift, and go to state 9
    PRINTF      shift, and go to state 10
    SCANF       shift, and go to state 11
    CONST       shift, and go to state 12
    SEMICOLON   shift, and go to state 13
    LC          shift, and go to state 14
    WHILE       shift, and go to state 15
    IF          shift, and go to state 16
    RETURN      shift, and go to state 17
    FOR         shift, and go to state 18
    IDENTIFIER  shift, and go to state 19
    INTEGER     shift, and go to state 20
    CHAR        shift, and go to state 21
    STRING      shift, and go to state 22

    statement       go to state 123
    func_statement  go to state 26
    if_else         go to state 27
    while           go to state 28
    for             go to state 29
    printf          go to state 30
    scanf           go to state 31
    declaration     go to state 32
    expr            go to state 33
    T               go to state 34


State 110

   16 if_else: IF LP expr RP . statement
   17        | IF LP expr RP . statement ELSE statement

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    SUB         shift, and go to state 8
    NOT         shift, and go to state 9
    PRINTF      shift, and go to state 10
    SCANF       shift, and go to state 11
    CONST       shift, and go to state 12
    SEMICOLON   shift, and go to state 13
    LC          shift, and go to state 14
    WHILE       shift, and go to state 15
    IF          shift, and go to state 16
    RETURN      shift, and go to state 17
    FOR         shift, and go to state 18
    IDENTIFIER  shift, and go to state 19
    INTEGER     shift, and go to state 20
    CHAR        shift, and go to state 21
    STRING      shift, and go to state 22

    statement       go to state 124
    func_statement  go to state 26
    if_else         go to state 27
    while           go to state 28
    for             go to state 29
    printf          go to state 30
    scanf           go to state 31
    declaration     go to state 32
    expr            go to state 33
    T               go to state 34


State 111

   19 for: FOR LP statement statement . expr RP statement

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    SUB         shift, and go to state 8
    NOT         shift, and go to state 9
    IDENTIFIER  shift, and go to state 19
    INTEGER     shift, and go to state 20
    CHAR        shift, and go to state 21
    STRING      shift, and go to state 22

    expr  go to state 125


State 112

   29 declaration: T IDENTIFIER ASSIGN expr .
   40 expr: expr . ASSIGN expr
   41     | expr . ADD_ASSIGN expr
   42     | expr . SUB_ASSIGN expr
   43     | expr . MUL_ASSIGN expr
   44     | expr . DIV_ASSIGN expr
   45     | expr . ADD expr
   46     | expr . SUB expr
   47     | expr . MUL expr
   48     | expr . DIV expr
   49     | expr . MODE expr
   53     | expr . AND expr
   54     | expr . OR expr
   56     | expr . EQ expr
   57     | expr . NEQ expr
   58     | expr . GQT expr
   59     | expr . LQT expr
   60     | expr . GT expr
   61     | expr . LT expr

    ASSIGN      shift, and go to state 52
    ADD_ASSIGN  shift, and go to state 53
    SUB_ASSIGN  shift, and go to state 54
    MUL_ASSIGN  shift, and go to state 55
    DIV_ASSIGN  shift, and go to state 56
    EQ          shift, and go to state 57
    NEQ         shift, and go to state 58
    GQT         shift, and go to state 59
    LQT         shift, and go to state 60
    GT          shift, and go to state 61
    LT          shift, and go to state 62
    ADD         shift, and go to state 63
    SUB         shift, and go to state 64
    MUL         shift, and go to state 65
    DIV         shift, and go to state 66
    MODE        shift, and go to state 67
    AND         shift, and go to state 68
    OR          shift, and go to state 69

    $default  reduce using rule 29 (declaration)


State 113

   15 func_statement: T IDENTIFIER LP RP . statement

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    SUB         shift, and go to state 8
    NOT         shift, and go to state 9
    PRINTF      shift, and go to state 10
    SCANF       shift, and go to state 11
    CONST       shift, and go to state 12
    SEMICOLON   shift, and go to state 13
    LC          shift, and go to state 14
    WHILE       shift, and go to state 15
    IF          shift, and go to state 16
    RETURN      shift, and go to state 17
    FOR         shift, and go to state 18
    IDENTIFIER  shift, and go to state 19
    INTEGER     shift, and go to state 20
    CHAR        shift, and go to state 21
    STRING      shift, and go to state 22

    statement       go to state 126
    func_statement  go to state 26
    if_else         go to state 27
    while           go to state 28
    for             go to state 29
    printf          go to state 30
    scanf           go to state 31
    declaration     go to state 32
    expr            go to state 33
    T               go to state 34


State 114

   33 id_list: id_list COMMA IDENTIFIER .

    $default  reduce using rule 33 (id_list)


State 115

   28 io_list: QUOTE . IDENTIFIER

    IDENTIFIER  shift, and go to state 127


State 116

   24 io_list: IDENTIFIER .

    $default  reduce using rule 24 (io_list)


State 117

   26 io_list: INTEGER .

    $default  reduce using rule 26 (io_list)


State 118

   27 io_list: CHAR .

    $default  reduce using rule 27 (io_list)


State 119

   25 io_list: STRING .

    $default  reduce using rule 25 (io_list)


State 120

   21 printf: PRINTF LP STRING COMMA io_list . RP

    RP  shift, and go to state 128


State 121

   23 scanf: SCANF LP STRING COMMA io_list . RP

    RP  shift, and go to state 129


State 122

   31 declaration: CONST T IDENTIFIER ASSIGN expr .
   40 expr: expr . ASSIGN expr
   41     | expr . ADD_ASSIGN expr
   42     | expr . SUB_ASSIGN expr
   43     | expr . MUL_ASSIGN expr
   44     | expr . DIV_ASSIGN expr
   45     | expr . ADD expr
   46     | expr . SUB expr
   47     | expr . MUL expr
   48     | expr . DIV expr
   49     | expr . MODE expr
   53     | expr . AND expr
   54     | expr . OR expr
   56     | expr . EQ expr
   57     | expr . NEQ expr
   58     | expr . GQT expr
   59     | expr . LQT expr
   60     | expr . GT expr
   61     | expr . LT expr

    ASSIGN      shift, and go to state 52
    ADD_ASSIGN  shift, and go to state 53
    SUB_ASSIGN  shift, and go to state 54
    MUL_ASSIGN  shift, and go to state 55
    DIV_ASSIGN  shift, and go to state 56
    EQ          shift, and go to state 57
    NEQ         shift, and go to state 58
    GQT         shift, and go to state 59
    LQT         shift, and go to state 60
    GT          shift, and go to state 61
    LT          shift, and go to state 62
    ADD         shift, and go to state 63
    SUB         shift, and go to state 64
    MUL         shift, and go to state 65
    DIV         shift, and go to state 66
    MODE        shift, and go to state 67
    AND         shift, and go to state 68
    OR          shift, and go to state 69

    $default  reduce using rule 31 (declaration)


State 123

   18 while: WHILE LP expr RP statement .

    $default  reduce using rule 18 (while)


State 124

   16 if_else: IF LP expr RP statement .
   17        | IF LP expr RP statement . ELSE statement

    ELSE  shift, and go to state 130

    $default  reduce using rule 16 (if_else)


State 125

   19 for: FOR LP statement statement expr . RP statement
   40 expr: expr . ASSIGN expr
   41     | expr . ADD_ASSIGN expr
   42     | expr . SUB_ASSIGN expr
   43     | expr . MUL_ASSIGN expr
   44     | expr . DIV_ASSIGN expr
   45     | expr . ADD expr
   46     | expr . SUB expr
   47     | expr . MUL expr
   48     | expr . DIV expr
   49     | expr . MODE expr
   53     | expr . AND expr
   54     | expr . OR expr
   56     | expr . EQ expr
   57     | expr . NEQ expr
   58     | expr . GQT expr
   59     | expr . LQT expr
   60     | expr . GT expr
   61     | expr . LT expr

    ASSIGN      shift, and go to state 52
    ADD_ASSIGN  shift, and go to state 53
    SUB_ASSIGN  shift, and go to state 54
    MUL_ASSIGN  shift, and go to state 55
    DIV_ASSIGN  shift, and go to state 56
    EQ          shift, and go to state 57
    NEQ         shift, and go to state 58
    GQT         shift, and go to state 59
    LQT         shift, and go to state 60
    GT          shift, and go to state 61
    LT          shift, and go to state 62
    ADD         shift, and go to state 63
    SUB         shift, and go to state 64
    MUL         shift, and go to state 65
    DIV         shift, and go to state 66
    MODE        shift, and go to state 67
    AND         shift, and go to state 68
    OR          shift, and go to state 69
    RP          shift, and go to state 131


State 126

   15 func_statement: T IDENTIFIER LP RP statement .

    $default  reduce using rule 15 (func_statement)


State 127

   28 io_list: QUOTE IDENTIFIER .

    $default  reduce using rule 28 (io_list)


State 128

   21 printf: PRINTF LP STRING COMMA io_list RP .

    $default  reduce using rule 21 (printf)


State 129

   23 scanf: SCANF LP STRING COMMA io_list RP .

    $default  reduce using rule 23 (scanf)


State 130

   17 if_else: IF LP expr RP statement ELSE . statement

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    SUB         shift, and go to state 8
    NOT         shift, and go to state 9
    PRINTF      shift, and go to state 10
    SCANF       shift, and go to state 11
    CONST       shift, and go to state 12
    SEMICOLON   shift, and go to state 13
    LC          shift, and go to state 14
    WHILE       shift, and go to state 15
    IF          shift, and go to state 16
    RETURN      shift, and go to state 17
    FOR         shift, and go to state 18
    IDENTIFIER  shift, and go to state 19
    INTEGER     shift, and go to state 20
    CHAR        shift, and go to state 21
    STRING      shift, and go to state 22

    statement       go to state 132
    func_statement  go to state 26
    if_else         go to state 27
    while           go to state 28
    for             go to state 29
    printf          go to state 30
    scanf           go to state 31
    declaration     go to state 32
    expr            go to state 33
    T               go to state 34


State 131

   19 for: FOR LP statement statement expr RP . statement

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    SUB         shift, and go to state 8
    NOT         shift, and go to state 9
    PRINTF      shift, and go to state 10
    SCANF       shift, and go to state 11
    CONST       shift, and go to state 12
    SEMICOLON   shift, and go to state 13
    LC          shift, and go to state 14
    WHILE       shift, and go to state 15
    IF          shift, and go to state 16
    RETURN      shift, and go to state 17
    FOR         shift, and go to state 18
    IDENTIFIER  shift, and go to state 19
    INTEGER     shift, and go to state 20
    CHAR        shift, and go to state 21
    STRING      shift, and go to state 22

    statement       go to state 133
    func_statement  go to state 26
    if_else         go to state 27
    while           go to state 28
    for             go to state 29
    printf          go to state 30
    scanf           go to state 31
    declaration     go to state 32
    expr            go to state 33
    T               go to state 34


State 132

   17 if_else: IF LP expr RP statement ELSE statement .

    $default  reduce using rule 17 (if_else)


State 133

   19 for: FOR LP statement statement expr RP statement .

    $default  reduce using rule 19 (for)
