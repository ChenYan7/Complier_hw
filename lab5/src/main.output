Terminals unused in grammar

    BOOL


Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: statement
    3           | statements statement

    4 statement: SEMICOLON
    5          | declaration SEMICOLON
    6          | assign SEMICOLON
    7          | expr SEMICOLON
    8          | RETURN expr SEMICOLON
    9          | if_else
   10          | while
   11          | for
   12          | scanf SEMICOLON
   13          | printf SEMICOLON
   14          | LC statements RC

   15 assign: expr ASSIGN expr

   16 if_else: IF bool_statment statement
   17        | IF bool_statment statement ELSE statement

   18 bool_statment: LP bool_expr RP

   19 while: WHILE bool_statment statement

   20 for: FOR LP statement statement statement RP statement

   21 printf: PRINTF LP expr RP

   22 scanf: SCANF LP expr RP

   23 declaration: T IDENTIFIER ASSIGN expr
   24            | T IDENTIFIER

   25 bool_expr: TRUE
   26          | FALSE
   27          | expr RELOP expr
   28          | NOT bool_expr

   29 expr: IDENTIFIER
   30     | INTEGER
   31     | CHAR
   32     | STRING
   33     | expr ADD expr
   34     | expr SUB expr
   35     | expr MUL expr
   36     | expr DIV expr
   37     | SUB expr

   38 T: T_INT
   39  | T_CHAR
   40  | T_BOOL
   41  | T_STRING


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    T_CHAR (258) 39
    T_INT (259) 38
    T_STRING (260) 41
    T_BOOL (261) 40
    TRUE (262) 25
    FALSE (263) 26
    ASSIGN (264) 15 23
    RELOP (265) 27
    ADD (266) 33
    SUB (267) 34 37
    MUL (268) 35
    DIV (269) 36
    NOT (270) 28
    PRINTF (271) 21
    SCANF (272) 22
    SEMICOLON (273) 4 5 6 7 8 12 13
    LP (274) 18 20 21 22
    RP (275) 18 20 21 22
    LC (276) 14
    RC (277) 14
    WHILE (278) 19
    ELSE (279) 17
    IF (280) 16 17
    RETURN (281) 8
    FOR (282) 20
    IDENTIFIER (283) 23 24 29
    INTEGER (284) 30
    CHAR (285) 31
    BOOL (286)
    STRING (287) 32
    LOWER_THEN_ELSE (288)


Nonterminals, with rules where they appear

    $accept (34)
        on left: 0
    program (35)
        on left: 1
        on right: 0
    statements (36)
        on left: 2 3
        on right: 1 3 14
    statement (37)
        on left: 4 5 6 7 8 9 10 11 12 13 14
        on right: 2 3 16 17 19 20
    assign (38)
        on left: 15
        on right: 6
    if_else (39)
        on left: 16 17
        on right: 9
    bool_statment (40)
        on left: 18
        on right: 16 17 19
    while (41)
        on left: 19
        on right: 10
    for (42)
        on left: 20
        on right: 11
    printf (43)
        on left: 21
        on right: 13
    scanf (44)
        on left: 22
        on right: 12
    declaration (45)
        on left: 23 24
        on right: 5
    bool_expr (46)
        on left: 25 26 27 28
        on right: 18 28
    expr (47)
        on left: 29 30 31 32 33 34 35 36 37
        on right: 7 8 15 21 22 23 27 33 34 35 36 37
    T (48)
        on left: 38 39 40 41
        on right: 23 24


State 0

    0 $accept: . program $end

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    SUB         shift, and go to state 5
    PRINTF      shift, and go to state 6
    SCANF       shift, and go to state 7
    SEMICOLON   shift, and go to state 8
    LC          shift, and go to state 9
    WHILE       shift, and go to state 10
    IF          shift, and go to state 11
    RETURN      shift, and go to state 12
    FOR         shift, and go to state 13
    IDENTIFIER  shift, and go to state 14
    INTEGER     shift, and go to state 15
    CHAR        shift, and go to state 16
    STRING      shift, and go to state 17

    program      go to state 18
    statements   go to state 19
    statement    go to state 20
    assign       go to state 21
    if_else      go to state 22
    while        go to state 23
    for          go to state 24
    printf       go to state 25
    scanf        go to state 26
    declaration  go to state 27
    expr         go to state 28
    T            go to state 29


State 1

   39 T: T_CHAR .

    $default  reduce using rule 39 (T)


State 2

   38 T: T_INT .

    $default  reduce using rule 38 (T)


State 3

   41 T: T_STRING .

    $default  reduce using rule 41 (T)


State 4

   40 T: T_BOOL .

    $default  reduce using rule 40 (T)


State 5

   37 expr: SUB . expr

    SUB         shift, and go to state 5
    IDENTIFIER  shift, and go to state 14
    INTEGER     shift, and go to state 15
    CHAR        shift, and go to state 16
    STRING      shift, and go to state 17

    expr  go to state 30


State 6

   21 printf: PRINTF . LP expr RP

    LP  shift, and go to state 31


State 7

   22 scanf: SCANF . LP expr RP

    LP  shift, and go to state 32


State 8

    4 statement: SEMICOLON .

    $default  reduce using rule 4 (statement)


State 9

   14 statement: LC . statements RC

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    SUB         shift, and go to state 5
    PRINTF      shift, and go to state 6
    SCANF       shift, and go to state 7
    SEMICOLON   shift, and go to state 8
    LC          shift, and go to state 9
    WHILE       shift, and go to state 10
    IF          shift, and go to state 11
    RETURN      shift, and go to state 12
    FOR         shift, and go to state 13
    IDENTIFIER  shift, and go to state 14
    INTEGER     shift, and go to state 15
    CHAR        shift, and go to state 16
    STRING      shift, and go to state 17

    statements   go to state 33
    statement    go to state 20
    assign       go to state 21
    if_else      go to state 22
    while        go to state 23
    for          go to state 24
    printf       go to state 25
    scanf        go to state 26
    declaration  go to state 27
    expr         go to state 28
    T            go to state 29


State 10

   19 while: WHILE . bool_statment statement

    LP  shift, and go to state 34

    bool_statment  go to state 35


State 11

   16 if_else: IF . bool_statment statement
   17        | IF . bool_statment statement ELSE statement

    LP  shift, and go to state 34

    bool_statment  go to state 36


State 12

    8 statement: RETURN . expr SEMICOLON

    SUB         shift, and go to state 5
    IDENTIFIER  shift, and go to state 14
    INTEGER     shift, and go to state 15
    CHAR        shift, and go to state 16
    STRING      shift, and go to state 17

    expr  go to state 37


State 13

   20 for: FOR . LP statement statement statement RP statement

    LP  shift, and go to state 38


State 14

   29 expr: IDENTIFIER .

    $default  reduce using rule 29 (expr)


State 15

   30 expr: INTEGER .

    $default  reduce using rule 30 (expr)


State 16

   31 expr: CHAR .

    $default  reduce using rule 31 (expr)


State 17

   32 expr: STRING .

    $default  reduce using rule 32 (expr)


State 18

    0 $accept: program . $end

    $end  shift, and go to state 39


State 19

    1 program: statements .
    3 statements: statements . statement

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    SUB         shift, and go to state 5
    PRINTF      shift, and go to state 6
    SCANF       shift, and go to state 7
    SEMICOLON   shift, and go to state 8
    LC          shift, and go to state 9
    WHILE       shift, and go to state 10
    IF          shift, and go to state 11
    RETURN      shift, and go to state 12
    FOR         shift, and go to state 13
    IDENTIFIER  shift, and go to state 14
    INTEGER     shift, and go to state 15
    CHAR        shift, and go to state 16
    STRING      shift, and go to state 17

    $default  reduce using rule 1 (program)

    statement    go to state 40
    assign       go to state 21
    if_else      go to state 22
    while        go to state 23
    for          go to state 24
    printf       go to state 25
    scanf        go to state 26
    declaration  go to state 27
    expr         go to state 28
    T            go to state 29


State 20

    2 statements: statement .

    $default  reduce using rule 2 (statements)


State 21

    6 statement: assign . SEMICOLON

    SEMICOLON  shift, and go to state 41


State 22

    9 statement: if_else .

    $default  reduce using rule 9 (statement)


State 23

   10 statement: while .

    $default  reduce using rule 10 (statement)


State 24

   11 statement: for .

    $default  reduce using rule 11 (statement)


State 25

   13 statement: printf . SEMICOLON

    SEMICOLON  shift, and go to state 42


State 26

   12 statement: scanf . SEMICOLON

    SEMICOLON  shift, and go to state 43


State 27

    5 statement: declaration . SEMICOLON

    SEMICOLON  shift, and go to state 44


State 28

    7 statement: expr . SEMICOLON
   15 assign: expr . ASSIGN expr
   33 expr: expr . ADD expr
   34     | expr . SUB expr
   35     | expr . MUL expr
   36     | expr . DIV expr

    ASSIGN     shift, and go to state 45
    ADD        shift, and go to state 46
    SUB        shift, and go to state 47
    MUL        shift, and go to state 48
    DIV        shift, and go to state 49
    SEMICOLON  shift, and go to state 50


State 29

   23 declaration: T . IDENTIFIER ASSIGN expr
   24            | T . IDENTIFIER

    IDENTIFIER  shift, and go to state 51


State 30

   33 expr: expr . ADD expr
   34     | expr . SUB expr
   35     | expr . MUL expr
   36     | expr . DIV expr
   37     | SUB expr .

    $default  reduce using rule 37 (expr)


State 31

   21 printf: PRINTF LP . expr RP

    SUB         shift, and go to state 5
    IDENTIFIER  shift, and go to state 14
    INTEGER     shift, and go to state 15
    CHAR        shift, and go to state 16
    STRING      shift, and go to state 17

    expr  go to state 52


State 32

   22 scanf: SCANF LP . expr RP

    SUB         shift, and go to state 5
    IDENTIFIER  shift, and go to state 14
    INTEGER     shift, and go to state 15
    CHAR        shift, and go to state 16
    STRING      shift, and go to state 17

    expr  go to state 53


State 33

    3 statements: statements . statement
   14 statement: LC statements . RC

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    SUB         shift, and go to state 5
    PRINTF      shift, and go to state 6
    SCANF       shift, and go to state 7
    SEMICOLON   shift, and go to state 8
    LC          shift, and go to state 9
    RC          shift, and go to state 54
    WHILE       shift, and go to state 10
    IF          shift, and go to state 11
    RETURN      shift, and go to state 12
    FOR         shift, and go to state 13
    IDENTIFIER  shift, and go to state 14
    INTEGER     shift, and go to state 15
    CHAR        shift, and go to state 16
    STRING      shift, and go to state 17

    statement    go to state 40
    assign       go to state 21
    if_else      go to state 22
    while        go to state 23
    for          go to state 24
    printf       go to state 25
    scanf        go to state 26
    declaration  go to state 27
    expr         go to state 28
    T            go to state 29


State 34

   18 bool_statment: LP . bool_expr RP

    TRUE        shift, and go to state 55
    FALSE       shift, and go to state 56
    SUB         shift, and go to state 5
    NOT         shift, and go to state 57
    IDENTIFIER  shift, and go to state 14
    INTEGER     shift, and go to state 15
    CHAR        shift, and go to state 16
    STRING      shift, and go to state 17

    bool_expr  go to state 58
    expr       go to state 59


State 35

   19 while: WHILE bool_statment . statement

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    SUB         shift, and go to state 5
    PRINTF      shift, and go to state 6
    SCANF       shift, and go to state 7
    SEMICOLON   shift, and go to state 8
    LC          shift, and go to state 9
    WHILE       shift, and go to state 10
    IF          shift, and go to state 11
    RETURN      shift, and go to state 12
    FOR         shift, and go to state 13
    IDENTIFIER  shift, and go to state 14
    INTEGER     shift, and go to state 15
    CHAR        shift, and go to state 16
    STRING      shift, and go to state 17

    statement    go to state 60
    assign       go to state 21
    if_else      go to state 22
    while        go to state 23
    for          go to state 24
    printf       go to state 25
    scanf        go to state 26
    declaration  go to state 27
    expr         go to state 28
    T            go to state 29


State 36

   16 if_else: IF bool_statment . statement
   17        | IF bool_statment . statement ELSE statement

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    SUB         shift, and go to state 5
    PRINTF      shift, and go to state 6
    SCANF       shift, and go to state 7
    SEMICOLON   shift, and go to state 8
    LC          shift, and go to state 9
    WHILE       shift, and go to state 10
    IF          shift, and go to state 11
    RETURN      shift, and go to state 12
    FOR         shift, and go to state 13
    IDENTIFIER  shift, and go to state 14
    INTEGER     shift, and go to state 15
    CHAR        shift, and go to state 16
    STRING      shift, and go to state 17

    statement    go to state 61
    assign       go to state 21
    if_else      go to state 22
    while        go to state 23
    for          go to state 24
    printf       go to state 25
    scanf        go to state 26
    declaration  go to state 27
    expr         go to state 28
    T            go to state 29


State 37

    8 statement: RETURN expr . SEMICOLON
   33 expr: expr . ADD expr
   34     | expr . SUB expr
   35     | expr . MUL expr
   36     | expr . DIV expr

    ADD        shift, and go to state 46
    SUB        shift, and go to state 47
    MUL        shift, and go to state 48
    DIV        shift, and go to state 49
    SEMICOLON  shift, and go to state 62


State 38

   20 for: FOR LP . statement statement statement RP statement

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    SUB         shift, and go to state 5
    PRINTF      shift, and go to state 6
    SCANF       shift, and go to state 7
    SEMICOLON   shift, and go to state 8
    LC          shift, and go to state 9
    WHILE       shift, and go to state 10
    IF          shift, and go to state 11
    RETURN      shift, and go to state 12
    FOR         shift, and go to state 13
    IDENTIFIER  shift, and go to state 14
    INTEGER     shift, and go to state 15
    CHAR        shift, and go to state 16
    STRING      shift, and go to state 17

    statement    go to state 63
    assign       go to state 21
    if_else      go to state 22
    while        go to state 23
    for          go to state 24
    printf       go to state 25
    scanf        go to state 26
    declaration  go to state 27
    expr         go to state 28
    T            go to state 29


State 39

    0 $accept: program $end .

    $default  accept


State 40

    3 statements: statements statement .

    $default  reduce using rule 3 (statements)


State 41

    6 statement: assign SEMICOLON .

    $default  reduce using rule 6 (statement)


State 42

   13 statement: printf SEMICOLON .

    $default  reduce using rule 13 (statement)


State 43

   12 statement: scanf SEMICOLON .

    $default  reduce using rule 12 (statement)


State 44

    5 statement: declaration SEMICOLON .

    $default  reduce using rule 5 (statement)


State 45

   15 assign: expr ASSIGN . expr

    SUB         shift, and go to state 5
    IDENTIFIER  shift, and go to state 14
    INTEGER     shift, and go to state 15
    CHAR        shift, and go to state 16
    STRING      shift, and go to state 17

    expr  go to state 64


State 46

   33 expr: expr ADD . expr

    SUB         shift, and go to state 5
    IDENTIFIER  shift, and go to state 14
    INTEGER     shift, and go to state 15
    CHAR        shift, and go to state 16
    STRING      shift, and go to state 17

    expr  go to state 65


State 47

   34 expr: expr SUB . expr

    SUB         shift, and go to state 5
    IDENTIFIER  shift, and go to state 14
    INTEGER     shift, and go to state 15
    CHAR        shift, and go to state 16
    STRING      shift, and go to state 17

    expr  go to state 66


State 48

   35 expr: expr MUL . expr

    SUB         shift, and go to state 5
    IDENTIFIER  shift, and go to state 14
    INTEGER     shift, and go to state 15
    CHAR        shift, and go to state 16
    STRING      shift, and go to state 17

    expr  go to state 67


State 49

   36 expr: expr DIV . expr

    SUB         shift, and go to state 5
    IDENTIFIER  shift, and go to state 14
    INTEGER     shift, and go to state 15
    CHAR        shift, and go to state 16
    STRING      shift, and go to state 17

    expr  go to state 68


State 50

    7 statement: expr SEMICOLON .

    $default  reduce using rule 7 (statement)


State 51

   23 declaration: T IDENTIFIER . ASSIGN expr
   24            | T IDENTIFIER .

    ASSIGN  shift, and go to state 69

    $default  reduce using rule 24 (declaration)


State 52

   21 printf: PRINTF LP expr . RP
   33 expr: expr . ADD expr
   34     | expr . SUB expr
   35     | expr . MUL expr
   36     | expr . DIV expr

    ADD  shift, and go to state 46
    SUB  shift, and go to state 47
    MUL  shift, and go to state 48
    DIV  shift, and go to state 49
    RP   shift, and go to state 70


State 53

   22 scanf: SCANF LP expr . RP
   33 expr: expr . ADD expr
   34     | expr . SUB expr
   35     | expr . MUL expr
   36     | expr . DIV expr

    ADD  shift, and go to state 46
    SUB  shift, and go to state 47
    MUL  shift, and go to state 48
    DIV  shift, and go to state 49
    RP   shift, and go to state 71


State 54

   14 statement: LC statements RC .

    $default  reduce using rule 14 (statement)


State 55

   25 bool_expr: TRUE .

    $default  reduce using rule 25 (bool_expr)


State 56

   26 bool_expr: FALSE .

    $default  reduce using rule 26 (bool_expr)


State 57

   28 bool_expr: NOT . bool_expr

    TRUE        shift, and go to state 55
    FALSE       shift, and go to state 56
    SUB         shift, and go to state 5
    NOT         shift, and go to state 57
    IDENTIFIER  shift, and go to state 14
    INTEGER     shift, and go to state 15
    CHAR        shift, and go to state 16
    STRING      shift, and go to state 17

    bool_expr  go to state 72
    expr       go to state 59


State 58

   18 bool_statment: LP bool_expr . RP

    RP  shift, and go to state 73


State 59

   27 bool_expr: expr . RELOP expr
   33 expr: expr . ADD expr
   34     | expr . SUB expr
   35     | expr . MUL expr
   36     | expr . DIV expr

    RELOP  shift, and go to state 74
    ADD    shift, and go to state 46
    SUB    shift, and go to state 47
    MUL    shift, and go to state 48
    DIV    shift, and go to state 49


State 60

   19 while: WHILE bool_statment statement .

    $default  reduce using rule 19 (while)


State 61

   16 if_else: IF bool_statment statement .
   17        | IF bool_statment statement . ELSE statement

    ELSE  shift, and go to state 75

    $default  reduce using rule 16 (if_else)


State 62

    8 statement: RETURN expr SEMICOLON .

    $default  reduce using rule 8 (statement)


State 63

   20 for: FOR LP statement . statement statement RP statement

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    SUB         shift, and go to state 5
    PRINTF      shift, and go to state 6
    SCANF       shift, and go to state 7
    SEMICOLON   shift, and go to state 8
    LC          shift, and go to state 9
    WHILE       shift, and go to state 10
    IF          shift, and go to state 11
    RETURN      shift, and go to state 12
    FOR         shift, and go to state 13
    IDENTIFIER  shift, and go to state 14
    INTEGER     shift, and go to state 15
    CHAR        shift, and go to state 16
    STRING      shift, and go to state 17

    statement    go to state 76
    assign       go to state 21
    if_else      go to state 22
    while        go to state 23
    for          go to state 24
    printf       go to state 25
    scanf        go to state 26
    declaration  go to state 27
    expr         go to state 28
    T            go to state 29


State 64

   15 assign: expr ASSIGN expr .
   33 expr: expr . ADD expr
   34     | expr . SUB expr
   35     | expr . MUL expr
   36     | expr . DIV expr

    ADD  shift, and go to state 46
    SUB  shift, and go to state 47
    MUL  shift, and go to state 48
    DIV  shift, and go to state 49

    $default  reduce using rule 15 (assign)


State 65

   33 expr: expr . ADD expr
   33     | expr ADD expr .
   34     | expr . SUB expr
   35     | expr . MUL expr
   36     | expr . DIV expr

    $default  reduce using rule 33 (expr)


State 66

   33 expr: expr . ADD expr
   34     | expr . SUB expr
   34     | expr SUB expr .
   35     | expr . MUL expr
   36     | expr . DIV expr

    $default  reduce using rule 34 (expr)


State 67

   33 expr: expr . ADD expr
   34     | expr . SUB expr
   35     | expr . MUL expr
   35     | expr MUL expr .
   36     | expr . DIV expr

    ADD  shift, and go to state 46
    SUB  shift, and go to state 47

    $default  reduce using rule 35 (expr)


State 68

   33 expr: expr . ADD expr
   34     | expr . SUB expr
   35     | expr . MUL expr
   36     | expr . DIV expr
   36     | expr DIV expr .

    ADD  shift, and go to state 46
    SUB  shift, and go to state 47

    $default  reduce using rule 36 (expr)


State 69

   23 declaration: T IDENTIFIER ASSIGN . expr

    SUB         shift, and go to state 5
    IDENTIFIER  shift, and go to state 14
    INTEGER     shift, and go to state 15
    CHAR        shift, and go to state 16
    STRING      shift, and go to state 17

    expr  go to state 77


State 70

   21 printf: PRINTF LP expr RP .

    $default  reduce using rule 21 (printf)


State 71

   22 scanf: SCANF LP expr RP .

    $default  reduce using rule 22 (scanf)


State 72

   28 bool_expr: NOT bool_expr .

    $default  reduce using rule 28 (bool_expr)


State 73

   18 bool_statment: LP bool_expr RP .

    $default  reduce using rule 18 (bool_statment)


State 74

   27 bool_expr: expr RELOP . expr

    SUB         shift, and go to state 5
    IDENTIFIER  shift, and go to state 14
    INTEGER     shift, and go to state 15
    CHAR        shift, and go to state 16
    STRING      shift, and go to state 17

    expr  go to state 78


State 75

   17 if_else: IF bool_statment statement ELSE . statement

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    SUB         shift, and go to state 5
    PRINTF      shift, and go to state 6
    SCANF       shift, and go to state 7
    SEMICOLON   shift, and go to state 8
    LC          shift, and go to state 9
    WHILE       shift, and go to state 10
    IF          shift, and go to state 11
    RETURN      shift, and go to state 12
    FOR         shift, and go to state 13
    IDENTIFIER  shift, and go to state 14
    INTEGER     shift, and go to state 15
    CHAR        shift, and go to state 16
    STRING      shift, and go to state 17

    statement    go to state 79
    assign       go to state 21
    if_else      go to state 22
    while        go to state 23
    for          go to state 24
    printf       go to state 25
    scanf        go to state 26
    declaration  go to state 27
    expr         go to state 28
    T            go to state 29


State 76

   20 for: FOR LP statement statement . statement RP statement

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    SUB         shift, and go to state 5
    PRINTF      shift, and go to state 6
    SCANF       shift, and go to state 7
    SEMICOLON   shift, and go to state 8
    LC          shift, and go to state 9
    WHILE       shift, and go to state 10
    IF          shift, and go to state 11
    RETURN      shift, and go to state 12
    FOR         shift, and go to state 13
    IDENTIFIER  shift, and go to state 14
    INTEGER     shift, and go to state 15
    CHAR        shift, and go to state 16
    STRING      shift, and go to state 17

    statement    go to state 80
    assign       go to state 21
    if_else      go to state 22
    while        go to state 23
    for          go to state 24
    printf       go to state 25
    scanf        go to state 26
    declaration  go to state 27
    expr         go to state 28
    T            go to state 29


State 77

   23 declaration: T IDENTIFIER ASSIGN expr .
   33 expr: expr . ADD expr
   34     | expr . SUB expr
   35     | expr . MUL expr
   36     | expr . DIV expr

    ADD  shift, and go to state 46
    SUB  shift, and go to state 47
    MUL  shift, and go to state 48
    DIV  shift, and go to state 49

    $default  reduce using rule 23 (declaration)


State 78

   27 bool_expr: expr RELOP expr .
   33 expr: expr . ADD expr
   34     | expr . SUB expr
   35     | expr . MUL expr
   36     | expr . DIV expr

    ADD  shift, and go to state 46
    SUB  shift, and go to state 47
    MUL  shift, and go to state 48
    DIV  shift, and go to state 49

    $default  reduce using rule 27 (bool_expr)


State 79

   17 if_else: IF bool_statment statement ELSE statement .

    $default  reduce using rule 17 (if_else)


State 80

   20 for: FOR LP statement statement statement . RP statement

    RP  shift, and go to state 81


State 81

   20 for: FOR LP statement statement statement RP . statement

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    SUB         shift, and go to state 5
    PRINTF      shift, and go to state 6
    SCANF       shift, and go to state 7
    SEMICOLON   shift, and go to state 8
    LC          shift, and go to state 9
    WHILE       shift, and go to state 10
    IF          shift, and go to state 11
    RETURN      shift, and go to state 12
    FOR         shift, and go to state 13
    IDENTIFIER  shift, and go to state 14
    INTEGER     shift, and go to state 15
    CHAR        shift, and go to state 16
    STRING      shift, and go to state 17

    statement    go to state 82
    assign       go to state 21
    if_else      go to state 22
    while        go to state 23
    for          go to state 24
    printf       go to state 25
    scanf        go to state 26
    declaration  go to state 27
    expr         go to state 28
    T            go to state 29


State 82

   20 for: FOR LP statement statement statement RP statement .

    $default  reduce using rule 20 (for)
