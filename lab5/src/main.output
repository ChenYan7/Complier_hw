Terminals unused in grammar

    BOOL


Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: statement
    3           | statements statement

    4 statement: SEMICOLON
    5          | declaration SEMICOLON
    6          | expr SEMICOLON
    7          | RETURN expr SEMICOLON
    8          | if_else
    9          | while
   10          | for
   11          | scanf SEMICOLON
   12          | printf SEMICOLON
   13          | LC statements RC
   14          | func_statement

   15 func_statement: T IDENTIFIER LP RP statement

   16 if_else: IF LP expr RP statement
   17        | IF LP expr RP statement ELSE statement

   18 while: WHILE LP expr RP statement

   19 for: FOR LP statement statement expr RP statement
   20    | FOR LP statement statement RP statement

   21 printf: PRINTF LP expr RP
   22       | PRINTF LP STRING COMMA io_list RP

   23 scanf: SCANF LP expr RP
   24      | SCANF LP STRING COMMA io_list RP

   25 io_list: expr
   26        | io_list COMMA expr

   27 declaration: T IDENTIFIER ASSIGN expr
   28            | T id_list
   29            | CONST T IDENTIFIER ASSIGN expr

   30 id_list: IDENTIFIER
   31        | id_list COMMA IDENTIFIER

   32 expr: IDENTIFIER
   33     | QUOTE IDENTIFIER
   34     | INTEGER
   35     | CHAR
   36     | STRING
   37     | IDENTIFIER INC
   38     | INC IDENTIFIER
   39     | IDENTIFIER DEC
   40     | DEC IDENTIFIER
   41     | expr ASSIGN expr
   42     | expr ADD_ASSIGN expr
   43     | expr SUB_ASSIGN expr
   44     | expr MUL_ASSIGN expr
   45     | expr DIV_ASSIGN expr
   46     | expr ADD expr
   47     | expr SUB expr
   48     | expr MUL expr
   49     | expr DIV expr
   50     | expr MODE expr
   51     | SUB expr
   52     | ADD expr
   53     | TRUE
   54     | FALSE
   55     | expr AND expr
   56     | expr OR expr
   57     | NOT expr
   58     | expr EQ expr
   59     | expr NEQ expr
   60     | expr GQT expr
   61     | expr LQT expr
   62     | expr GT expr
   63     | expr LT expr

   64 T: T_INT
   65  | T_CHAR
   66  | T_BOOL
   67  | T_STRING
   68  | T_VOID


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    T_CHAR (258) 65
    T_INT (259) 64
    T_STRING (260) 67
    T_BOOL (261) 66
    T_VOID (262) 68
    TRUE (263) 53
    FALSE (264) 54
    ASSIGN (265) 27 29 41
    ADD_ASSIGN (266) 42
    SUB_ASSIGN (267) 43
    MUL_ASSIGN (268) 44
    DIV_ASSIGN (269) 45
    EQ (270) 58
    NEQ (271) 59
    GQT (272) 60
    LQT (273) 61
    GT (274) 62
    LT (275) 63
    ADD (276) 46 52
    SUB (277) 47 51
    MUL (278) 48
    DIV (279) 49
    MODE (280) 50
    INC (281) 37 38
    DEC (282) 39 40
    AND (283) 55
    OR (284) 56
    NOT (285) 57
    PRINTF (286) 21 22
    SCANF (287) 23 24
    QUOTE (288) 33
    CONST (289) 29
    SEMICOLON (290) 4 5 6 7 11 12
    COMMA (291) 22 24 26 31
    LP (292) 15 16 17 18 19 20 21 22 23 24
    RP (293) 15 16 17 18 19 20 21 22 23 24
    LC (294) 13
    RC (295) 13
    WHILE (296) 18
    ELSE (297) 17
    IF (298) 16 17
    RETURN (299) 7
    FOR (300) 19 20
    IDENTIFIER (301) 15 27 29 30 31 32 33 37 38 39 40
    INTEGER (302) 34
    CHAR (303) 35
    BOOL (304)
    STRING (305) 22 24 36
    UMINUS (306)
    UADD (307)
    LOWER_THEN_ELSE (308)


Nonterminals, with rules where they appear

    $accept (54)
        on left: 0
    program (55)
        on left: 1
        on right: 0
    statements (56)
        on left: 2 3
        on right: 1 3 13
    statement (57)
        on left: 4 5 6 7 8 9 10 11 12 13 14
        on right: 2 3 15 16 17 18 19 20
    func_statement (58)
        on left: 15
        on right: 14
    if_else (59)
        on left: 16 17
        on right: 8
    while (60)
        on left: 18
        on right: 9
    for (61)
        on left: 19 20
        on right: 10
    printf (62)
        on left: 21 22
        on right: 12
    scanf (63)
        on left: 23 24
        on right: 11
    io_list (64)
        on left: 25 26
        on right: 22 24 26
    declaration (65)
        on left: 27 28 29
        on right: 5
    id_list (66)
        on left: 30 31
        on right: 28 31
    expr (67)
        on left: 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63
        on right: 6 7 16 17 18 19 21 23 25 26 27 29 41 42 43 44 45 46 47 48 49 50 51 52 55 56 57 58 59 60 61 62 63
    T (68)
        on left: 64 65 66 67 68
        on right: 15 27 28 29


State 0

    0 $accept: . program $end

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    INC         shift, and go to state 10
    DEC         shift, and go to state 11
    NOT         shift, and go to state 12
    PRINTF      shift, and go to state 13
    SCANF       shift, and go to state 14
    QUOTE       shift, and go to state 15
    CONST       shift, and go to state 16
    SEMICOLON   shift, and go to state 17
    LC          shift, and go to state 18
    WHILE       shift, and go to state 19
    IF          shift, and go to state 20
    RETURN      shift, and go to state 21
    FOR         shift, and go to state 22
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26

    program         go to state 27
    statements      go to state 28
    statement       go to state 29
    func_statement  go to state 30
    if_else         go to state 31
    while           go to state 32
    for             go to state 33
    printf          go to state 34
    scanf           go to state 35
    declaration     go to state 36
    expr            go to state 37
    T               go to state 38


State 1

   65 T: T_CHAR .

    $default  reduce using rule 65 (T)


State 2

   64 T: T_INT .

    $default  reduce using rule 64 (T)


State 3

   67 T: T_STRING .

    $default  reduce using rule 67 (T)


State 4

   66 T: T_BOOL .

    $default  reduce using rule 66 (T)


State 5

   68 T: T_VOID .

    $default  reduce using rule 68 (T)


State 6

   53 expr: TRUE .

    $default  reduce using rule 53 (expr)


State 7

   54 expr: FALSE .

    $default  reduce using rule 54 (expr)


State 8

   52 expr: ADD . expr

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    INC         shift, and go to state 10
    DEC         shift, and go to state 11
    NOT         shift, and go to state 12
    QUOTE       shift, and go to state 15
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26

    expr  go to state 39


State 9

   51 expr: SUB . expr

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    INC         shift, and go to state 10
    DEC         shift, and go to state 11
    NOT         shift, and go to state 12
    QUOTE       shift, and go to state 15
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26

    expr  go to state 40


State 10

   38 expr: INC . IDENTIFIER

    IDENTIFIER  shift, and go to state 41


State 11

   40 expr: DEC . IDENTIFIER

    IDENTIFIER  shift, and go to state 42


State 12

   57 expr: NOT . expr

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    INC         shift, and go to state 10
    DEC         shift, and go to state 11
    NOT         shift, and go to state 12
    QUOTE       shift, and go to state 15
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26

    expr  go to state 43


State 13

   21 printf: PRINTF . LP expr RP
   22       | PRINTF . LP STRING COMMA io_list RP

    LP  shift, and go to state 44


State 14

   23 scanf: SCANF . LP expr RP
   24      | SCANF . LP STRING COMMA io_list RP

    LP  shift, and go to state 45


State 15

   33 expr: QUOTE . IDENTIFIER

    IDENTIFIER  shift, and go to state 46


State 16

   29 declaration: CONST . T IDENTIFIER ASSIGN expr

    T_CHAR    shift, and go to state 1
    T_INT     shift, and go to state 2
    T_STRING  shift, and go to state 3
    T_BOOL    shift, and go to state 4
    T_VOID    shift, and go to state 5

    T  go to state 47


State 17

    4 statement: SEMICOLON .

    $default  reduce using rule 4 (statement)


State 18

   13 statement: LC . statements RC

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    INC         shift, and go to state 10
    DEC         shift, and go to state 11
    NOT         shift, and go to state 12
    PRINTF      shift, and go to state 13
    SCANF       shift, and go to state 14
    QUOTE       shift, and go to state 15
    CONST       shift, and go to state 16
    SEMICOLON   shift, and go to state 17
    LC          shift, and go to state 18
    WHILE       shift, and go to state 19
    IF          shift, and go to state 20
    RETURN      shift, and go to state 21
    FOR         shift, and go to state 22
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26

    statements      go to state 48
    statement       go to state 29
    func_statement  go to state 30
    if_else         go to state 31
    while           go to state 32
    for             go to state 33
    printf          go to state 34
    scanf           go to state 35
    declaration     go to state 36
    expr            go to state 37
    T               go to state 38


State 19

   18 while: WHILE . LP expr RP statement

    LP  shift, and go to state 49


State 20

   16 if_else: IF . LP expr RP statement
   17        | IF . LP expr RP statement ELSE statement

    LP  shift, and go to state 50


State 21

    7 statement: RETURN . expr SEMICOLON

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    INC         shift, and go to state 10
    DEC         shift, and go to state 11
    NOT         shift, and go to state 12
    QUOTE       shift, and go to state 15
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26

    expr  go to state 51


State 22

   19 for: FOR . LP statement statement expr RP statement
   20    | FOR . LP statement statement RP statement

    LP  shift, and go to state 52


State 23

   32 expr: IDENTIFIER .
   37     | IDENTIFIER . INC
   39     | IDENTIFIER . DEC

    INC  shift, and go to state 53
    DEC  shift, and go to state 54

    $default  reduce using rule 32 (expr)


State 24

   34 expr: INTEGER .

    $default  reduce using rule 34 (expr)


State 25

   35 expr: CHAR .

    $default  reduce using rule 35 (expr)


State 26

   36 expr: STRING .

    $default  reduce using rule 36 (expr)


State 27

    0 $accept: program . $end

    $end  shift, and go to state 55


State 28

    1 program: statements .
    3 statements: statements . statement

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    INC         shift, and go to state 10
    DEC         shift, and go to state 11
    NOT         shift, and go to state 12
    PRINTF      shift, and go to state 13
    SCANF       shift, and go to state 14
    QUOTE       shift, and go to state 15
    CONST       shift, and go to state 16
    SEMICOLON   shift, and go to state 17
    LC          shift, and go to state 18
    WHILE       shift, and go to state 19
    IF          shift, and go to state 20
    RETURN      shift, and go to state 21
    FOR         shift, and go to state 22
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26

    $default  reduce using rule 1 (program)

    statement       go to state 56
    func_statement  go to state 30
    if_else         go to state 31
    while           go to state 32
    for             go to state 33
    printf          go to state 34
    scanf           go to state 35
    declaration     go to state 36
    expr            go to state 37
    T               go to state 38


State 29

    2 statements: statement .

    $default  reduce using rule 2 (statements)


State 30

   14 statement: func_statement .

    $default  reduce using rule 14 (statement)


State 31

    8 statement: if_else .

    $default  reduce using rule 8 (statement)


State 32

    9 statement: while .

    $default  reduce using rule 9 (statement)


State 33

   10 statement: for .

    $default  reduce using rule 10 (statement)


State 34

   12 statement: printf . SEMICOLON

    SEMICOLON  shift, and go to state 57


State 35

   11 statement: scanf . SEMICOLON

    SEMICOLON  shift, and go to state 58


State 36

    5 statement: declaration . SEMICOLON

    SEMICOLON  shift, and go to state 59


State 37

    6 statement: expr . SEMICOLON
   41 expr: expr . ASSIGN expr
   42     | expr . ADD_ASSIGN expr
   43     | expr . SUB_ASSIGN expr
   44     | expr . MUL_ASSIGN expr
   45     | expr . DIV_ASSIGN expr
   46     | expr . ADD expr
   47     | expr . SUB expr
   48     | expr . MUL expr
   49     | expr . DIV expr
   50     | expr . MODE expr
   55     | expr . AND expr
   56     | expr . OR expr
   58     | expr . EQ expr
   59     | expr . NEQ expr
   60     | expr . GQT expr
   61     | expr . LQT expr
   62     | expr . GT expr
   63     | expr . LT expr

    ASSIGN      shift, and go to state 60
    ADD_ASSIGN  shift, and go to state 61
    SUB_ASSIGN  shift, and go to state 62
    MUL_ASSIGN  shift, and go to state 63
    DIV_ASSIGN  shift, and go to state 64
    EQ          shift, and go to state 65
    NEQ         shift, and go to state 66
    GQT         shift, and go to state 67
    LQT         shift, and go to state 68
    GT          shift, and go to state 69
    LT          shift, and go to state 70
    ADD         shift, and go to state 71
    SUB         shift, and go to state 72
    MUL         shift, and go to state 73
    DIV         shift, and go to state 74
    MODE        shift, and go to state 75
    AND         shift, and go to state 76
    OR          shift, and go to state 77
    SEMICOLON   shift, and go to state 78


State 38

   15 func_statement: T . IDENTIFIER LP RP statement
   27 declaration: T . IDENTIFIER ASSIGN expr
   28            | T . id_list

    IDENTIFIER  shift, and go to state 79

    id_list  go to state 80


State 39

   41 expr: expr . ASSIGN expr
   42     | expr . ADD_ASSIGN expr
   43     | expr . SUB_ASSIGN expr
   44     | expr . MUL_ASSIGN expr
   45     | expr . DIV_ASSIGN expr
   46     | expr . ADD expr
   47     | expr . SUB expr
   48     | expr . MUL expr
   49     | expr . DIV expr
   50     | expr . MODE expr
   52     | ADD expr .
   55     | expr . AND expr
   56     | expr . OR expr
   58     | expr . EQ expr
   59     | expr . NEQ expr
   60     | expr . GQT expr
   61     | expr . LQT expr
   62     | expr . GT expr
   63     | expr . LT expr

    $default  reduce using rule 52 (expr)


State 40

   41 expr: expr . ASSIGN expr
   42     | expr . ADD_ASSIGN expr
   43     | expr . SUB_ASSIGN expr
   44     | expr . MUL_ASSIGN expr
   45     | expr . DIV_ASSIGN expr
   46     | expr . ADD expr
   47     | expr . SUB expr
   48     | expr . MUL expr
   49     | expr . DIV expr
   50     | expr . MODE expr
   51     | SUB expr .
   55     | expr . AND expr
   56     | expr . OR expr
   58     | expr . EQ expr
   59     | expr . NEQ expr
   60     | expr . GQT expr
   61     | expr . LQT expr
   62     | expr . GT expr
   63     | expr . LT expr

    $default  reduce using rule 51 (expr)


State 41

   38 expr: INC IDENTIFIER .

    $default  reduce using rule 38 (expr)


State 42

   40 expr: DEC IDENTIFIER .

    $default  reduce using rule 40 (expr)


State 43

   41 expr: expr . ASSIGN expr
   42     | expr . ADD_ASSIGN expr
   43     | expr . SUB_ASSIGN expr
   44     | expr . MUL_ASSIGN expr
   45     | expr . DIV_ASSIGN expr
   46     | expr . ADD expr
   47     | expr . SUB expr
   48     | expr . MUL expr
   49     | expr . DIV expr
   50     | expr . MODE expr
   55     | expr . AND expr
   56     | expr . OR expr
   57     | NOT expr .
   58     | expr . EQ expr
   59     | expr . NEQ expr
   60     | expr . GQT expr
   61     | expr . LQT expr
   62     | expr . GT expr
   63     | expr . LT expr

    $default  reduce using rule 57 (expr)


State 44

   21 printf: PRINTF LP . expr RP
   22       | PRINTF LP . STRING COMMA io_list RP

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    INC         shift, and go to state 10
    DEC         shift, and go to state 11
    NOT         shift, and go to state 12
    QUOTE       shift, and go to state 15
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 81

    expr  go to state 82


State 45

   23 scanf: SCANF LP . expr RP
   24      | SCANF LP . STRING COMMA io_list RP

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    INC         shift, and go to state 10
    DEC         shift, and go to state 11
    NOT         shift, and go to state 12
    QUOTE       shift, and go to state 15
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 83

    expr  go to state 84


State 46

   33 expr: QUOTE IDENTIFIER .

    $default  reduce using rule 33 (expr)


State 47

   29 declaration: CONST T . IDENTIFIER ASSIGN expr

    IDENTIFIER  shift, and go to state 85


State 48

    3 statements: statements . statement
   13 statement: LC statements . RC

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    INC         shift, and go to state 10
    DEC         shift, and go to state 11
    NOT         shift, and go to state 12
    PRINTF      shift, and go to state 13
    SCANF       shift, and go to state 14
    QUOTE       shift, and go to state 15
    CONST       shift, and go to state 16
    SEMICOLON   shift, and go to state 17
    LC          shift, and go to state 18
    RC          shift, and go to state 86
    WHILE       shift, and go to state 19
    IF          shift, and go to state 20
    RETURN      shift, and go to state 21
    FOR         shift, and go to state 22
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26

    statement       go to state 56
    func_statement  go to state 30
    if_else         go to state 31
    while           go to state 32
    for             go to state 33
    printf          go to state 34
    scanf           go to state 35
    declaration     go to state 36
    expr            go to state 37
    T               go to state 38


State 49

   18 while: WHILE LP . expr RP statement

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    INC         shift, and go to state 10
    DEC         shift, and go to state 11
    NOT         shift, and go to state 12
    QUOTE       shift, and go to state 15
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26

    expr  go to state 87


State 50

   16 if_else: IF LP . expr RP statement
   17        | IF LP . expr RP statement ELSE statement

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    INC         shift, and go to state 10
    DEC         shift, and go to state 11
    NOT         shift, and go to state 12
    QUOTE       shift, and go to state 15
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26

    expr  go to state 88


State 51

    7 statement: RETURN expr . SEMICOLON
   41 expr: expr . ASSIGN expr
   42     | expr . ADD_ASSIGN expr
   43     | expr . SUB_ASSIGN expr
   44     | expr . MUL_ASSIGN expr
   45     | expr . DIV_ASSIGN expr
   46     | expr . ADD expr
   47     | expr . SUB expr
   48     | expr . MUL expr
   49     | expr . DIV expr
   50     | expr . MODE expr
   55     | expr . AND expr
   56     | expr . OR expr
   58     | expr . EQ expr
   59     | expr . NEQ expr
   60     | expr . GQT expr
   61     | expr . LQT expr
   62     | expr . GT expr
   63     | expr . LT expr

    ASSIGN      shift, and go to state 60
    ADD_ASSIGN  shift, and go to state 61
    SUB_ASSIGN  shift, and go to state 62
    MUL_ASSIGN  shift, and go to state 63
    DIV_ASSIGN  shift, and go to state 64
    EQ          shift, and go to state 65
    NEQ         shift, and go to state 66
    GQT         shift, and go to state 67
    LQT         shift, and go to state 68
    GT          shift, and go to state 69
    LT          shift, and go to state 70
    ADD         shift, and go to state 71
    SUB         shift, and go to state 72
    MUL         shift, and go to state 73
    DIV         shift, and go to state 74
    MODE        shift, and go to state 75
    AND         shift, and go to state 76
    OR          shift, and go to state 77
    SEMICOLON   shift, and go to state 89


State 52

   19 for: FOR LP . statement statement expr RP statement
   20    | FOR LP . statement statement RP statement

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    INC         shift, and go to state 10
    DEC         shift, and go to state 11
    NOT         shift, and go to state 12
    PRINTF      shift, and go to state 13
    SCANF       shift, and go to state 14
    QUOTE       shift, and go to state 15
    CONST       shift, and go to state 16
    SEMICOLON   shift, and go to state 17
    LC          shift, and go to state 18
    WHILE       shift, and go to state 19
    IF          shift, and go to state 20
    RETURN      shift, and go to state 21
    FOR         shift, and go to state 22
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26

    statement       go to state 90
    func_statement  go to state 30
    if_else         go to state 31
    while           go to state 32
    for             go to state 33
    printf          go to state 34
    scanf           go to state 35
    declaration     go to state 36
    expr            go to state 37
    T               go to state 38


State 53

   37 expr: IDENTIFIER INC .

    $default  reduce using rule 37 (expr)


State 54

   39 expr: IDENTIFIER DEC .

    $default  reduce using rule 39 (expr)


State 55

    0 $accept: program $end .

    $default  accept


State 56

    3 statements: statements statement .

    $default  reduce using rule 3 (statements)


State 57

   12 statement: printf SEMICOLON .

    $default  reduce using rule 12 (statement)


State 58

   11 statement: scanf SEMICOLON .

    $default  reduce using rule 11 (statement)


State 59

    5 statement: declaration SEMICOLON .

    $default  reduce using rule 5 (statement)


State 60

   41 expr: expr ASSIGN . expr

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    INC         shift, and go to state 10
    DEC         shift, and go to state 11
    NOT         shift, and go to state 12
    QUOTE       shift, and go to state 15
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26

    expr  go to state 91


State 61

   42 expr: expr ADD_ASSIGN . expr

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    INC         shift, and go to state 10
    DEC         shift, and go to state 11
    NOT         shift, and go to state 12
    QUOTE       shift, and go to state 15
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26

    expr  go to state 92


State 62

   43 expr: expr SUB_ASSIGN . expr

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    INC         shift, and go to state 10
    DEC         shift, and go to state 11
    NOT         shift, and go to state 12
    QUOTE       shift, and go to state 15
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26

    expr  go to state 93


State 63

   44 expr: expr MUL_ASSIGN . expr

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    INC         shift, and go to state 10
    DEC         shift, and go to state 11
    NOT         shift, and go to state 12
    QUOTE       shift, and go to state 15
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26

    expr  go to state 94


State 64

   45 expr: expr DIV_ASSIGN . expr

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    INC         shift, and go to state 10
    DEC         shift, and go to state 11
    NOT         shift, and go to state 12
    QUOTE       shift, and go to state 15
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26

    expr  go to state 95


State 65

   58 expr: expr EQ . expr

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    INC         shift, and go to state 10
    DEC         shift, and go to state 11
    NOT         shift, and go to state 12
    QUOTE       shift, and go to state 15
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26

    expr  go to state 96


State 66

   59 expr: expr NEQ . expr

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    INC         shift, and go to state 10
    DEC         shift, and go to state 11
    NOT         shift, and go to state 12
    QUOTE       shift, and go to state 15
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26

    expr  go to state 97


State 67

   60 expr: expr GQT . expr

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    INC         shift, and go to state 10
    DEC         shift, and go to state 11
    NOT         shift, and go to state 12
    QUOTE       shift, and go to state 15
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26

    expr  go to state 98


State 68

   61 expr: expr LQT . expr

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    INC         shift, and go to state 10
    DEC         shift, and go to state 11
    NOT         shift, and go to state 12
    QUOTE       shift, and go to state 15
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26

    expr  go to state 99


State 69

   62 expr: expr GT . expr

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    INC         shift, and go to state 10
    DEC         shift, and go to state 11
    NOT         shift, and go to state 12
    QUOTE       shift, and go to state 15
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26

    expr  go to state 100


State 70

   63 expr: expr LT . expr

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    INC         shift, and go to state 10
    DEC         shift, and go to state 11
    NOT         shift, and go to state 12
    QUOTE       shift, and go to state 15
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26

    expr  go to state 101


State 71

   46 expr: expr ADD . expr

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    INC         shift, and go to state 10
    DEC         shift, and go to state 11
    NOT         shift, and go to state 12
    QUOTE       shift, and go to state 15
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26

    expr  go to state 102


State 72

   47 expr: expr SUB . expr

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    INC         shift, and go to state 10
    DEC         shift, and go to state 11
    NOT         shift, and go to state 12
    QUOTE       shift, and go to state 15
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26

    expr  go to state 103


State 73

   48 expr: expr MUL . expr

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    INC         shift, and go to state 10
    DEC         shift, and go to state 11
    NOT         shift, and go to state 12
    QUOTE       shift, and go to state 15
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26

    expr  go to state 104


State 74

   49 expr: expr DIV . expr

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    INC         shift, and go to state 10
    DEC         shift, and go to state 11
    NOT         shift, and go to state 12
    QUOTE       shift, and go to state 15
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26

    expr  go to state 105


State 75

   50 expr: expr MODE . expr

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    INC         shift, and go to state 10
    DEC         shift, and go to state 11
    NOT         shift, and go to state 12
    QUOTE       shift, and go to state 15
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26

    expr  go to state 106


State 76

   55 expr: expr AND . expr

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    INC         shift, and go to state 10
    DEC         shift, and go to state 11
    NOT         shift, and go to state 12
    QUOTE       shift, and go to state 15
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26

    expr  go to state 107


State 77

   56 expr: expr OR . expr

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    INC         shift, and go to state 10
    DEC         shift, and go to state 11
    NOT         shift, and go to state 12
    QUOTE       shift, and go to state 15
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26

    expr  go to state 108


State 78

    6 statement: expr SEMICOLON .

    $default  reduce using rule 6 (statement)


State 79

   15 func_statement: T IDENTIFIER . LP RP statement
   27 declaration: T IDENTIFIER . ASSIGN expr
   30 id_list: IDENTIFIER .

    ASSIGN  shift, and go to state 109
    LP      shift, and go to state 110

    $default  reduce using rule 30 (id_list)


State 80

   28 declaration: T id_list .
   31 id_list: id_list . COMMA IDENTIFIER

    COMMA  shift, and go to state 111

    $default  reduce using rule 28 (declaration)


State 81

   22 printf: PRINTF LP STRING . COMMA io_list RP
   36 expr: STRING .

    COMMA  shift, and go to state 112

    $default  reduce using rule 36 (expr)


State 82

   21 printf: PRINTF LP expr . RP
   41 expr: expr . ASSIGN expr
   42     | expr . ADD_ASSIGN expr
   43     | expr . SUB_ASSIGN expr
   44     | expr . MUL_ASSIGN expr
   45     | expr . DIV_ASSIGN expr
   46     | expr . ADD expr
   47     | expr . SUB expr
   48     | expr . MUL expr
   49     | expr . DIV expr
   50     | expr . MODE expr
   55     | expr . AND expr
   56     | expr . OR expr
   58     | expr . EQ expr
   59     | expr . NEQ expr
   60     | expr . GQT expr
   61     | expr . LQT expr
   62     | expr . GT expr
   63     | expr . LT expr

    ASSIGN      shift, and go to state 60
    ADD_ASSIGN  shift, and go to state 61
    SUB_ASSIGN  shift, and go to state 62
    MUL_ASSIGN  shift, and go to state 63
    DIV_ASSIGN  shift, and go to state 64
    EQ          shift, and go to state 65
    NEQ         shift, and go to state 66
    GQT         shift, and go to state 67
    LQT         shift, and go to state 68
    GT          shift, and go to state 69
    LT          shift, and go to state 70
    ADD         shift, and go to state 71
    SUB         shift, and go to state 72
    MUL         shift, and go to state 73
    DIV         shift, and go to state 74
    MODE        shift, and go to state 75
    AND         shift, and go to state 76
    OR          shift, and go to state 77
    RP          shift, and go to state 113


State 83

   24 scanf: SCANF LP STRING . COMMA io_list RP
   36 expr: STRING .

    COMMA  shift, and go to state 114

    $default  reduce using rule 36 (expr)


State 84

   23 scanf: SCANF LP expr . RP
   41 expr: expr . ASSIGN expr
   42     | expr . ADD_ASSIGN expr
   43     | expr . SUB_ASSIGN expr
   44     | expr . MUL_ASSIGN expr
   45     | expr . DIV_ASSIGN expr
   46     | expr . ADD expr
   47     | expr . SUB expr
   48     | expr . MUL expr
   49     | expr . DIV expr
   50     | expr . MODE expr
   55     | expr . AND expr
   56     | expr . OR expr
   58     | expr . EQ expr
   59     | expr . NEQ expr
   60     | expr . GQT expr
   61     | expr . LQT expr
   62     | expr . GT expr
   63     | expr . LT expr

    ASSIGN      shift, and go to state 60
    ADD_ASSIGN  shift, and go to state 61
    SUB_ASSIGN  shift, and go to state 62
    MUL_ASSIGN  shift, and go to state 63
    DIV_ASSIGN  shift, and go to state 64
    EQ          shift, and go to state 65
    NEQ         shift, and go to state 66
    GQT         shift, and go to state 67
    LQT         shift, and go to state 68
    GT          shift, and go to state 69
    LT          shift, and go to state 70
    ADD         shift, and go to state 71
    SUB         shift, and go to state 72
    MUL         shift, and go to state 73
    DIV         shift, and go to state 74
    MODE        shift, and go to state 75
    AND         shift, and go to state 76
    OR          shift, and go to state 77
    RP          shift, and go to state 115


State 85

   29 declaration: CONST T IDENTIFIER . ASSIGN expr

    ASSIGN  shift, and go to state 116


State 86

   13 statement: LC statements RC .

    $default  reduce using rule 13 (statement)


State 87

   18 while: WHILE LP expr . RP statement
   41 expr: expr . ASSIGN expr
   42     | expr . ADD_ASSIGN expr
   43     | expr . SUB_ASSIGN expr
   44     | expr . MUL_ASSIGN expr
   45     | expr . DIV_ASSIGN expr
   46     | expr . ADD expr
   47     | expr . SUB expr
   48     | expr . MUL expr
   49     | expr . DIV expr
   50     | expr . MODE expr
   55     | expr . AND expr
   56     | expr . OR expr
   58     | expr . EQ expr
   59     | expr . NEQ expr
   60     | expr . GQT expr
   61     | expr . LQT expr
   62     | expr . GT expr
   63     | expr . LT expr

    ASSIGN      shift, and go to state 60
    ADD_ASSIGN  shift, and go to state 61
    SUB_ASSIGN  shift, and go to state 62
    MUL_ASSIGN  shift, and go to state 63
    DIV_ASSIGN  shift, and go to state 64
    EQ          shift, and go to state 65
    NEQ         shift, and go to state 66
    GQT         shift, and go to state 67
    LQT         shift, and go to state 68
    GT          shift, and go to state 69
    LT          shift, and go to state 70
    ADD         shift, and go to state 71
    SUB         shift, and go to state 72
    MUL         shift, and go to state 73
    DIV         shift, and go to state 74
    MODE        shift, and go to state 75
    AND         shift, and go to state 76
    OR          shift, and go to state 77
    RP          shift, and go to state 117


State 88

   16 if_else: IF LP expr . RP statement
   17        | IF LP expr . RP statement ELSE statement
   41 expr: expr . ASSIGN expr
   42     | expr . ADD_ASSIGN expr
   43     | expr . SUB_ASSIGN expr
   44     | expr . MUL_ASSIGN expr
   45     | expr . DIV_ASSIGN expr
   46     | expr . ADD expr
   47     | expr . SUB expr
   48     | expr . MUL expr
   49     | expr . DIV expr
   50     | expr . MODE expr
   55     | expr . AND expr
   56     | expr . OR expr
   58     | expr . EQ expr
   59     | expr . NEQ expr
   60     | expr . GQT expr
   61     | expr . LQT expr
   62     | expr . GT expr
   63     | expr . LT expr

    ASSIGN      shift, and go to state 60
    ADD_ASSIGN  shift, and go to state 61
    SUB_ASSIGN  shift, and go to state 62
    MUL_ASSIGN  shift, and go to state 63
    DIV_ASSIGN  shift, and go to state 64
    EQ          shift, and go to state 65
    NEQ         shift, and go to state 66
    GQT         shift, and go to state 67
    LQT         shift, and go to state 68
    GT          shift, and go to state 69
    LT          shift, and go to state 70
    ADD         shift, and go to state 71
    SUB         shift, and go to state 72
    MUL         shift, and go to state 73
    DIV         shift, and go to state 74
    MODE        shift, and go to state 75
    AND         shift, and go to state 76
    OR          shift, and go to state 77
    RP          shift, and go to state 118


State 89

    7 statement: RETURN expr SEMICOLON .

    $default  reduce using rule 7 (statement)


State 90

   19 for: FOR LP statement . statement expr RP statement
   20    | FOR LP statement . statement RP statement

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    INC         shift, and go to state 10
    DEC         shift, and go to state 11
    NOT         shift, and go to state 12
    PRINTF      shift, and go to state 13
    SCANF       shift, and go to state 14
    QUOTE       shift, and go to state 15
    CONST       shift, and go to state 16
    SEMICOLON   shift, and go to state 17
    LC          shift, and go to state 18
    WHILE       shift, and go to state 19
    IF          shift, and go to state 20
    RETURN      shift, and go to state 21
    FOR         shift, and go to state 22
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26

    statement       go to state 119
    func_statement  go to state 30
    if_else         go to state 31
    while           go to state 32
    for             go to state 33
    printf          go to state 34
    scanf           go to state 35
    declaration     go to state 36
    expr            go to state 37
    T               go to state 38


State 91

   41 expr: expr . ASSIGN expr
   41     | expr ASSIGN expr .
   42     | expr . ADD_ASSIGN expr
   43     | expr . SUB_ASSIGN expr
   44     | expr . MUL_ASSIGN expr
   45     | expr . DIV_ASSIGN expr
   46     | expr . ADD expr
   47     | expr . SUB expr
   48     | expr . MUL expr
   49     | expr . DIV expr
   50     | expr . MODE expr
   55     | expr . AND expr
   56     | expr . OR expr
   58     | expr . EQ expr
   59     | expr . NEQ expr
   60     | expr . GQT expr
   61     | expr . LQT expr
   62     | expr . GT expr
   63     | expr . LT expr

    ASSIGN      shift, and go to state 60
    ADD_ASSIGN  shift, and go to state 61
    SUB_ASSIGN  shift, and go to state 62
    MUL_ASSIGN  shift, and go to state 63
    DIV_ASSIGN  shift, and go to state 64
    EQ          shift, and go to state 65
    NEQ         shift, and go to state 66
    GQT         shift, and go to state 67
    LQT         shift, and go to state 68
    GT          shift, and go to state 69
    LT          shift, and go to state 70
    ADD         shift, and go to state 71
    SUB         shift, and go to state 72
    MUL         shift, and go to state 73
    DIV         shift, and go to state 74
    MODE        shift, and go to state 75
    AND         shift, and go to state 76
    OR          shift, and go to state 77

    $default  reduce using rule 41 (expr)


State 92

   41 expr: expr . ASSIGN expr
   42     | expr . ADD_ASSIGN expr
   42     | expr ADD_ASSIGN expr .
   43     | expr . SUB_ASSIGN expr
   44     | expr . MUL_ASSIGN expr
   45     | expr . DIV_ASSIGN expr
   46     | expr . ADD expr
   47     | expr . SUB expr
   48     | expr . MUL expr
   49     | expr . DIV expr
   50     | expr . MODE expr
   55     | expr . AND expr
   56     | expr . OR expr
   58     | expr . EQ expr
   59     | expr . NEQ expr
   60     | expr . GQT expr
   61     | expr . LQT expr
   62     | expr . GT expr
   63     | expr . LT expr

    ASSIGN      shift, and go to state 60
    ADD_ASSIGN  shift, and go to state 61
    SUB_ASSIGN  shift, and go to state 62
    MUL_ASSIGN  shift, and go to state 63
    DIV_ASSIGN  shift, and go to state 64
    EQ          shift, and go to state 65
    NEQ         shift, and go to state 66
    GQT         shift, and go to state 67
    LQT         shift, and go to state 68
    GT          shift, and go to state 69
    LT          shift, and go to state 70
    ADD         shift, and go to state 71
    SUB         shift, and go to state 72
    MUL         shift, and go to state 73
    DIV         shift, and go to state 74
    MODE        shift, and go to state 75
    AND         shift, and go to state 76
    OR          shift, and go to state 77

    $default  reduce using rule 42 (expr)


State 93

   41 expr: expr . ASSIGN expr
   42     | expr . ADD_ASSIGN expr
   43     | expr . SUB_ASSIGN expr
   43     | expr SUB_ASSIGN expr .
   44     | expr . MUL_ASSIGN expr
   45     | expr . DIV_ASSIGN expr
   46     | expr . ADD expr
   47     | expr . SUB expr
   48     | expr . MUL expr
   49     | expr . DIV expr
   50     | expr . MODE expr
   55     | expr . AND expr
   56     | expr . OR expr
   58     | expr . EQ expr
   59     | expr . NEQ expr
   60     | expr . GQT expr
   61     | expr . LQT expr
   62     | expr . GT expr
   63     | expr . LT expr

    ASSIGN      shift, and go to state 60
    ADD_ASSIGN  shift, and go to state 61
    SUB_ASSIGN  shift, and go to state 62
    MUL_ASSIGN  shift, and go to state 63
    DIV_ASSIGN  shift, and go to state 64
    EQ          shift, and go to state 65
    NEQ         shift, and go to state 66
    GQT         shift, and go to state 67
    LQT         shift, and go to state 68
    GT          shift, and go to state 69
    LT          shift, and go to state 70
    ADD         shift, and go to state 71
    SUB         shift, and go to state 72
    MUL         shift, and go to state 73
    DIV         shift, and go to state 74
    MODE        shift, and go to state 75
    AND         shift, and go to state 76
    OR          shift, and go to state 77

    $default  reduce using rule 43 (expr)


State 94

   41 expr: expr . ASSIGN expr
   42     | expr . ADD_ASSIGN expr
   43     | expr . SUB_ASSIGN expr
   44     | expr . MUL_ASSIGN expr
   44     | expr MUL_ASSIGN expr .
   45     | expr . DIV_ASSIGN expr
   46     | expr . ADD expr
   47     | expr . SUB expr
   48     | expr . MUL expr
   49     | expr . DIV expr
   50     | expr . MODE expr
   55     | expr . AND expr
   56     | expr . OR expr
   58     | expr . EQ expr
   59     | expr . NEQ expr
   60     | expr . GQT expr
   61     | expr . LQT expr
   62     | expr . GT expr
   63     | expr . LT expr

    ASSIGN      shift, and go to state 60
    ADD_ASSIGN  shift, and go to state 61
    SUB_ASSIGN  shift, and go to state 62
    MUL_ASSIGN  shift, and go to state 63
    DIV_ASSIGN  shift, and go to state 64
    EQ          shift, and go to state 65
    NEQ         shift, and go to state 66
    GQT         shift, and go to state 67
    LQT         shift, and go to state 68
    GT          shift, and go to state 69
    LT          shift, and go to state 70
    ADD         shift, and go to state 71
    SUB         shift, and go to state 72
    MUL         shift, and go to state 73
    DIV         shift, and go to state 74
    MODE        shift, and go to state 75
    AND         shift, and go to state 76
    OR          shift, and go to state 77

    $default  reduce using rule 44 (expr)


State 95

   41 expr: expr . ASSIGN expr
   42     | expr . ADD_ASSIGN expr
   43     | expr . SUB_ASSIGN expr
   44     | expr . MUL_ASSIGN expr
   45     | expr . DIV_ASSIGN expr
   45     | expr DIV_ASSIGN expr .
   46     | expr . ADD expr
   47     | expr . SUB expr
   48     | expr . MUL expr
   49     | expr . DIV expr
   50     | expr . MODE expr
   55     | expr . AND expr
   56     | expr . OR expr
   58     | expr . EQ expr
   59     | expr . NEQ expr
   60     | expr . GQT expr
   61     | expr . LQT expr
   62     | expr . GT expr
   63     | expr . LT expr

    ASSIGN      shift, and go to state 60
    ADD_ASSIGN  shift, and go to state 61
    SUB_ASSIGN  shift, and go to state 62
    MUL_ASSIGN  shift, and go to state 63
    DIV_ASSIGN  shift, and go to state 64
    EQ          shift, and go to state 65
    NEQ         shift, and go to state 66
    GQT         shift, and go to state 67
    LQT         shift, and go to state 68
    GT          shift, and go to state 69
    LT          shift, and go to state 70
    ADD         shift, and go to state 71
    SUB         shift, and go to state 72
    MUL         shift, and go to state 73
    DIV         shift, and go to state 74
    MODE        shift, and go to state 75
    AND         shift, and go to state 76
    OR          shift, and go to state 77

    $default  reduce using rule 45 (expr)


State 96

   41 expr: expr . ASSIGN expr
   42     | expr . ADD_ASSIGN expr
   43     | expr . SUB_ASSIGN expr
   44     | expr . MUL_ASSIGN expr
   45     | expr . DIV_ASSIGN expr
   46     | expr . ADD expr
   47     | expr . SUB expr
   48     | expr . MUL expr
   49     | expr . DIV expr
   50     | expr . MODE expr
   55     | expr . AND expr
   56     | expr . OR expr
   58     | expr . EQ expr
   58     | expr EQ expr .
   59     | expr . NEQ expr
   60     | expr . GQT expr
   61     | expr . LQT expr
   62     | expr . GT expr
   63     | expr . LT expr

    GQT   shift, and go to state 67
    LQT   shift, and go to state 68
    GT    shift, and go to state 69
    LT    shift, and go to state 70
    ADD   shift, and go to state 71
    SUB   shift, and go to state 72
    MUL   shift, and go to state 73
    DIV   shift, and go to state 74
    MODE  shift, and go to state 75

    $default  reduce using rule 58 (expr)


State 97

   41 expr: expr . ASSIGN expr
   42     | expr . ADD_ASSIGN expr
   43     | expr . SUB_ASSIGN expr
   44     | expr . MUL_ASSIGN expr
   45     | expr . DIV_ASSIGN expr
   46     | expr . ADD expr
   47     | expr . SUB expr
   48     | expr . MUL expr
   49     | expr . DIV expr
   50     | expr . MODE expr
   55     | expr . AND expr
   56     | expr . OR expr
   58     | expr . EQ expr
   59     | expr . NEQ expr
   59     | expr NEQ expr .
   60     | expr . GQT expr
   61     | expr . LQT expr
   62     | expr . GT expr
   63     | expr . LT expr

    GQT   shift, and go to state 67
    LQT   shift, and go to state 68
    GT    shift, and go to state 69
    LT    shift, and go to state 70
    ADD   shift, and go to state 71
    SUB   shift, and go to state 72
    MUL   shift, and go to state 73
    DIV   shift, and go to state 74
    MODE  shift, and go to state 75

    $default  reduce using rule 59 (expr)


State 98

   41 expr: expr . ASSIGN expr
   42     | expr . ADD_ASSIGN expr
   43     | expr . SUB_ASSIGN expr
   44     | expr . MUL_ASSIGN expr
   45     | expr . DIV_ASSIGN expr
   46     | expr . ADD expr
   47     | expr . SUB expr
   48     | expr . MUL expr
   49     | expr . DIV expr
   50     | expr . MODE expr
   55     | expr . AND expr
   56     | expr . OR expr
   58     | expr . EQ expr
   59     | expr . NEQ expr
   60     | expr . GQT expr
   60     | expr GQT expr .
   61     | expr . LQT expr
   62     | expr . GT expr
   63     | expr . LT expr

    ADD   shift, and go to state 71
    SUB   shift, and go to state 72
    MUL   shift, and go to state 73
    DIV   shift, and go to state 74
    MODE  shift, and go to state 75

    $default  reduce using rule 60 (expr)


State 99

   41 expr: expr . ASSIGN expr
   42     | expr . ADD_ASSIGN expr
   43     | expr . SUB_ASSIGN expr
   44     | expr . MUL_ASSIGN expr
   45     | expr . DIV_ASSIGN expr
   46     | expr . ADD expr
   47     | expr . SUB expr
   48     | expr . MUL expr
   49     | expr . DIV expr
   50     | expr . MODE expr
   55     | expr . AND expr
   56     | expr . OR expr
   58     | expr . EQ expr
   59     | expr . NEQ expr
   60     | expr . GQT expr
   61     | expr . LQT expr
   61     | expr LQT expr .
   62     | expr . GT expr
   63     | expr . LT expr

    ADD   shift, and go to state 71
    SUB   shift, and go to state 72
    MUL   shift, and go to state 73
    DIV   shift, and go to state 74
    MODE  shift, and go to state 75

    $default  reduce using rule 61 (expr)


State 100

   41 expr: expr . ASSIGN expr
   42     | expr . ADD_ASSIGN expr
   43     | expr . SUB_ASSIGN expr
   44     | expr . MUL_ASSIGN expr
   45     | expr . DIV_ASSIGN expr
   46     | expr . ADD expr
   47     | expr . SUB expr
   48     | expr . MUL expr
   49     | expr . DIV expr
   50     | expr . MODE expr
   55     | expr . AND expr
   56     | expr . OR expr
   58     | expr . EQ expr
   59     | expr . NEQ expr
   60     | expr . GQT expr
   61     | expr . LQT expr
   62     | expr . GT expr
   62     | expr GT expr .
   63     | expr . LT expr

    ADD   shift, and go to state 71
    SUB   shift, and go to state 72
    MUL   shift, and go to state 73
    DIV   shift, and go to state 74
    MODE  shift, and go to state 75

    $default  reduce using rule 62 (expr)


State 101

   41 expr: expr . ASSIGN expr
   42     | expr . ADD_ASSIGN expr
   43     | expr . SUB_ASSIGN expr
   44     | expr . MUL_ASSIGN expr
   45     | expr . DIV_ASSIGN expr
   46     | expr . ADD expr
   47     | expr . SUB expr
   48     | expr . MUL expr
   49     | expr . DIV expr
   50     | expr . MODE expr
   55     | expr . AND expr
   56     | expr . OR expr
   58     | expr . EQ expr
   59     | expr . NEQ expr
   60     | expr . GQT expr
   61     | expr . LQT expr
   62     | expr . GT expr
   63     | expr . LT expr
   63     | expr LT expr .

    ADD   shift, and go to state 71
    SUB   shift, and go to state 72
    MUL   shift, and go to state 73
    DIV   shift, and go to state 74
    MODE  shift, and go to state 75

    $default  reduce using rule 63 (expr)


State 102

   41 expr: expr . ASSIGN expr
   42     | expr . ADD_ASSIGN expr
   43     | expr . SUB_ASSIGN expr
   44     | expr . MUL_ASSIGN expr
   45     | expr . DIV_ASSIGN expr
   46     | expr . ADD expr
   46     | expr ADD expr .
   47     | expr . SUB expr
   48     | expr . MUL expr
   49     | expr . DIV expr
   50     | expr . MODE expr
   55     | expr . AND expr
   56     | expr . OR expr
   58     | expr . EQ expr
   59     | expr . NEQ expr
   60     | expr . GQT expr
   61     | expr . LQT expr
   62     | expr . GT expr
   63     | expr . LT expr

    MUL   shift, and go to state 73
    DIV   shift, and go to state 74
    MODE  shift, and go to state 75

    $default  reduce using rule 46 (expr)


State 103

   41 expr: expr . ASSIGN expr
   42     | expr . ADD_ASSIGN expr
   43     | expr . SUB_ASSIGN expr
   44     | expr . MUL_ASSIGN expr
   45     | expr . DIV_ASSIGN expr
   46     | expr . ADD expr
   47     | expr . SUB expr
   47     | expr SUB expr .
   48     | expr . MUL expr
   49     | expr . DIV expr
   50     | expr . MODE expr
   55     | expr . AND expr
   56     | expr . OR expr
   58     | expr . EQ expr
   59     | expr . NEQ expr
   60     | expr . GQT expr
   61     | expr . LQT expr
   62     | expr . GT expr
   63     | expr . LT expr

    MUL   shift, and go to state 73
    DIV   shift, and go to state 74
    MODE  shift, and go to state 75

    $default  reduce using rule 47 (expr)


State 104

   41 expr: expr . ASSIGN expr
   42     | expr . ADD_ASSIGN expr
   43     | expr . SUB_ASSIGN expr
   44     | expr . MUL_ASSIGN expr
   45     | expr . DIV_ASSIGN expr
   46     | expr . ADD expr
   47     | expr . SUB expr
   48     | expr . MUL expr
   48     | expr MUL expr .
   49     | expr . DIV expr
   50     | expr . MODE expr
   55     | expr . AND expr
   56     | expr . OR expr
   58     | expr . EQ expr
   59     | expr . NEQ expr
   60     | expr . GQT expr
   61     | expr . LQT expr
   62     | expr . GT expr
   63     | expr . LT expr

    $default  reduce using rule 48 (expr)


State 105

   41 expr: expr . ASSIGN expr
   42     | expr . ADD_ASSIGN expr
   43     | expr . SUB_ASSIGN expr
   44     | expr . MUL_ASSIGN expr
   45     | expr . DIV_ASSIGN expr
   46     | expr . ADD expr
   47     | expr . SUB expr
   48     | expr . MUL expr
   49     | expr . DIV expr
   49     | expr DIV expr .
   50     | expr . MODE expr
   55     | expr . AND expr
   56     | expr . OR expr
   58     | expr . EQ expr
   59     | expr . NEQ expr
   60     | expr . GQT expr
   61     | expr . LQT expr
   62     | expr . GT expr
   63     | expr . LT expr

    $default  reduce using rule 49 (expr)


State 106

   41 expr: expr . ASSIGN expr
   42     | expr . ADD_ASSIGN expr
   43     | expr . SUB_ASSIGN expr
   44     | expr . MUL_ASSIGN expr
   45     | expr . DIV_ASSIGN expr
   46     | expr . ADD expr
   47     | expr . SUB expr
   48     | expr . MUL expr
   49     | expr . DIV expr
   50     | expr . MODE expr
   50     | expr MODE expr .
   55     | expr . AND expr
   56     | expr . OR expr
   58     | expr . EQ expr
   59     | expr . NEQ expr
   60     | expr . GQT expr
   61     | expr . LQT expr
   62     | expr . GT expr
   63     | expr . LT expr

    $default  reduce using rule 50 (expr)


State 107

   41 expr: expr . ASSIGN expr
   42     | expr . ADD_ASSIGN expr
   43     | expr . SUB_ASSIGN expr
   44     | expr . MUL_ASSIGN expr
   45     | expr . DIV_ASSIGN expr
   46     | expr . ADD expr
   47     | expr . SUB expr
   48     | expr . MUL expr
   49     | expr . DIV expr
   50     | expr . MODE expr
   55     | expr . AND expr
   55     | expr AND expr .
   56     | expr . OR expr
   58     | expr . EQ expr
   59     | expr . NEQ expr
   60     | expr . GQT expr
   61     | expr . LQT expr
   62     | expr . GT expr
   63     | expr . LT expr

    EQ    shift, and go to state 65
    NEQ   shift, and go to state 66
    GQT   shift, and go to state 67
    LQT   shift, and go to state 68
    GT    shift, and go to state 69
    LT    shift, and go to state 70
    ADD   shift, and go to state 71
    SUB   shift, and go to state 72
    MUL   shift, and go to state 73
    DIV   shift, and go to state 74
    MODE  shift, and go to state 75

    $default  reduce using rule 55 (expr)


State 108

   41 expr: expr . ASSIGN expr
   42     | expr . ADD_ASSIGN expr
   43     | expr . SUB_ASSIGN expr
   44     | expr . MUL_ASSIGN expr
   45     | expr . DIV_ASSIGN expr
   46     | expr . ADD expr
   47     | expr . SUB expr
   48     | expr . MUL expr
   49     | expr . DIV expr
   50     | expr . MODE expr
   55     | expr . AND expr
   56     | expr . OR expr
   56     | expr OR expr .
   58     | expr . EQ expr
   59     | expr . NEQ expr
   60     | expr . GQT expr
   61     | expr . LQT expr
   62     | expr . GT expr
   63     | expr . LT expr

    EQ    shift, and go to state 65
    NEQ   shift, and go to state 66
    GQT   shift, and go to state 67
    LQT   shift, and go to state 68
    GT    shift, and go to state 69
    LT    shift, and go to state 70
    ADD   shift, and go to state 71
    SUB   shift, and go to state 72
    MUL   shift, and go to state 73
    DIV   shift, and go to state 74
    MODE  shift, and go to state 75
    AND   shift, and go to state 76

    $default  reduce using rule 56 (expr)


State 109

   27 declaration: T IDENTIFIER ASSIGN . expr

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    INC         shift, and go to state 10
    DEC         shift, and go to state 11
    NOT         shift, and go to state 12
    QUOTE       shift, and go to state 15
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26

    expr  go to state 120


State 110

   15 func_statement: T IDENTIFIER LP . RP statement

    RP  shift, and go to state 121


State 111

   31 id_list: id_list COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 122


State 112

   22 printf: PRINTF LP STRING COMMA . io_list RP

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    INC         shift, and go to state 10
    DEC         shift, and go to state 11
    NOT         shift, and go to state 12
    QUOTE       shift, and go to state 15
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26

    io_list  go to state 123
    expr     go to state 124


State 113

   21 printf: PRINTF LP expr RP .

    $default  reduce using rule 21 (printf)


State 114

   24 scanf: SCANF LP STRING COMMA . io_list RP

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    INC         shift, and go to state 10
    DEC         shift, and go to state 11
    NOT         shift, and go to state 12
    QUOTE       shift, and go to state 15
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26

    io_list  go to state 125
    expr     go to state 124


State 115

   23 scanf: SCANF LP expr RP .

    $default  reduce using rule 23 (scanf)


State 116

   29 declaration: CONST T IDENTIFIER ASSIGN . expr

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    INC         shift, and go to state 10
    DEC         shift, and go to state 11
    NOT         shift, and go to state 12
    QUOTE       shift, and go to state 15
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26

    expr  go to state 126


State 117

   18 while: WHILE LP expr RP . statement

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    INC         shift, and go to state 10
    DEC         shift, and go to state 11
    NOT         shift, and go to state 12
    PRINTF      shift, and go to state 13
    SCANF       shift, and go to state 14
    QUOTE       shift, and go to state 15
    CONST       shift, and go to state 16
    SEMICOLON   shift, and go to state 17
    LC          shift, and go to state 18
    WHILE       shift, and go to state 19
    IF          shift, and go to state 20
    RETURN      shift, and go to state 21
    FOR         shift, and go to state 22
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26

    statement       go to state 127
    func_statement  go to state 30
    if_else         go to state 31
    while           go to state 32
    for             go to state 33
    printf          go to state 34
    scanf           go to state 35
    declaration     go to state 36
    expr            go to state 37
    T               go to state 38


State 118

   16 if_else: IF LP expr RP . statement
   17        | IF LP expr RP . statement ELSE statement

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    INC         shift, and go to state 10
    DEC         shift, and go to state 11
    NOT         shift, and go to state 12
    PRINTF      shift, and go to state 13
    SCANF       shift, and go to state 14
    QUOTE       shift, and go to state 15
    CONST       shift, and go to state 16
    SEMICOLON   shift, and go to state 17
    LC          shift, and go to state 18
    WHILE       shift, and go to state 19
    IF          shift, and go to state 20
    RETURN      shift, and go to state 21
    FOR         shift, and go to state 22
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26

    statement       go to state 128
    func_statement  go to state 30
    if_else         go to state 31
    while           go to state 32
    for             go to state 33
    printf          go to state 34
    scanf           go to state 35
    declaration     go to state 36
    expr            go to state 37
    T               go to state 38


State 119

   19 for: FOR LP statement statement . expr RP statement
   20    | FOR LP statement statement . RP statement

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    INC         shift, and go to state 10
    DEC         shift, and go to state 11
    NOT         shift, and go to state 12
    QUOTE       shift, and go to state 15
    RP          shift, and go to state 129
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26

    expr  go to state 130


State 120

   27 declaration: T IDENTIFIER ASSIGN expr .
   41 expr: expr . ASSIGN expr
   42     | expr . ADD_ASSIGN expr
   43     | expr . SUB_ASSIGN expr
   44     | expr . MUL_ASSIGN expr
   45     | expr . DIV_ASSIGN expr
   46     | expr . ADD expr
   47     | expr . SUB expr
   48     | expr . MUL expr
   49     | expr . DIV expr
   50     | expr . MODE expr
   55     | expr . AND expr
   56     | expr . OR expr
   58     | expr . EQ expr
   59     | expr . NEQ expr
   60     | expr . GQT expr
   61     | expr . LQT expr
   62     | expr . GT expr
   63     | expr . LT expr

    ASSIGN      shift, and go to state 60
    ADD_ASSIGN  shift, and go to state 61
    SUB_ASSIGN  shift, and go to state 62
    MUL_ASSIGN  shift, and go to state 63
    DIV_ASSIGN  shift, and go to state 64
    EQ          shift, and go to state 65
    NEQ         shift, and go to state 66
    GQT         shift, and go to state 67
    LQT         shift, and go to state 68
    GT          shift, and go to state 69
    LT          shift, and go to state 70
    ADD         shift, and go to state 71
    SUB         shift, and go to state 72
    MUL         shift, and go to state 73
    DIV         shift, and go to state 74
    MODE        shift, and go to state 75
    AND         shift, and go to state 76
    OR          shift, and go to state 77

    $default  reduce using rule 27 (declaration)


State 121

   15 func_statement: T IDENTIFIER LP RP . statement

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    INC         shift, and go to state 10
    DEC         shift, and go to state 11
    NOT         shift, and go to state 12
    PRINTF      shift, and go to state 13
    SCANF       shift, and go to state 14
    QUOTE       shift, and go to state 15
    CONST       shift, and go to state 16
    SEMICOLON   shift, and go to state 17
    LC          shift, and go to state 18
    WHILE       shift, and go to state 19
    IF          shift, and go to state 20
    RETURN      shift, and go to state 21
    FOR         shift, and go to state 22
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26

    statement       go to state 131
    func_statement  go to state 30
    if_else         go to state 31
    while           go to state 32
    for             go to state 33
    printf          go to state 34
    scanf           go to state 35
    declaration     go to state 36
    expr            go to state 37
    T               go to state 38


State 122

   31 id_list: id_list COMMA IDENTIFIER .

    $default  reduce using rule 31 (id_list)


State 123

   22 printf: PRINTF LP STRING COMMA io_list . RP
   26 io_list: io_list . COMMA expr

    COMMA  shift, and go to state 132
    RP     shift, and go to state 133


State 124

   25 io_list: expr .
   41 expr: expr . ASSIGN expr
   42     | expr . ADD_ASSIGN expr
   43     | expr . SUB_ASSIGN expr
   44     | expr . MUL_ASSIGN expr
   45     | expr . DIV_ASSIGN expr
   46     | expr . ADD expr
   47     | expr . SUB expr
   48     | expr . MUL expr
   49     | expr . DIV expr
   50     | expr . MODE expr
   55     | expr . AND expr
   56     | expr . OR expr
   58     | expr . EQ expr
   59     | expr . NEQ expr
   60     | expr . GQT expr
   61     | expr . LQT expr
   62     | expr . GT expr
   63     | expr . LT expr

    ASSIGN      shift, and go to state 60
    ADD_ASSIGN  shift, and go to state 61
    SUB_ASSIGN  shift, and go to state 62
    MUL_ASSIGN  shift, and go to state 63
    DIV_ASSIGN  shift, and go to state 64
    EQ          shift, and go to state 65
    NEQ         shift, and go to state 66
    GQT         shift, and go to state 67
    LQT         shift, and go to state 68
    GT          shift, and go to state 69
    LT          shift, and go to state 70
    ADD         shift, and go to state 71
    SUB         shift, and go to state 72
    MUL         shift, and go to state 73
    DIV         shift, and go to state 74
    MODE        shift, and go to state 75
    AND         shift, and go to state 76
    OR          shift, and go to state 77

    $default  reduce using rule 25 (io_list)


State 125

   24 scanf: SCANF LP STRING COMMA io_list . RP
   26 io_list: io_list . COMMA expr

    COMMA  shift, and go to state 132
    RP     shift, and go to state 134


State 126

   29 declaration: CONST T IDENTIFIER ASSIGN expr .
   41 expr: expr . ASSIGN expr
   42     | expr . ADD_ASSIGN expr
   43     | expr . SUB_ASSIGN expr
   44     | expr . MUL_ASSIGN expr
   45     | expr . DIV_ASSIGN expr
   46     | expr . ADD expr
   47     | expr . SUB expr
   48     | expr . MUL expr
   49     | expr . DIV expr
   50     | expr . MODE expr
   55     | expr . AND expr
   56     | expr . OR expr
   58     | expr . EQ expr
   59     | expr . NEQ expr
   60     | expr . GQT expr
   61     | expr . LQT expr
   62     | expr . GT expr
   63     | expr . LT expr

    ASSIGN      shift, and go to state 60
    ADD_ASSIGN  shift, and go to state 61
    SUB_ASSIGN  shift, and go to state 62
    MUL_ASSIGN  shift, and go to state 63
    DIV_ASSIGN  shift, and go to state 64
    EQ          shift, and go to state 65
    NEQ         shift, and go to state 66
    GQT         shift, and go to state 67
    LQT         shift, and go to state 68
    GT          shift, and go to state 69
    LT          shift, and go to state 70
    ADD         shift, and go to state 71
    SUB         shift, and go to state 72
    MUL         shift, and go to state 73
    DIV         shift, and go to state 74
    MODE        shift, and go to state 75
    AND         shift, and go to state 76
    OR          shift, and go to state 77

    $default  reduce using rule 29 (declaration)


State 127

   18 while: WHILE LP expr RP statement .

    $default  reduce using rule 18 (while)


State 128

   16 if_else: IF LP expr RP statement .
   17        | IF LP expr RP statement . ELSE statement

    ELSE  shift, and go to state 135

    $default  reduce using rule 16 (if_else)


State 129

   20 for: FOR LP statement statement RP . statement

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    INC         shift, and go to state 10
    DEC         shift, and go to state 11
    NOT         shift, and go to state 12
    PRINTF      shift, and go to state 13
    SCANF       shift, and go to state 14
    QUOTE       shift, and go to state 15
    CONST       shift, and go to state 16
    SEMICOLON   shift, and go to state 17
    LC          shift, and go to state 18
    WHILE       shift, and go to state 19
    IF          shift, and go to state 20
    RETURN      shift, and go to state 21
    FOR         shift, and go to state 22
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26

    statement       go to state 136
    func_statement  go to state 30
    if_else         go to state 31
    while           go to state 32
    for             go to state 33
    printf          go to state 34
    scanf           go to state 35
    declaration     go to state 36
    expr            go to state 37
    T               go to state 38


State 130

   19 for: FOR LP statement statement expr . RP statement
   41 expr: expr . ASSIGN expr
   42     | expr . ADD_ASSIGN expr
   43     | expr . SUB_ASSIGN expr
   44     | expr . MUL_ASSIGN expr
   45     | expr . DIV_ASSIGN expr
   46     | expr . ADD expr
   47     | expr . SUB expr
   48     | expr . MUL expr
   49     | expr . DIV expr
   50     | expr . MODE expr
   55     | expr . AND expr
   56     | expr . OR expr
   58     | expr . EQ expr
   59     | expr . NEQ expr
   60     | expr . GQT expr
   61     | expr . LQT expr
   62     | expr . GT expr
   63     | expr . LT expr

    ASSIGN      shift, and go to state 60
    ADD_ASSIGN  shift, and go to state 61
    SUB_ASSIGN  shift, and go to state 62
    MUL_ASSIGN  shift, and go to state 63
    DIV_ASSIGN  shift, and go to state 64
    EQ          shift, and go to state 65
    NEQ         shift, and go to state 66
    GQT         shift, and go to state 67
    LQT         shift, and go to state 68
    GT          shift, and go to state 69
    LT          shift, and go to state 70
    ADD         shift, and go to state 71
    SUB         shift, and go to state 72
    MUL         shift, and go to state 73
    DIV         shift, and go to state 74
    MODE        shift, and go to state 75
    AND         shift, and go to state 76
    OR          shift, and go to state 77
    RP          shift, and go to state 137


State 131

   15 func_statement: T IDENTIFIER LP RP statement .

    $default  reduce using rule 15 (func_statement)


State 132

   26 io_list: io_list COMMA . expr

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    INC         shift, and go to state 10
    DEC         shift, and go to state 11
    NOT         shift, and go to state 12
    QUOTE       shift, and go to state 15
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26

    expr  go to state 138


State 133

   22 printf: PRINTF LP STRING COMMA io_list RP .

    $default  reduce using rule 22 (printf)


State 134

   24 scanf: SCANF LP STRING COMMA io_list RP .

    $default  reduce using rule 24 (scanf)


State 135

   17 if_else: IF LP expr RP statement ELSE . statement

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    INC         shift, and go to state 10
    DEC         shift, and go to state 11
    NOT         shift, and go to state 12
    PRINTF      shift, and go to state 13
    SCANF       shift, and go to state 14
    QUOTE       shift, and go to state 15
    CONST       shift, and go to state 16
    SEMICOLON   shift, and go to state 17
    LC          shift, and go to state 18
    WHILE       shift, and go to state 19
    IF          shift, and go to state 20
    RETURN      shift, and go to state 21
    FOR         shift, and go to state 22
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26

    statement       go to state 139
    func_statement  go to state 30
    if_else         go to state 31
    while           go to state 32
    for             go to state 33
    printf          go to state 34
    scanf           go to state 35
    declaration     go to state 36
    expr            go to state 37
    T               go to state 38


State 136

   20 for: FOR LP statement statement RP statement .

    $default  reduce using rule 20 (for)


State 137

   19 for: FOR LP statement statement expr RP . statement

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    INC         shift, and go to state 10
    DEC         shift, and go to state 11
    NOT         shift, and go to state 12
    PRINTF      shift, and go to state 13
    SCANF       shift, and go to state 14
    QUOTE       shift, and go to state 15
    CONST       shift, and go to state 16
    SEMICOLON   shift, and go to state 17
    LC          shift, and go to state 18
    WHILE       shift, and go to state 19
    IF          shift, and go to state 20
    RETURN      shift, and go to state 21
    FOR         shift, and go to state 22
    IDENTIFIER  shift, and go to state 23
    INTEGER     shift, and go to state 24
    CHAR        shift, and go to state 25
    STRING      shift, and go to state 26

    statement       go to state 140
    func_statement  go to state 30
    if_else         go to state 31
    while           go to state 32
    for             go to state 33
    printf          go to state 34
    scanf           go to state 35
    declaration     go to state 36
    expr            go to state 37
    T               go to state 38


State 138

   26 io_list: io_list COMMA expr .
   41 expr: expr . ASSIGN expr
   42     | expr . ADD_ASSIGN expr
   43     | expr . SUB_ASSIGN expr
   44     | expr . MUL_ASSIGN expr
   45     | expr . DIV_ASSIGN expr
   46     | expr . ADD expr
   47     | expr . SUB expr
   48     | expr . MUL expr
   49     | expr . DIV expr
   50     | expr . MODE expr
   55     | expr . AND expr
   56     | expr . OR expr
   58     | expr . EQ expr
   59     | expr . NEQ expr
   60     | expr . GQT expr
   61     | expr . LQT expr
   62     | expr . GT expr
   63     | expr . LT expr

    ASSIGN      shift, and go to state 60
    ADD_ASSIGN  shift, and go to state 61
    SUB_ASSIGN  shift, and go to state 62
    MUL_ASSIGN  shift, and go to state 63
    DIV_ASSIGN  shift, and go to state 64
    EQ          shift, and go to state 65
    NEQ         shift, and go to state 66
    GQT         shift, and go to state 67
    LQT         shift, and go to state 68
    GT          shift, and go to state 69
    LT          shift, and go to state 70
    ADD         shift, and go to state 71
    SUB         shift, and go to state 72
    MUL         shift, and go to state 73
    DIV         shift, and go to state 74
    MODE        shift, and go to state 75
    AND         shift, and go to state 76
    OR          shift, and go to state 77

    $default  reduce using rule 26 (io_list)


State 139

   17 if_else: IF LP expr RP statement ELSE statement .

    $default  reduce using rule 17 (if_else)


State 140

   19 for: FOR LP statement statement expr RP statement .

    $default  reduce using rule 19 (for)
