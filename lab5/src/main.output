Terminals unused in grammar

    BOOL


Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: statement
    3           | statements statement

    4 statement: SEMICOLON
    5          | declaration SEMICOLON
    6          | expr SEMICOLON
    7          | RETURN expr SEMICOLON
    8          | if_else
    9          | while
   10          | for
   11          | scanf SEMICOLON
   12          | printf SEMICOLON
   13          | LC statements RC
   14          | func_statement

   15 func_statement: T IDENTIFIER LP RP statement

   16 if_else: IF LP expr RP statement
   17        | IF LP expr RP statement ELSE statement

   18 while: WHILE LP expr RP statement

   19 for: FOR LP statement statement expr RP statement

   20 printf: PRINTF LP expr RP
   21       | PRINTF LP STRING COMMA io_list RP

   22 scanf: SCANF LP expr RP
   23      | SCANF LP STRING COMMA io_list RP

   24 io_list: expr
   25        | io_list COMMA expr

   26 declaration: T IDENTIFIER ASSIGN expr
   27            | T id_list
   28            | CONST T IDENTIFIER ASSIGN expr

   29 id_list: IDENTIFIER
   30        | id_list COMMA IDENTIFIER

   31 expr: IDENTIFIER
   32     | QUOTE IDENTIFIER
   33     | INTEGER
   34     | CHAR
   35     | STRING
   36     | IDENTIFIER INC
   37     | IDENTIFIER DEC
   38     | expr ASSIGN expr
   39     | expr ADD_ASSIGN expr
   40     | expr SUB_ASSIGN expr
   41     | expr MUL_ASSIGN expr
   42     | expr DIV_ASSIGN expr
   43     | expr ADD expr
   44     | expr SUB expr
   45     | expr MUL expr
   46     | expr DIV expr
   47     | expr MODE expr
   48     | SUB expr
   49     | ADD expr
   50     | TRUE
   51     | FALSE
   52     | expr AND expr
   53     | expr OR expr
   54     | NOT expr
   55     | expr EQ expr
   56     | expr NEQ expr
   57     | expr GQT expr
   58     | expr LQT expr
   59     | expr GT expr
   60     | expr LT expr

   61 T: T_INT
   62  | T_CHAR
   63  | T_BOOL
   64  | T_STRING
   65  | T_VOID


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    T_CHAR (258) 62
    T_INT (259) 61
    T_STRING (260) 64
    T_BOOL (261) 63
    T_VOID (262) 65
    TRUE (263) 50
    FALSE (264) 51
    ASSIGN (265) 26 28 38
    ADD_ASSIGN (266) 39
    SUB_ASSIGN (267) 40
    MUL_ASSIGN (268) 41
    DIV_ASSIGN (269) 42
    EQ (270) 55
    NEQ (271) 56
    GQT (272) 57
    LQT (273) 58
    GT (274) 59
    LT (275) 60
    ADD (276) 43 49
    SUB (277) 44 48
    MUL (278) 45
    DIV (279) 46
    MODE (280) 47
    INC (281) 36
    DEC (282) 37
    AND (283) 52
    OR (284) 53
    NOT (285) 54
    PRINTF (286) 20 21
    SCANF (287) 22 23
    QUOTE (288) 32
    CONST (289) 28
    SEMICOLON (290) 4 5 6 7 11 12
    COMMA (291) 21 23 25 30
    LP (292) 15 16 17 18 19 20 21 22 23
    RP (293) 15 16 17 18 19 20 21 22 23
    LC (294) 13
    RC (295) 13
    WHILE (296) 18
    ELSE (297) 17
    IF (298) 16 17
    RETURN (299) 7
    FOR (300) 19
    IDENTIFIER (301) 15 26 28 29 30 31 32 36 37
    INTEGER (302) 33
    CHAR (303) 34
    BOOL (304)
    STRING (305) 21 23 35
    UMINUS (306)
    UADD (307)
    LOWER_THEN_ELSE (308)


Nonterminals, with rules where they appear

    $accept (54)
        on left: 0
    program (55)
        on left: 1
        on right: 0
    statements (56)
        on left: 2 3
        on right: 1 3 13
    statement (57)
        on left: 4 5 6 7 8 9 10 11 12 13 14
        on right: 2 3 15 16 17 18 19
    func_statement (58)
        on left: 15
        on right: 14
    if_else (59)
        on left: 16 17
        on right: 8
    while (60)
        on left: 18
        on right: 9
    for (61)
        on left: 19
        on right: 10
    printf (62)
        on left: 20 21
        on right: 12
    scanf (63)
        on left: 22 23
        on right: 11
    io_list (64)
        on left: 24 25
        on right: 21 23 25
    declaration (65)
        on left: 26 27 28
        on right: 5
    id_list (66)
        on left: 29 30
        on right: 27 30
    expr (67)
        on left: 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60
        on right: 6 7 16 17 18 19 20 22 24 25 26 28 38 39 40 41 42 43 44 45 46 47 48 49 52 53 54 55 56 57 58 59 60
    T (68)
        on left: 61 62 63 64 65
        on right: 15 26 27 28


State 0

    0 $accept: . program $end

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    NOT         shift, and go to state 10
    PRINTF      shift, and go to state 11
    SCANF       shift, and go to state 12
    QUOTE       shift, and go to state 13
    CONST       shift, and go to state 14
    SEMICOLON   shift, and go to state 15
    LC          shift, and go to state 16
    WHILE       shift, and go to state 17
    IF          shift, and go to state 18
    RETURN      shift, and go to state 19
    FOR         shift, and go to state 20
    IDENTIFIER  shift, and go to state 21
    INTEGER     shift, and go to state 22
    CHAR        shift, and go to state 23
    STRING      shift, and go to state 24

    program         go to state 25
    statements      go to state 26
    statement       go to state 27
    func_statement  go to state 28
    if_else         go to state 29
    while           go to state 30
    for             go to state 31
    printf          go to state 32
    scanf           go to state 33
    declaration     go to state 34
    expr            go to state 35
    T               go to state 36


State 1

   62 T: T_CHAR .

    $default  reduce using rule 62 (T)


State 2

   61 T: T_INT .

    $default  reduce using rule 61 (T)


State 3

   64 T: T_STRING .

    $default  reduce using rule 64 (T)


State 4

   63 T: T_BOOL .

    $default  reduce using rule 63 (T)


State 5

   65 T: T_VOID .

    $default  reduce using rule 65 (T)


State 6

   50 expr: TRUE .

    $default  reduce using rule 50 (expr)


State 7

   51 expr: FALSE .

    $default  reduce using rule 51 (expr)


State 8

   49 expr: ADD . expr

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    NOT         shift, and go to state 10
    QUOTE       shift, and go to state 13
    IDENTIFIER  shift, and go to state 21
    INTEGER     shift, and go to state 22
    CHAR        shift, and go to state 23
    STRING      shift, and go to state 24

    expr  go to state 37


State 9

   48 expr: SUB . expr

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    NOT         shift, and go to state 10
    QUOTE       shift, and go to state 13
    IDENTIFIER  shift, and go to state 21
    INTEGER     shift, and go to state 22
    CHAR        shift, and go to state 23
    STRING      shift, and go to state 24

    expr  go to state 38


State 10

   54 expr: NOT . expr

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    NOT         shift, and go to state 10
    QUOTE       shift, and go to state 13
    IDENTIFIER  shift, and go to state 21
    INTEGER     shift, and go to state 22
    CHAR        shift, and go to state 23
    STRING      shift, and go to state 24

    expr  go to state 39


State 11

   20 printf: PRINTF . LP expr RP
   21       | PRINTF . LP STRING COMMA io_list RP

    LP  shift, and go to state 40


State 12

   22 scanf: SCANF . LP expr RP
   23      | SCANF . LP STRING COMMA io_list RP

    LP  shift, and go to state 41


State 13

   32 expr: QUOTE . IDENTIFIER

    IDENTIFIER  shift, and go to state 42


State 14

   28 declaration: CONST . T IDENTIFIER ASSIGN expr

    T_CHAR    shift, and go to state 1
    T_INT     shift, and go to state 2
    T_STRING  shift, and go to state 3
    T_BOOL    shift, and go to state 4
    T_VOID    shift, and go to state 5

    T  go to state 43


State 15

    4 statement: SEMICOLON .

    $default  reduce using rule 4 (statement)


State 16

   13 statement: LC . statements RC

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    NOT         shift, and go to state 10
    PRINTF      shift, and go to state 11
    SCANF       shift, and go to state 12
    QUOTE       shift, and go to state 13
    CONST       shift, and go to state 14
    SEMICOLON   shift, and go to state 15
    LC          shift, and go to state 16
    WHILE       shift, and go to state 17
    IF          shift, and go to state 18
    RETURN      shift, and go to state 19
    FOR         shift, and go to state 20
    IDENTIFIER  shift, and go to state 21
    INTEGER     shift, and go to state 22
    CHAR        shift, and go to state 23
    STRING      shift, and go to state 24

    statements      go to state 44
    statement       go to state 27
    func_statement  go to state 28
    if_else         go to state 29
    while           go to state 30
    for             go to state 31
    printf          go to state 32
    scanf           go to state 33
    declaration     go to state 34
    expr            go to state 35
    T               go to state 36


State 17

   18 while: WHILE . LP expr RP statement

    LP  shift, and go to state 45


State 18

   16 if_else: IF . LP expr RP statement
   17        | IF . LP expr RP statement ELSE statement

    LP  shift, and go to state 46


State 19

    7 statement: RETURN . expr SEMICOLON

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    NOT         shift, and go to state 10
    QUOTE       shift, and go to state 13
    IDENTIFIER  shift, and go to state 21
    INTEGER     shift, and go to state 22
    CHAR        shift, and go to state 23
    STRING      shift, and go to state 24

    expr  go to state 47


State 20

   19 for: FOR . LP statement statement expr RP statement

    LP  shift, and go to state 48


State 21

   31 expr: IDENTIFIER .
   36     | IDENTIFIER . INC
   37     | IDENTIFIER . DEC

    INC  shift, and go to state 49
    DEC  shift, and go to state 50

    $default  reduce using rule 31 (expr)


State 22

   33 expr: INTEGER .

    $default  reduce using rule 33 (expr)


State 23

   34 expr: CHAR .

    $default  reduce using rule 34 (expr)


State 24

   35 expr: STRING .

    $default  reduce using rule 35 (expr)


State 25

    0 $accept: program . $end

    $end  shift, and go to state 51


State 26

    1 program: statements .
    3 statements: statements . statement

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    NOT         shift, and go to state 10
    PRINTF      shift, and go to state 11
    SCANF       shift, and go to state 12
    QUOTE       shift, and go to state 13
    CONST       shift, and go to state 14
    SEMICOLON   shift, and go to state 15
    LC          shift, and go to state 16
    WHILE       shift, and go to state 17
    IF          shift, and go to state 18
    RETURN      shift, and go to state 19
    FOR         shift, and go to state 20
    IDENTIFIER  shift, and go to state 21
    INTEGER     shift, and go to state 22
    CHAR        shift, and go to state 23
    STRING      shift, and go to state 24

    $default  reduce using rule 1 (program)

    statement       go to state 52
    func_statement  go to state 28
    if_else         go to state 29
    while           go to state 30
    for             go to state 31
    printf          go to state 32
    scanf           go to state 33
    declaration     go to state 34
    expr            go to state 35
    T               go to state 36


State 27

    2 statements: statement .

    $default  reduce using rule 2 (statements)


State 28

   14 statement: func_statement .

    $default  reduce using rule 14 (statement)


State 29

    8 statement: if_else .

    $default  reduce using rule 8 (statement)


State 30

    9 statement: while .

    $default  reduce using rule 9 (statement)


State 31

   10 statement: for .

    $default  reduce using rule 10 (statement)


State 32

   12 statement: printf . SEMICOLON

    SEMICOLON  shift, and go to state 53


State 33

   11 statement: scanf . SEMICOLON

    SEMICOLON  shift, and go to state 54


State 34

    5 statement: declaration . SEMICOLON

    SEMICOLON  shift, and go to state 55


State 35

    6 statement: expr . SEMICOLON
   38 expr: expr . ASSIGN expr
   39     | expr . ADD_ASSIGN expr
   40     | expr . SUB_ASSIGN expr
   41     | expr . MUL_ASSIGN expr
   42     | expr . DIV_ASSIGN expr
   43     | expr . ADD expr
   44     | expr . SUB expr
   45     | expr . MUL expr
   46     | expr . DIV expr
   47     | expr . MODE expr
   52     | expr . AND expr
   53     | expr . OR expr
   55     | expr . EQ expr
   56     | expr . NEQ expr
   57     | expr . GQT expr
   58     | expr . LQT expr
   59     | expr . GT expr
   60     | expr . LT expr

    ASSIGN      shift, and go to state 56
    ADD_ASSIGN  shift, and go to state 57
    SUB_ASSIGN  shift, and go to state 58
    MUL_ASSIGN  shift, and go to state 59
    DIV_ASSIGN  shift, and go to state 60
    EQ          shift, and go to state 61
    NEQ         shift, and go to state 62
    GQT         shift, and go to state 63
    LQT         shift, and go to state 64
    GT          shift, and go to state 65
    LT          shift, and go to state 66
    ADD         shift, and go to state 67
    SUB         shift, and go to state 68
    MUL         shift, and go to state 69
    DIV         shift, and go to state 70
    MODE        shift, and go to state 71
    AND         shift, and go to state 72
    OR          shift, and go to state 73
    SEMICOLON   shift, and go to state 74


State 36

   15 func_statement: T . IDENTIFIER LP RP statement
   26 declaration: T . IDENTIFIER ASSIGN expr
   27            | T . id_list

    IDENTIFIER  shift, and go to state 75

    id_list  go to state 76


State 37

   38 expr: expr . ASSIGN expr
   39     | expr . ADD_ASSIGN expr
   40     | expr . SUB_ASSIGN expr
   41     | expr . MUL_ASSIGN expr
   42     | expr . DIV_ASSIGN expr
   43     | expr . ADD expr
   44     | expr . SUB expr
   45     | expr . MUL expr
   46     | expr . DIV expr
   47     | expr . MODE expr
   49     | ADD expr .
   52     | expr . AND expr
   53     | expr . OR expr
   55     | expr . EQ expr
   56     | expr . NEQ expr
   57     | expr . GQT expr
   58     | expr . LQT expr
   59     | expr . GT expr
   60     | expr . LT expr

    $default  reduce using rule 49 (expr)


State 38

   38 expr: expr . ASSIGN expr
   39     | expr . ADD_ASSIGN expr
   40     | expr . SUB_ASSIGN expr
   41     | expr . MUL_ASSIGN expr
   42     | expr . DIV_ASSIGN expr
   43     | expr . ADD expr
   44     | expr . SUB expr
   45     | expr . MUL expr
   46     | expr . DIV expr
   47     | expr . MODE expr
   48     | SUB expr .
   52     | expr . AND expr
   53     | expr . OR expr
   55     | expr . EQ expr
   56     | expr . NEQ expr
   57     | expr . GQT expr
   58     | expr . LQT expr
   59     | expr . GT expr
   60     | expr . LT expr

    $default  reduce using rule 48 (expr)


State 39

   38 expr: expr . ASSIGN expr
   39     | expr . ADD_ASSIGN expr
   40     | expr . SUB_ASSIGN expr
   41     | expr . MUL_ASSIGN expr
   42     | expr . DIV_ASSIGN expr
   43     | expr . ADD expr
   44     | expr . SUB expr
   45     | expr . MUL expr
   46     | expr . DIV expr
   47     | expr . MODE expr
   52     | expr . AND expr
   53     | expr . OR expr
   54     | NOT expr .
   55     | expr . EQ expr
   56     | expr . NEQ expr
   57     | expr . GQT expr
   58     | expr . LQT expr
   59     | expr . GT expr
   60     | expr . LT expr

    $default  reduce using rule 54 (expr)


State 40

   20 printf: PRINTF LP . expr RP
   21       | PRINTF LP . STRING COMMA io_list RP

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    NOT         shift, and go to state 10
    QUOTE       shift, and go to state 13
    IDENTIFIER  shift, and go to state 21
    INTEGER     shift, and go to state 22
    CHAR        shift, and go to state 23
    STRING      shift, and go to state 77

    expr  go to state 78


State 41

   22 scanf: SCANF LP . expr RP
   23      | SCANF LP . STRING COMMA io_list RP

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    NOT         shift, and go to state 10
    QUOTE       shift, and go to state 13
    IDENTIFIER  shift, and go to state 21
    INTEGER     shift, and go to state 22
    CHAR        shift, and go to state 23
    STRING      shift, and go to state 79

    expr  go to state 80


State 42

   32 expr: QUOTE IDENTIFIER .

    $default  reduce using rule 32 (expr)


State 43

   28 declaration: CONST T . IDENTIFIER ASSIGN expr

    IDENTIFIER  shift, and go to state 81


State 44

    3 statements: statements . statement
   13 statement: LC statements . RC

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    NOT         shift, and go to state 10
    PRINTF      shift, and go to state 11
    SCANF       shift, and go to state 12
    QUOTE       shift, and go to state 13
    CONST       shift, and go to state 14
    SEMICOLON   shift, and go to state 15
    LC          shift, and go to state 16
    RC          shift, and go to state 82
    WHILE       shift, and go to state 17
    IF          shift, and go to state 18
    RETURN      shift, and go to state 19
    FOR         shift, and go to state 20
    IDENTIFIER  shift, and go to state 21
    INTEGER     shift, and go to state 22
    CHAR        shift, and go to state 23
    STRING      shift, and go to state 24

    statement       go to state 52
    func_statement  go to state 28
    if_else         go to state 29
    while           go to state 30
    for             go to state 31
    printf          go to state 32
    scanf           go to state 33
    declaration     go to state 34
    expr            go to state 35
    T               go to state 36


State 45

   18 while: WHILE LP . expr RP statement

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    NOT         shift, and go to state 10
    QUOTE       shift, and go to state 13
    IDENTIFIER  shift, and go to state 21
    INTEGER     shift, and go to state 22
    CHAR        shift, and go to state 23
    STRING      shift, and go to state 24

    expr  go to state 83


State 46

   16 if_else: IF LP . expr RP statement
   17        | IF LP . expr RP statement ELSE statement

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    NOT         shift, and go to state 10
    QUOTE       shift, and go to state 13
    IDENTIFIER  shift, and go to state 21
    INTEGER     shift, and go to state 22
    CHAR        shift, and go to state 23
    STRING      shift, and go to state 24

    expr  go to state 84


State 47

    7 statement: RETURN expr . SEMICOLON
   38 expr: expr . ASSIGN expr
   39     | expr . ADD_ASSIGN expr
   40     | expr . SUB_ASSIGN expr
   41     | expr . MUL_ASSIGN expr
   42     | expr . DIV_ASSIGN expr
   43     | expr . ADD expr
   44     | expr . SUB expr
   45     | expr . MUL expr
   46     | expr . DIV expr
   47     | expr . MODE expr
   52     | expr . AND expr
   53     | expr . OR expr
   55     | expr . EQ expr
   56     | expr . NEQ expr
   57     | expr . GQT expr
   58     | expr . LQT expr
   59     | expr . GT expr
   60     | expr . LT expr

    ASSIGN      shift, and go to state 56
    ADD_ASSIGN  shift, and go to state 57
    SUB_ASSIGN  shift, and go to state 58
    MUL_ASSIGN  shift, and go to state 59
    DIV_ASSIGN  shift, and go to state 60
    EQ          shift, and go to state 61
    NEQ         shift, and go to state 62
    GQT         shift, and go to state 63
    LQT         shift, and go to state 64
    GT          shift, and go to state 65
    LT          shift, and go to state 66
    ADD         shift, and go to state 67
    SUB         shift, and go to state 68
    MUL         shift, and go to state 69
    DIV         shift, and go to state 70
    MODE        shift, and go to state 71
    AND         shift, and go to state 72
    OR          shift, and go to state 73
    SEMICOLON   shift, and go to state 85


State 48

   19 for: FOR LP . statement statement expr RP statement

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    NOT         shift, and go to state 10
    PRINTF      shift, and go to state 11
    SCANF       shift, and go to state 12
    QUOTE       shift, and go to state 13
    CONST       shift, and go to state 14
    SEMICOLON   shift, and go to state 15
    LC          shift, and go to state 16
    WHILE       shift, and go to state 17
    IF          shift, and go to state 18
    RETURN      shift, and go to state 19
    FOR         shift, and go to state 20
    IDENTIFIER  shift, and go to state 21
    INTEGER     shift, and go to state 22
    CHAR        shift, and go to state 23
    STRING      shift, and go to state 24

    statement       go to state 86
    func_statement  go to state 28
    if_else         go to state 29
    while           go to state 30
    for             go to state 31
    printf          go to state 32
    scanf           go to state 33
    declaration     go to state 34
    expr            go to state 35
    T               go to state 36


State 49

   36 expr: IDENTIFIER INC .

    $default  reduce using rule 36 (expr)


State 50

   37 expr: IDENTIFIER DEC .

    $default  reduce using rule 37 (expr)


State 51

    0 $accept: program $end .

    $default  accept


State 52

    3 statements: statements statement .

    $default  reduce using rule 3 (statements)


State 53

   12 statement: printf SEMICOLON .

    $default  reduce using rule 12 (statement)


State 54

   11 statement: scanf SEMICOLON .

    $default  reduce using rule 11 (statement)


State 55

    5 statement: declaration SEMICOLON .

    $default  reduce using rule 5 (statement)


State 56

   38 expr: expr ASSIGN . expr

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    NOT         shift, and go to state 10
    QUOTE       shift, and go to state 13
    IDENTIFIER  shift, and go to state 21
    INTEGER     shift, and go to state 22
    CHAR        shift, and go to state 23
    STRING      shift, and go to state 24

    expr  go to state 87


State 57

   39 expr: expr ADD_ASSIGN . expr

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    NOT         shift, and go to state 10
    QUOTE       shift, and go to state 13
    IDENTIFIER  shift, and go to state 21
    INTEGER     shift, and go to state 22
    CHAR        shift, and go to state 23
    STRING      shift, and go to state 24

    expr  go to state 88


State 58

   40 expr: expr SUB_ASSIGN . expr

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    NOT         shift, and go to state 10
    QUOTE       shift, and go to state 13
    IDENTIFIER  shift, and go to state 21
    INTEGER     shift, and go to state 22
    CHAR        shift, and go to state 23
    STRING      shift, and go to state 24

    expr  go to state 89


State 59

   41 expr: expr MUL_ASSIGN . expr

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    NOT         shift, and go to state 10
    QUOTE       shift, and go to state 13
    IDENTIFIER  shift, and go to state 21
    INTEGER     shift, and go to state 22
    CHAR        shift, and go to state 23
    STRING      shift, and go to state 24

    expr  go to state 90


State 60

   42 expr: expr DIV_ASSIGN . expr

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    NOT         shift, and go to state 10
    QUOTE       shift, and go to state 13
    IDENTIFIER  shift, and go to state 21
    INTEGER     shift, and go to state 22
    CHAR        shift, and go to state 23
    STRING      shift, and go to state 24

    expr  go to state 91


State 61

   55 expr: expr EQ . expr

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    NOT         shift, and go to state 10
    QUOTE       shift, and go to state 13
    IDENTIFIER  shift, and go to state 21
    INTEGER     shift, and go to state 22
    CHAR        shift, and go to state 23
    STRING      shift, and go to state 24

    expr  go to state 92


State 62

   56 expr: expr NEQ . expr

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    NOT         shift, and go to state 10
    QUOTE       shift, and go to state 13
    IDENTIFIER  shift, and go to state 21
    INTEGER     shift, and go to state 22
    CHAR        shift, and go to state 23
    STRING      shift, and go to state 24

    expr  go to state 93


State 63

   57 expr: expr GQT . expr

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    NOT         shift, and go to state 10
    QUOTE       shift, and go to state 13
    IDENTIFIER  shift, and go to state 21
    INTEGER     shift, and go to state 22
    CHAR        shift, and go to state 23
    STRING      shift, and go to state 24

    expr  go to state 94


State 64

   58 expr: expr LQT . expr

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    NOT         shift, and go to state 10
    QUOTE       shift, and go to state 13
    IDENTIFIER  shift, and go to state 21
    INTEGER     shift, and go to state 22
    CHAR        shift, and go to state 23
    STRING      shift, and go to state 24

    expr  go to state 95


State 65

   59 expr: expr GT . expr

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    NOT         shift, and go to state 10
    QUOTE       shift, and go to state 13
    IDENTIFIER  shift, and go to state 21
    INTEGER     shift, and go to state 22
    CHAR        shift, and go to state 23
    STRING      shift, and go to state 24

    expr  go to state 96


State 66

   60 expr: expr LT . expr

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    NOT         shift, and go to state 10
    QUOTE       shift, and go to state 13
    IDENTIFIER  shift, and go to state 21
    INTEGER     shift, and go to state 22
    CHAR        shift, and go to state 23
    STRING      shift, and go to state 24

    expr  go to state 97


State 67

   43 expr: expr ADD . expr

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    NOT         shift, and go to state 10
    QUOTE       shift, and go to state 13
    IDENTIFIER  shift, and go to state 21
    INTEGER     shift, and go to state 22
    CHAR        shift, and go to state 23
    STRING      shift, and go to state 24

    expr  go to state 98


State 68

   44 expr: expr SUB . expr

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    NOT         shift, and go to state 10
    QUOTE       shift, and go to state 13
    IDENTIFIER  shift, and go to state 21
    INTEGER     shift, and go to state 22
    CHAR        shift, and go to state 23
    STRING      shift, and go to state 24

    expr  go to state 99


State 69

   45 expr: expr MUL . expr

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    NOT         shift, and go to state 10
    QUOTE       shift, and go to state 13
    IDENTIFIER  shift, and go to state 21
    INTEGER     shift, and go to state 22
    CHAR        shift, and go to state 23
    STRING      shift, and go to state 24

    expr  go to state 100


State 70

   46 expr: expr DIV . expr

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    NOT         shift, and go to state 10
    QUOTE       shift, and go to state 13
    IDENTIFIER  shift, and go to state 21
    INTEGER     shift, and go to state 22
    CHAR        shift, and go to state 23
    STRING      shift, and go to state 24

    expr  go to state 101


State 71

   47 expr: expr MODE . expr

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    NOT         shift, and go to state 10
    QUOTE       shift, and go to state 13
    IDENTIFIER  shift, and go to state 21
    INTEGER     shift, and go to state 22
    CHAR        shift, and go to state 23
    STRING      shift, and go to state 24

    expr  go to state 102


State 72

   52 expr: expr AND . expr

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    NOT         shift, and go to state 10
    QUOTE       shift, and go to state 13
    IDENTIFIER  shift, and go to state 21
    INTEGER     shift, and go to state 22
    CHAR        shift, and go to state 23
    STRING      shift, and go to state 24

    expr  go to state 103


State 73

   53 expr: expr OR . expr

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    NOT         shift, and go to state 10
    QUOTE       shift, and go to state 13
    IDENTIFIER  shift, and go to state 21
    INTEGER     shift, and go to state 22
    CHAR        shift, and go to state 23
    STRING      shift, and go to state 24

    expr  go to state 104


State 74

    6 statement: expr SEMICOLON .

    $default  reduce using rule 6 (statement)


State 75

   15 func_statement: T IDENTIFIER . LP RP statement
   26 declaration: T IDENTIFIER . ASSIGN expr
   29 id_list: IDENTIFIER .

    ASSIGN  shift, and go to state 105
    LP      shift, and go to state 106

    $default  reduce using rule 29 (id_list)


State 76

   27 declaration: T id_list .
   30 id_list: id_list . COMMA IDENTIFIER

    COMMA  shift, and go to state 107

    $default  reduce using rule 27 (declaration)


State 77

   21 printf: PRINTF LP STRING . COMMA io_list RP
   35 expr: STRING .

    COMMA  shift, and go to state 108

    $default  reduce using rule 35 (expr)


State 78

   20 printf: PRINTF LP expr . RP
   38 expr: expr . ASSIGN expr
   39     | expr . ADD_ASSIGN expr
   40     | expr . SUB_ASSIGN expr
   41     | expr . MUL_ASSIGN expr
   42     | expr . DIV_ASSIGN expr
   43     | expr . ADD expr
   44     | expr . SUB expr
   45     | expr . MUL expr
   46     | expr . DIV expr
   47     | expr . MODE expr
   52     | expr . AND expr
   53     | expr . OR expr
   55     | expr . EQ expr
   56     | expr . NEQ expr
   57     | expr . GQT expr
   58     | expr . LQT expr
   59     | expr . GT expr
   60     | expr . LT expr

    ASSIGN      shift, and go to state 56
    ADD_ASSIGN  shift, and go to state 57
    SUB_ASSIGN  shift, and go to state 58
    MUL_ASSIGN  shift, and go to state 59
    DIV_ASSIGN  shift, and go to state 60
    EQ          shift, and go to state 61
    NEQ         shift, and go to state 62
    GQT         shift, and go to state 63
    LQT         shift, and go to state 64
    GT          shift, and go to state 65
    LT          shift, and go to state 66
    ADD         shift, and go to state 67
    SUB         shift, and go to state 68
    MUL         shift, and go to state 69
    DIV         shift, and go to state 70
    MODE        shift, and go to state 71
    AND         shift, and go to state 72
    OR          shift, and go to state 73
    RP          shift, and go to state 109


State 79

   23 scanf: SCANF LP STRING . COMMA io_list RP
   35 expr: STRING .

    COMMA  shift, and go to state 110

    $default  reduce using rule 35 (expr)


State 80

   22 scanf: SCANF LP expr . RP
   38 expr: expr . ASSIGN expr
   39     | expr . ADD_ASSIGN expr
   40     | expr . SUB_ASSIGN expr
   41     | expr . MUL_ASSIGN expr
   42     | expr . DIV_ASSIGN expr
   43     | expr . ADD expr
   44     | expr . SUB expr
   45     | expr . MUL expr
   46     | expr . DIV expr
   47     | expr . MODE expr
   52     | expr . AND expr
   53     | expr . OR expr
   55     | expr . EQ expr
   56     | expr . NEQ expr
   57     | expr . GQT expr
   58     | expr . LQT expr
   59     | expr . GT expr
   60     | expr . LT expr

    ASSIGN      shift, and go to state 56
    ADD_ASSIGN  shift, and go to state 57
    SUB_ASSIGN  shift, and go to state 58
    MUL_ASSIGN  shift, and go to state 59
    DIV_ASSIGN  shift, and go to state 60
    EQ          shift, and go to state 61
    NEQ         shift, and go to state 62
    GQT         shift, and go to state 63
    LQT         shift, and go to state 64
    GT          shift, and go to state 65
    LT          shift, and go to state 66
    ADD         shift, and go to state 67
    SUB         shift, and go to state 68
    MUL         shift, and go to state 69
    DIV         shift, and go to state 70
    MODE        shift, and go to state 71
    AND         shift, and go to state 72
    OR          shift, and go to state 73
    RP          shift, and go to state 111


State 81

   28 declaration: CONST T IDENTIFIER . ASSIGN expr

    ASSIGN  shift, and go to state 112


State 82

   13 statement: LC statements RC .

    $default  reduce using rule 13 (statement)


State 83

   18 while: WHILE LP expr . RP statement
   38 expr: expr . ASSIGN expr
   39     | expr . ADD_ASSIGN expr
   40     | expr . SUB_ASSIGN expr
   41     | expr . MUL_ASSIGN expr
   42     | expr . DIV_ASSIGN expr
   43     | expr . ADD expr
   44     | expr . SUB expr
   45     | expr . MUL expr
   46     | expr . DIV expr
   47     | expr . MODE expr
   52     | expr . AND expr
   53     | expr . OR expr
   55     | expr . EQ expr
   56     | expr . NEQ expr
   57     | expr . GQT expr
   58     | expr . LQT expr
   59     | expr . GT expr
   60     | expr . LT expr

    ASSIGN      shift, and go to state 56
    ADD_ASSIGN  shift, and go to state 57
    SUB_ASSIGN  shift, and go to state 58
    MUL_ASSIGN  shift, and go to state 59
    DIV_ASSIGN  shift, and go to state 60
    EQ          shift, and go to state 61
    NEQ         shift, and go to state 62
    GQT         shift, and go to state 63
    LQT         shift, and go to state 64
    GT          shift, and go to state 65
    LT          shift, and go to state 66
    ADD         shift, and go to state 67
    SUB         shift, and go to state 68
    MUL         shift, and go to state 69
    DIV         shift, and go to state 70
    MODE        shift, and go to state 71
    AND         shift, and go to state 72
    OR          shift, and go to state 73
    RP          shift, and go to state 113


State 84

   16 if_else: IF LP expr . RP statement
   17        | IF LP expr . RP statement ELSE statement
   38 expr: expr . ASSIGN expr
   39     | expr . ADD_ASSIGN expr
   40     | expr . SUB_ASSIGN expr
   41     | expr . MUL_ASSIGN expr
   42     | expr . DIV_ASSIGN expr
   43     | expr . ADD expr
   44     | expr . SUB expr
   45     | expr . MUL expr
   46     | expr . DIV expr
   47     | expr . MODE expr
   52     | expr . AND expr
   53     | expr . OR expr
   55     | expr . EQ expr
   56     | expr . NEQ expr
   57     | expr . GQT expr
   58     | expr . LQT expr
   59     | expr . GT expr
   60     | expr . LT expr

    ASSIGN      shift, and go to state 56
    ADD_ASSIGN  shift, and go to state 57
    SUB_ASSIGN  shift, and go to state 58
    MUL_ASSIGN  shift, and go to state 59
    DIV_ASSIGN  shift, and go to state 60
    EQ          shift, and go to state 61
    NEQ         shift, and go to state 62
    GQT         shift, and go to state 63
    LQT         shift, and go to state 64
    GT          shift, and go to state 65
    LT          shift, and go to state 66
    ADD         shift, and go to state 67
    SUB         shift, and go to state 68
    MUL         shift, and go to state 69
    DIV         shift, and go to state 70
    MODE        shift, and go to state 71
    AND         shift, and go to state 72
    OR          shift, and go to state 73
    RP          shift, and go to state 114


State 85

    7 statement: RETURN expr SEMICOLON .

    $default  reduce using rule 7 (statement)


State 86

   19 for: FOR LP statement . statement expr RP statement

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    NOT         shift, and go to state 10
    PRINTF      shift, and go to state 11
    SCANF       shift, and go to state 12
    QUOTE       shift, and go to state 13
    CONST       shift, and go to state 14
    SEMICOLON   shift, and go to state 15
    LC          shift, and go to state 16
    WHILE       shift, and go to state 17
    IF          shift, and go to state 18
    RETURN      shift, and go to state 19
    FOR         shift, and go to state 20
    IDENTIFIER  shift, and go to state 21
    INTEGER     shift, and go to state 22
    CHAR        shift, and go to state 23
    STRING      shift, and go to state 24

    statement       go to state 115
    func_statement  go to state 28
    if_else         go to state 29
    while           go to state 30
    for             go to state 31
    printf          go to state 32
    scanf           go to state 33
    declaration     go to state 34
    expr            go to state 35
    T               go to state 36


State 87

   38 expr: expr . ASSIGN expr
   38     | expr ASSIGN expr .
   39     | expr . ADD_ASSIGN expr
   40     | expr . SUB_ASSIGN expr
   41     | expr . MUL_ASSIGN expr
   42     | expr . DIV_ASSIGN expr
   43     | expr . ADD expr
   44     | expr . SUB expr
   45     | expr . MUL expr
   46     | expr . DIV expr
   47     | expr . MODE expr
   52     | expr . AND expr
   53     | expr . OR expr
   55     | expr . EQ expr
   56     | expr . NEQ expr
   57     | expr . GQT expr
   58     | expr . LQT expr
   59     | expr . GT expr
   60     | expr . LT expr

    ASSIGN      shift, and go to state 56
    ADD_ASSIGN  shift, and go to state 57
    SUB_ASSIGN  shift, and go to state 58
    MUL_ASSIGN  shift, and go to state 59
    DIV_ASSIGN  shift, and go to state 60
    EQ          shift, and go to state 61
    NEQ         shift, and go to state 62
    GQT         shift, and go to state 63
    LQT         shift, and go to state 64
    GT          shift, and go to state 65
    LT          shift, and go to state 66
    ADD         shift, and go to state 67
    SUB         shift, and go to state 68
    MUL         shift, and go to state 69
    DIV         shift, and go to state 70
    MODE        shift, and go to state 71
    AND         shift, and go to state 72
    OR          shift, and go to state 73

    $default  reduce using rule 38 (expr)


State 88

   38 expr: expr . ASSIGN expr
   39     | expr . ADD_ASSIGN expr
   39     | expr ADD_ASSIGN expr .
   40     | expr . SUB_ASSIGN expr
   41     | expr . MUL_ASSIGN expr
   42     | expr . DIV_ASSIGN expr
   43     | expr . ADD expr
   44     | expr . SUB expr
   45     | expr . MUL expr
   46     | expr . DIV expr
   47     | expr . MODE expr
   52     | expr . AND expr
   53     | expr . OR expr
   55     | expr . EQ expr
   56     | expr . NEQ expr
   57     | expr . GQT expr
   58     | expr . LQT expr
   59     | expr . GT expr
   60     | expr . LT expr

    ASSIGN      shift, and go to state 56
    ADD_ASSIGN  shift, and go to state 57
    SUB_ASSIGN  shift, and go to state 58
    MUL_ASSIGN  shift, and go to state 59
    DIV_ASSIGN  shift, and go to state 60
    EQ          shift, and go to state 61
    NEQ         shift, and go to state 62
    GQT         shift, and go to state 63
    LQT         shift, and go to state 64
    GT          shift, and go to state 65
    LT          shift, and go to state 66
    ADD         shift, and go to state 67
    SUB         shift, and go to state 68
    MUL         shift, and go to state 69
    DIV         shift, and go to state 70
    MODE        shift, and go to state 71
    AND         shift, and go to state 72
    OR          shift, and go to state 73

    $default  reduce using rule 39 (expr)


State 89

   38 expr: expr . ASSIGN expr
   39     | expr . ADD_ASSIGN expr
   40     | expr . SUB_ASSIGN expr
   40     | expr SUB_ASSIGN expr .
   41     | expr . MUL_ASSIGN expr
   42     | expr . DIV_ASSIGN expr
   43     | expr . ADD expr
   44     | expr . SUB expr
   45     | expr . MUL expr
   46     | expr . DIV expr
   47     | expr . MODE expr
   52     | expr . AND expr
   53     | expr . OR expr
   55     | expr . EQ expr
   56     | expr . NEQ expr
   57     | expr . GQT expr
   58     | expr . LQT expr
   59     | expr . GT expr
   60     | expr . LT expr

    ASSIGN      shift, and go to state 56
    ADD_ASSIGN  shift, and go to state 57
    SUB_ASSIGN  shift, and go to state 58
    MUL_ASSIGN  shift, and go to state 59
    DIV_ASSIGN  shift, and go to state 60
    EQ          shift, and go to state 61
    NEQ         shift, and go to state 62
    GQT         shift, and go to state 63
    LQT         shift, and go to state 64
    GT          shift, and go to state 65
    LT          shift, and go to state 66
    ADD         shift, and go to state 67
    SUB         shift, and go to state 68
    MUL         shift, and go to state 69
    DIV         shift, and go to state 70
    MODE        shift, and go to state 71
    AND         shift, and go to state 72
    OR          shift, and go to state 73

    $default  reduce using rule 40 (expr)


State 90

   38 expr: expr . ASSIGN expr
   39     | expr . ADD_ASSIGN expr
   40     | expr . SUB_ASSIGN expr
   41     | expr . MUL_ASSIGN expr
   41     | expr MUL_ASSIGN expr .
   42     | expr . DIV_ASSIGN expr
   43     | expr . ADD expr
   44     | expr . SUB expr
   45     | expr . MUL expr
   46     | expr . DIV expr
   47     | expr . MODE expr
   52     | expr . AND expr
   53     | expr . OR expr
   55     | expr . EQ expr
   56     | expr . NEQ expr
   57     | expr . GQT expr
   58     | expr . LQT expr
   59     | expr . GT expr
   60     | expr . LT expr

    ASSIGN      shift, and go to state 56
    ADD_ASSIGN  shift, and go to state 57
    SUB_ASSIGN  shift, and go to state 58
    MUL_ASSIGN  shift, and go to state 59
    DIV_ASSIGN  shift, and go to state 60
    EQ          shift, and go to state 61
    NEQ         shift, and go to state 62
    GQT         shift, and go to state 63
    LQT         shift, and go to state 64
    GT          shift, and go to state 65
    LT          shift, and go to state 66
    ADD         shift, and go to state 67
    SUB         shift, and go to state 68
    MUL         shift, and go to state 69
    DIV         shift, and go to state 70
    MODE        shift, and go to state 71
    AND         shift, and go to state 72
    OR          shift, and go to state 73

    $default  reduce using rule 41 (expr)


State 91

   38 expr: expr . ASSIGN expr
   39     | expr . ADD_ASSIGN expr
   40     | expr . SUB_ASSIGN expr
   41     | expr . MUL_ASSIGN expr
   42     | expr . DIV_ASSIGN expr
   42     | expr DIV_ASSIGN expr .
   43     | expr . ADD expr
   44     | expr . SUB expr
   45     | expr . MUL expr
   46     | expr . DIV expr
   47     | expr . MODE expr
   52     | expr . AND expr
   53     | expr . OR expr
   55     | expr . EQ expr
   56     | expr . NEQ expr
   57     | expr . GQT expr
   58     | expr . LQT expr
   59     | expr . GT expr
   60     | expr . LT expr

    ASSIGN      shift, and go to state 56
    ADD_ASSIGN  shift, and go to state 57
    SUB_ASSIGN  shift, and go to state 58
    MUL_ASSIGN  shift, and go to state 59
    DIV_ASSIGN  shift, and go to state 60
    EQ          shift, and go to state 61
    NEQ         shift, and go to state 62
    GQT         shift, and go to state 63
    LQT         shift, and go to state 64
    GT          shift, and go to state 65
    LT          shift, and go to state 66
    ADD         shift, and go to state 67
    SUB         shift, and go to state 68
    MUL         shift, and go to state 69
    DIV         shift, and go to state 70
    MODE        shift, and go to state 71
    AND         shift, and go to state 72
    OR          shift, and go to state 73

    $default  reduce using rule 42 (expr)


State 92

   38 expr: expr . ASSIGN expr
   39     | expr . ADD_ASSIGN expr
   40     | expr . SUB_ASSIGN expr
   41     | expr . MUL_ASSIGN expr
   42     | expr . DIV_ASSIGN expr
   43     | expr . ADD expr
   44     | expr . SUB expr
   45     | expr . MUL expr
   46     | expr . DIV expr
   47     | expr . MODE expr
   52     | expr . AND expr
   53     | expr . OR expr
   55     | expr . EQ expr
   55     | expr EQ expr .
   56     | expr . NEQ expr
   57     | expr . GQT expr
   58     | expr . LQT expr
   59     | expr . GT expr
   60     | expr . LT expr

    GQT   shift, and go to state 63
    LQT   shift, and go to state 64
    GT    shift, and go to state 65
    LT    shift, and go to state 66
    ADD   shift, and go to state 67
    SUB   shift, and go to state 68
    MUL   shift, and go to state 69
    DIV   shift, and go to state 70
    MODE  shift, and go to state 71

    $default  reduce using rule 55 (expr)


State 93

   38 expr: expr . ASSIGN expr
   39     | expr . ADD_ASSIGN expr
   40     | expr . SUB_ASSIGN expr
   41     | expr . MUL_ASSIGN expr
   42     | expr . DIV_ASSIGN expr
   43     | expr . ADD expr
   44     | expr . SUB expr
   45     | expr . MUL expr
   46     | expr . DIV expr
   47     | expr . MODE expr
   52     | expr . AND expr
   53     | expr . OR expr
   55     | expr . EQ expr
   56     | expr . NEQ expr
   56     | expr NEQ expr .
   57     | expr . GQT expr
   58     | expr . LQT expr
   59     | expr . GT expr
   60     | expr . LT expr

    GQT   shift, and go to state 63
    LQT   shift, and go to state 64
    GT    shift, and go to state 65
    LT    shift, and go to state 66
    ADD   shift, and go to state 67
    SUB   shift, and go to state 68
    MUL   shift, and go to state 69
    DIV   shift, and go to state 70
    MODE  shift, and go to state 71

    $default  reduce using rule 56 (expr)


State 94

   38 expr: expr . ASSIGN expr
   39     | expr . ADD_ASSIGN expr
   40     | expr . SUB_ASSIGN expr
   41     | expr . MUL_ASSIGN expr
   42     | expr . DIV_ASSIGN expr
   43     | expr . ADD expr
   44     | expr . SUB expr
   45     | expr . MUL expr
   46     | expr . DIV expr
   47     | expr . MODE expr
   52     | expr . AND expr
   53     | expr . OR expr
   55     | expr . EQ expr
   56     | expr . NEQ expr
   57     | expr . GQT expr
   57     | expr GQT expr .
   58     | expr . LQT expr
   59     | expr . GT expr
   60     | expr . LT expr

    ADD   shift, and go to state 67
    SUB   shift, and go to state 68
    MUL   shift, and go to state 69
    DIV   shift, and go to state 70
    MODE  shift, and go to state 71

    $default  reduce using rule 57 (expr)


State 95

   38 expr: expr . ASSIGN expr
   39     | expr . ADD_ASSIGN expr
   40     | expr . SUB_ASSIGN expr
   41     | expr . MUL_ASSIGN expr
   42     | expr . DIV_ASSIGN expr
   43     | expr . ADD expr
   44     | expr . SUB expr
   45     | expr . MUL expr
   46     | expr . DIV expr
   47     | expr . MODE expr
   52     | expr . AND expr
   53     | expr . OR expr
   55     | expr . EQ expr
   56     | expr . NEQ expr
   57     | expr . GQT expr
   58     | expr . LQT expr
   58     | expr LQT expr .
   59     | expr . GT expr
   60     | expr . LT expr

    ADD   shift, and go to state 67
    SUB   shift, and go to state 68
    MUL   shift, and go to state 69
    DIV   shift, and go to state 70
    MODE  shift, and go to state 71

    $default  reduce using rule 58 (expr)


State 96

   38 expr: expr . ASSIGN expr
   39     | expr . ADD_ASSIGN expr
   40     | expr . SUB_ASSIGN expr
   41     | expr . MUL_ASSIGN expr
   42     | expr . DIV_ASSIGN expr
   43     | expr . ADD expr
   44     | expr . SUB expr
   45     | expr . MUL expr
   46     | expr . DIV expr
   47     | expr . MODE expr
   52     | expr . AND expr
   53     | expr . OR expr
   55     | expr . EQ expr
   56     | expr . NEQ expr
   57     | expr . GQT expr
   58     | expr . LQT expr
   59     | expr . GT expr
   59     | expr GT expr .
   60     | expr . LT expr

    ADD   shift, and go to state 67
    SUB   shift, and go to state 68
    MUL   shift, and go to state 69
    DIV   shift, and go to state 70
    MODE  shift, and go to state 71

    $default  reduce using rule 59 (expr)


State 97

   38 expr: expr . ASSIGN expr
   39     | expr . ADD_ASSIGN expr
   40     | expr . SUB_ASSIGN expr
   41     | expr . MUL_ASSIGN expr
   42     | expr . DIV_ASSIGN expr
   43     | expr . ADD expr
   44     | expr . SUB expr
   45     | expr . MUL expr
   46     | expr . DIV expr
   47     | expr . MODE expr
   52     | expr . AND expr
   53     | expr . OR expr
   55     | expr . EQ expr
   56     | expr . NEQ expr
   57     | expr . GQT expr
   58     | expr . LQT expr
   59     | expr . GT expr
   60     | expr . LT expr
   60     | expr LT expr .

    ADD   shift, and go to state 67
    SUB   shift, and go to state 68
    MUL   shift, and go to state 69
    DIV   shift, and go to state 70
    MODE  shift, and go to state 71

    $default  reduce using rule 60 (expr)


State 98

   38 expr: expr . ASSIGN expr
   39     | expr . ADD_ASSIGN expr
   40     | expr . SUB_ASSIGN expr
   41     | expr . MUL_ASSIGN expr
   42     | expr . DIV_ASSIGN expr
   43     | expr . ADD expr
   43     | expr ADD expr .
   44     | expr . SUB expr
   45     | expr . MUL expr
   46     | expr . DIV expr
   47     | expr . MODE expr
   52     | expr . AND expr
   53     | expr . OR expr
   55     | expr . EQ expr
   56     | expr . NEQ expr
   57     | expr . GQT expr
   58     | expr . LQT expr
   59     | expr . GT expr
   60     | expr . LT expr

    MUL   shift, and go to state 69
    DIV   shift, and go to state 70
    MODE  shift, and go to state 71

    $default  reduce using rule 43 (expr)


State 99

   38 expr: expr . ASSIGN expr
   39     | expr . ADD_ASSIGN expr
   40     | expr . SUB_ASSIGN expr
   41     | expr . MUL_ASSIGN expr
   42     | expr . DIV_ASSIGN expr
   43     | expr . ADD expr
   44     | expr . SUB expr
   44     | expr SUB expr .
   45     | expr . MUL expr
   46     | expr . DIV expr
   47     | expr . MODE expr
   52     | expr . AND expr
   53     | expr . OR expr
   55     | expr . EQ expr
   56     | expr . NEQ expr
   57     | expr . GQT expr
   58     | expr . LQT expr
   59     | expr . GT expr
   60     | expr . LT expr

    MUL   shift, and go to state 69
    DIV   shift, and go to state 70
    MODE  shift, and go to state 71

    $default  reduce using rule 44 (expr)


State 100

   38 expr: expr . ASSIGN expr
   39     | expr . ADD_ASSIGN expr
   40     | expr . SUB_ASSIGN expr
   41     | expr . MUL_ASSIGN expr
   42     | expr . DIV_ASSIGN expr
   43     | expr . ADD expr
   44     | expr . SUB expr
   45     | expr . MUL expr
   45     | expr MUL expr .
   46     | expr . DIV expr
   47     | expr . MODE expr
   52     | expr . AND expr
   53     | expr . OR expr
   55     | expr . EQ expr
   56     | expr . NEQ expr
   57     | expr . GQT expr
   58     | expr . LQT expr
   59     | expr . GT expr
   60     | expr . LT expr

    $default  reduce using rule 45 (expr)


State 101

   38 expr: expr . ASSIGN expr
   39     | expr . ADD_ASSIGN expr
   40     | expr . SUB_ASSIGN expr
   41     | expr . MUL_ASSIGN expr
   42     | expr . DIV_ASSIGN expr
   43     | expr . ADD expr
   44     | expr . SUB expr
   45     | expr . MUL expr
   46     | expr . DIV expr
   46     | expr DIV expr .
   47     | expr . MODE expr
   52     | expr . AND expr
   53     | expr . OR expr
   55     | expr . EQ expr
   56     | expr . NEQ expr
   57     | expr . GQT expr
   58     | expr . LQT expr
   59     | expr . GT expr
   60     | expr . LT expr

    $default  reduce using rule 46 (expr)


State 102

   38 expr: expr . ASSIGN expr
   39     | expr . ADD_ASSIGN expr
   40     | expr . SUB_ASSIGN expr
   41     | expr . MUL_ASSIGN expr
   42     | expr . DIV_ASSIGN expr
   43     | expr . ADD expr
   44     | expr . SUB expr
   45     | expr . MUL expr
   46     | expr . DIV expr
   47     | expr . MODE expr
   47     | expr MODE expr .
   52     | expr . AND expr
   53     | expr . OR expr
   55     | expr . EQ expr
   56     | expr . NEQ expr
   57     | expr . GQT expr
   58     | expr . LQT expr
   59     | expr . GT expr
   60     | expr . LT expr

    $default  reduce using rule 47 (expr)


State 103

   38 expr: expr . ASSIGN expr
   39     | expr . ADD_ASSIGN expr
   40     | expr . SUB_ASSIGN expr
   41     | expr . MUL_ASSIGN expr
   42     | expr . DIV_ASSIGN expr
   43     | expr . ADD expr
   44     | expr . SUB expr
   45     | expr . MUL expr
   46     | expr . DIV expr
   47     | expr . MODE expr
   52     | expr . AND expr
   52     | expr AND expr .
   53     | expr . OR expr
   55     | expr . EQ expr
   56     | expr . NEQ expr
   57     | expr . GQT expr
   58     | expr . LQT expr
   59     | expr . GT expr
   60     | expr . LT expr

    EQ    shift, and go to state 61
    NEQ   shift, and go to state 62
    GQT   shift, and go to state 63
    LQT   shift, and go to state 64
    GT    shift, and go to state 65
    LT    shift, and go to state 66
    ADD   shift, and go to state 67
    SUB   shift, and go to state 68
    MUL   shift, and go to state 69
    DIV   shift, and go to state 70
    MODE  shift, and go to state 71

    $default  reduce using rule 52 (expr)


State 104

   38 expr: expr . ASSIGN expr
   39     | expr . ADD_ASSIGN expr
   40     | expr . SUB_ASSIGN expr
   41     | expr . MUL_ASSIGN expr
   42     | expr . DIV_ASSIGN expr
   43     | expr . ADD expr
   44     | expr . SUB expr
   45     | expr . MUL expr
   46     | expr . DIV expr
   47     | expr . MODE expr
   52     | expr . AND expr
   53     | expr . OR expr
   53     | expr OR expr .
   55     | expr . EQ expr
   56     | expr . NEQ expr
   57     | expr . GQT expr
   58     | expr . LQT expr
   59     | expr . GT expr
   60     | expr . LT expr

    EQ    shift, and go to state 61
    NEQ   shift, and go to state 62
    GQT   shift, and go to state 63
    LQT   shift, and go to state 64
    GT    shift, and go to state 65
    LT    shift, and go to state 66
    ADD   shift, and go to state 67
    SUB   shift, and go to state 68
    MUL   shift, and go to state 69
    DIV   shift, and go to state 70
    MODE  shift, and go to state 71
    AND   shift, and go to state 72

    $default  reduce using rule 53 (expr)


State 105

   26 declaration: T IDENTIFIER ASSIGN . expr

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    NOT         shift, and go to state 10
    QUOTE       shift, and go to state 13
    IDENTIFIER  shift, and go to state 21
    INTEGER     shift, and go to state 22
    CHAR        shift, and go to state 23
    STRING      shift, and go to state 24

    expr  go to state 116


State 106

   15 func_statement: T IDENTIFIER LP . RP statement

    RP  shift, and go to state 117


State 107

   30 id_list: id_list COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 118


State 108

   21 printf: PRINTF LP STRING COMMA . io_list RP

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    NOT         shift, and go to state 10
    QUOTE       shift, and go to state 13
    IDENTIFIER  shift, and go to state 21
    INTEGER     shift, and go to state 22
    CHAR        shift, and go to state 23
    STRING      shift, and go to state 24

    io_list  go to state 119
    expr     go to state 120


State 109

   20 printf: PRINTF LP expr RP .

    $default  reduce using rule 20 (printf)


State 110

   23 scanf: SCANF LP STRING COMMA . io_list RP

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    NOT         shift, and go to state 10
    QUOTE       shift, and go to state 13
    IDENTIFIER  shift, and go to state 21
    INTEGER     shift, and go to state 22
    CHAR        shift, and go to state 23
    STRING      shift, and go to state 24

    io_list  go to state 121
    expr     go to state 120


State 111

   22 scanf: SCANF LP expr RP .

    $default  reduce using rule 22 (scanf)


State 112

   28 declaration: CONST T IDENTIFIER ASSIGN . expr

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    NOT         shift, and go to state 10
    QUOTE       shift, and go to state 13
    IDENTIFIER  shift, and go to state 21
    INTEGER     shift, and go to state 22
    CHAR        shift, and go to state 23
    STRING      shift, and go to state 24

    expr  go to state 122


State 113

   18 while: WHILE LP expr RP . statement

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    NOT         shift, and go to state 10
    PRINTF      shift, and go to state 11
    SCANF       shift, and go to state 12
    QUOTE       shift, and go to state 13
    CONST       shift, and go to state 14
    SEMICOLON   shift, and go to state 15
    LC          shift, and go to state 16
    WHILE       shift, and go to state 17
    IF          shift, and go to state 18
    RETURN      shift, and go to state 19
    FOR         shift, and go to state 20
    IDENTIFIER  shift, and go to state 21
    INTEGER     shift, and go to state 22
    CHAR        shift, and go to state 23
    STRING      shift, and go to state 24

    statement       go to state 123
    func_statement  go to state 28
    if_else         go to state 29
    while           go to state 30
    for             go to state 31
    printf          go to state 32
    scanf           go to state 33
    declaration     go to state 34
    expr            go to state 35
    T               go to state 36


State 114

   16 if_else: IF LP expr RP . statement
   17        | IF LP expr RP . statement ELSE statement

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    NOT         shift, and go to state 10
    PRINTF      shift, and go to state 11
    SCANF       shift, and go to state 12
    QUOTE       shift, and go to state 13
    CONST       shift, and go to state 14
    SEMICOLON   shift, and go to state 15
    LC          shift, and go to state 16
    WHILE       shift, and go to state 17
    IF          shift, and go to state 18
    RETURN      shift, and go to state 19
    FOR         shift, and go to state 20
    IDENTIFIER  shift, and go to state 21
    INTEGER     shift, and go to state 22
    CHAR        shift, and go to state 23
    STRING      shift, and go to state 24

    statement       go to state 124
    func_statement  go to state 28
    if_else         go to state 29
    while           go to state 30
    for             go to state 31
    printf          go to state 32
    scanf           go to state 33
    declaration     go to state 34
    expr            go to state 35
    T               go to state 36


State 115

   19 for: FOR LP statement statement . expr RP statement

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    NOT         shift, and go to state 10
    QUOTE       shift, and go to state 13
    IDENTIFIER  shift, and go to state 21
    INTEGER     shift, and go to state 22
    CHAR        shift, and go to state 23
    STRING      shift, and go to state 24

    expr  go to state 125


State 116

   26 declaration: T IDENTIFIER ASSIGN expr .
   38 expr: expr . ASSIGN expr
   39     | expr . ADD_ASSIGN expr
   40     | expr . SUB_ASSIGN expr
   41     | expr . MUL_ASSIGN expr
   42     | expr . DIV_ASSIGN expr
   43     | expr . ADD expr
   44     | expr . SUB expr
   45     | expr . MUL expr
   46     | expr . DIV expr
   47     | expr . MODE expr
   52     | expr . AND expr
   53     | expr . OR expr
   55     | expr . EQ expr
   56     | expr . NEQ expr
   57     | expr . GQT expr
   58     | expr . LQT expr
   59     | expr . GT expr
   60     | expr . LT expr

    ASSIGN      shift, and go to state 56
    ADD_ASSIGN  shift, and go to state 57
    SUB_ASSIGN  shift, and go to state 58
    MUL_ASSIGN  shift, and go to state 59
    DIV_ASSIGN  shift, and go to state 60
    EQ          shift, and go to state 61
    NEQ         shift, and go to state 62
    GQT         shift, and go to state 63
    LQT         shift, and go to state 64
    GT          shift, and go to state 65
    LT          shift, and go to state 66
    ADD         shift, and go to state 67
    SUB         shift, and go to state 68
    MUL         shift, and go to state 69
    DIV         shift, and go to state 70
    MODE        shift, and go to state 71
    AND         shift, and go to state 72
    OR          shift, and go to state 73

    $default  reduce using rule 26 (declaration)


State 117

   15 func_statement: T IDENTIFIER LP RP . statement

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    NOT         shift, and go to state 10
    PRINTF      shift, and go to state 11
    SCANF       shift, and go to state 12
    QUOTE       shift, and go to state 13
    CONST       shift, and go to state 14
    SEMICOLON   shift, and go to state 15
    LC          shift, and go to state 16
    WHILE       shift, and go to state 17
    IF          shift, and go to state 18
    RETURN      shift, and go to state 19
    FOR         shift, and go to state 20
    IDENTIFIER  shift, and go to state 21
    INTEGER     shift, and go to state 22
    CHAR        shift, and go to state 23
    STRING      shift, and go to state 24

    statement       go to state 126
    func_statement  go to state 28
    if_else         go to state 29
    while           go to state 30
    for             go to state 31
    printf          go to state 32
    scanf           go to state 33
    declaration     go to state 34
    expr            go to state 35
    T               go to state 36


State 118

   30 id_list: id_list COMMA IDENTIFIER .

    $default  reduce using rule 30 (id_list)


State 119

   21 printf: PRINTF LP STRING COMMA io_list . RP
   25 io_list: io_list . COMMA expr

    COMMA  shift, and go to state 127
    RP     shift, and go to state 128


State 120

   24 io_list: expr .
   38 expr: expr . ASSIGN expr
   39     | expr . ADD_ASSIGN expr
   40     | expr . SUB_ASSIGN expr
   41     | expr . MUL_ASSIGN expr
   42     | expr . DIV_ASSIGN expr
   43     | expr . ADD expr
   44     | expr . SUB expr
   45     | expr . MUL expr
   46     | expr . DIV expr
   47     | expr . MODE expr
   52     | expr . AND expr
   53     | expr . OR expr
   55     | expr . EQ expr
   56     | expr . NEQ expr
   57     | expr . GQT expr
   58     | expr . LQT expr
   59     | expr . GT expr
   60     | expr . LT expr

    ASSIGN      shift, and go to state 56
    ADD_ASSIGN  shift, and go to state 57
    SUB_ASSIGN  shift, and go to state 58
    MUL_ASSIGN  shift, and go to state 59
    DIV_ASSIGN  shift, and go to state 60
    EQ          shift, and go to state 61
    NEQ         shift, and go to state 62
    GQT         shift, and go to state 63
    LQT         shift, and go to state 64
    GT          shift, and go to state 65
    LT          shift, and go to state 66
    ADD         shift, and go to state 67
    SUB         shift, and go to state 68
    MUL         shift, and go to state 69
    DIV         shift, and go to state 70
    MODE        shift, and go to state 71
    AND         shift, and go to state 72
    OR          shift, and go to state 73

    $default  reduce using rule 24 (io_list)


State 121

   23 scanf: SCANF LP STRING COMMA io_list . RP
   25 io_list: io_list . COMMA expr

    COMMA  shift, and go to state 127
    RP     shift, and go to state 129


State 122

   28 declaration: CONST T IDENTIFIER ASSIGN expr .
   38 expr: expr . ASSIGN expr
   39     | expr . ADD_ASSIGN expr
   40     | expr . SUB_ASSIGN expr
   41     | expr . MUL_ASSIGN expr
   42     | expr . DIV_ASSIGN expr
   43     | expr . ADD expr
   44     | expr . SUB expr
   45     | expr . MUL expr
   46     | expr . DIV expr
   47     | expr . MODE expr
   52     | expr . AND expr
   53     | expr . OR expr
   55     | expr . EQ expr
   56     | expr . NEQ expr
   57     | expr . GQT expr
   58     | expr . LQT expr
   59     | expr . GT expr
   60     | expr . LT expr

    ASSIGN      shift, and go to state 56
    ADD_ASSIGN  shift, and go to state 57
    SUB_ASSIGN  shift, and go to state 58
    MUL_ASSIGN  shift, and go to state 59
    DIV_ASSIGN  shift, and go to state 60
    EQ          shift, and go to state 61
    NEQ         shift, and go to state 62
    GQT         shift, and go to state 63
    LQT         shift, and go to state 64
    GT          shift, and go to state 65
    LT          shift, and go to state 66
    ADD         shift, and go to state 67
    SUB         shift, and go to state 68
    MUL         shift, and go to state 69
    DIV         shift, and go to state 70
    MODE        shift, and go to state 71
    AND         shift, and go to state 72
    OR          shift, and go to state 73

    $default  reduce using rule 28 (declaration)


State 123

   18 while: WHILE LP expr RP statement .

    $default  reduce using rule 18 (while)


State 124

   16 if_else: IF LP expr RP statement .
   17        | IF LP expr RP statement . ELSE statement

    ELSE  shift, and go to state 130

    $default  reduce using rule 16 (if_else)


State 125

   19 for: FOR LP statement statement expr . RP statement
   38 expr: expr . ASSIGN expr
   39     | expr . ADD_ASSIGN expr
   40     | expr . SUB_ASSIGN expr
   41     | expr . MUL_ASSIGN expr
   42     | expr . DIV_ASSIGN expr
   43     | expr . ADD expr
   44     | expr . SUB expr
   45     | expr . MUL expr
   46     | expr . DIV expr
   47     | expr . MODE expr
   52     | expr . AND expr
   53     | expr . OR expr
   55     | expr . EQ expr
   56     | expr . NEQ expr
   57     | expr . GQT expr
   58     | expr . LQT expr
   59     | expr . GT expr
   60     | expr . LT expr

    ASSIGN      shift, and go to state 56
    ADD_ASSIGN  shift, and go to state 57
    SUB_ASSIGN  shift, and go to state 58
    MUL_ASSIGN  shift, and go to state 59
    DIV_ASSIGN  shift, and go to state 60
    EQ          shift, and go to state 61
    NEQ         shift, and go to state 62
    GQT         shift, and go to state 63
    LQT         shift, and go to state 64
    GT          shift, and go to state 65
    LT          shift, and go to state 66
    ADD         shift, and go to state 67
    SUB         shift, and go to state 68
    MUL         shift, and go to state 69
    DIV         shift, and go to state 70
    MODE        shift, and go to state 71
    AND         shift, and go to state 72
    OR          shift, and go to state 73
    RP          shift, and go to state 131


State 126

   15 func_statement: T IDENTIFIER LP RP statement .

    $default  reduce using rule 15 (func_statement)


State 127

   25 io_list: io_list COMMA . expr

    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    NOT         shift, and go to state 10
    QUOTE       shift, and go to state 13
    IDENTIFIER  shift, and go to state 21
    INTEGER     shift, and go to state 22
    CHAR        shift, and go to state 23
    STRING      shift, and go to state 24

    expr  go to state 132


State 128

   21 printf: PRINTF LP STRING COMMA io_list RP .

    $default  reduce using rule 21 (printf)


State 129

   23 scanf: SCANF LP STRING COMMA io_list RP .

    $default  reduce using rule 23 (scanf)


State 130

   17 if_else: IF LP expr RP statement ELSE . statement

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    NOT         shift, and go to state 10
    PRINTF      shift, and go to state 11
    SCANF       shift, and go to state 12
    QUOTE       shift, and go to state 13
    CONST       shift, and go to state 14
    SEMICOLON   shift, and go to state 15
    LC          shift, and go to state 16
    WHILE       shift, and go to state 17
    IF          shift, and go to state 18
    RETURN      shift, and go to state 19
    FOR         shift, and go to state 20
    IDENTIFIER  shift, and go to state 21
    INTEGER     shift, and go to state 22
    CHAR        shift, and go to state 23
    STRING      shift, and go to state 24

    statement       go to state 133
    func_statement  go to state 28
    if_else         go to state 29
    while           go to state 30
    for             go to state 31
    printf          go to state 32
    scanf           go to state 33
    declaration     go to state 34
    expr            go to state 35
    T               go to state 36


State 131

   19 for: FOR LP statement statement expr RP . statement

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    TRUE        shift, and go to state 6
    FALSE       shift, and go to state 7
    ADD         shift, and go to state 8
    SUB         shift, and go to state 9
    NOT         shift, and go to state 10
    PRINTF      shift, and go to state 11
    SCANF       shift, and go to state 12
    QUOTE       shift, and go to state 13
    CONST       shift, and go to state 14
    SEMICOLON   shift, and go to state 15
    LC          shift, and go to state 16
    WHILE       shift, and go to state 17
    IF          shift, and go to state 18
    RETURN      shift, and go to state 19
    FOR         shift, and go to state 20
    IDENTIFIER  shift, and go to state 21
    INTEGER     shift, and go to state 22
    CHAR        shift, and go to state 23
    STRING      shift, and go to state 24

    statement       go to state 134
    func_statement  go to state 28
    if_else         go to state 29
    while           go to state 30
    for             go to state 31
    printf          go to state 32
    scanf           go to state 33
    declaration     go to state 34
    expr            go to state 35
    T               go to state 36


State 132

   25 io_list: io_list COMMA expr .
   38 expr: expr . ASSIGN expr
   39     | expr . ADD_ASSIGN expr
   40     | expr . SUB_ASSIGN expr
   41     | expr . MUL_ASSIGN expr
   42     | expr . DIV_ASSIGN expr
   43     | expr . ADD expr
   44     | expr . SUB expr
   45     | expr . MUL expr
   46     | expr . DIV expr
   47     | expr . MODE expr
   52     | expr . AND expr
   53     | expr . OR expr
   55     | expr . EQ expr
   56     | expr . NEQ expr
   57     | expr . GQT expr
   58     | expr . LQT expr
   59     | expr . GT expr
   60     | expr . LT expr

    ASSIGN      shift, and go to state 56
    ADD_ASSIGN  shift, and go to state 57
    SUB_ASSIGN  shift, and go to state 58
    MUL_ASSIGN  shift, and go to state 59
    DIV_ASSIGN  shift, and go to state 60
    EQ          shift, and go to state 61
    NEQ         shift, and go to state 62
    GQT         shift, and go to state 63
    LQT         shift, and go to state 64
    GT          shift, and go to state 65
    LT          shift, and go to state 66
    ADD         shift, and go to state 67
    SUB         shift, and go to state 68
    MUL         shift, and go to state 69
    DIV         shift, and go to state 70
    MODE        shift, and go to state 71
    AND         shift, and go to state 72
    OR          shift, and go to state 73

    $default  reduce using rule 25 (io_list)


State 133

   17 if_else: IF LP expr RP statement ELSE statement .

    $default  reduce using rule 17 (if_else)


State 134

   19 for: FOR LP statement statement expr RP statement .

    $default  reduce using rule 19 (for)
